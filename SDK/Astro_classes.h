#pragma once

// Name: Astroneer-SDK, Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Classes
//---------------------------------------------------------------------------

// Class Astro.Activation
// 0x0048 (0x0070 - 0x0028)
class UActivation : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnActivate;                                               // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeactivate;                                             // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChange;                                                 // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               m_bActive;                                                // 0x0058(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	TArray<struct FSignalActivationBinding>            Bindings;                                                 // 0x0060(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Activation");
		return ptr;
	}


	bool Update(bool active);
	void UnbindTo(class UActivation* Other);
	void Toggle();
	bool IsActive();
	void Deactivate();
	void BindTo(class UActivation* Other);
	void Activate();
};


// Class Astro.ActorAttachmentsComponent
// 0x00B8 (0x01A8 - 0x00F0)
class UActorAttachmentsComponent : public UActorComponent
{
public:
	unsigned char                                      MaxAttachedPlayerCount;                                   // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UsePlanetCameraUp;                                        // 0x00F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AllowFreeCam;                                             // 0x00F2(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DisableViewTargetChangeOnExit;                            // 0x00F3(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EntryInterpolationTime;                                   // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              EntryInterpolationEaseOutExponent;                        // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExitInterpolationTime;                                    // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ExitInterpolationEaseOutExponent;                         // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DetachGroundedTrace;                                      // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanEnter;                                                 // 0x0108(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSetLanded;                                              // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEnterExit;                                              // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorCompletedEntry;                                    // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActorCompletedExit;                                     // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FAttachmentDefinition>               AttachmentDefinitions;                                    // 0x0150(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FAttachmentState>                    AttachmentStates;                                         // 0x0160(0x0010) (Net, ZeroConstructor, SaveGame)
	TArray<struct FAttachmentState>                    OldAttachments;                                           // 0x0170(0x0010) (ZeroConstructor)
	struct FScriptMulticastDelegate                    OnPerformAux1Action;                                      // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPerformAux2Action;                                      // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	uint32_t                                           ExitSuppressionCount;                                     // 0x01A0(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x01A4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorAttachmentsComponent");
		return ptr;
	}


	bool STATIC_TogglePlayerAttachedStorage(class APlayerController* Controller, class UStorageChassisComponent* storage, bool bImmediate, bool bForce, bool* Toggled);
	bool ToggleClickPlayerAttached(bool* Toggled);
	bool ToggleAttached(class AActor* Actor, bool setViewTarget, bool bImmediate, bool* Toggled);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void PushExitSuppression();
	void PopExitSuppression();
	void OnRep_Attachments();
	void OnAttachedActorDestroyed(class AActor* DestroyedActor);
	bool HasPlayer();
	bool HasController(class APlayController* Controller);
	bool HasClickPlayer();
	bool HasActor(class AActor* Actor, int* outIndex);
	class AActor* GetFirstAttachedActor();
	struct FTransform GetDetachTransform(int I);
	struct FTransform GetAttachTransform(int I);
	void FinishExiting(int I);
	void DetachAll(bool bImmediate);
	bool CanExit();
	TArray<class APlayController*> STATIC_AttachedArrayPlayers(TArray<class UActorAttachmentsComponent*> Attachments);
	bool STATIC_AttachedArrayHasPlayer(TArray<class UActorAttachmentsComponent*> Attachments);
	class UActorAttachmentsComponent* STATIC_AttachedArrayHasActor(TArray<class UActorAttachmentsComponent*> Attachments, class AActor* Actor, int* outIndex);
	class USceneComponent* STATIC_AttachedArrayAvailable(TArray<class UActorAttachmentsComponent*> Attachments, const struct FVector& Location);
	class UActorAttachmentsComponent* STATIC_ActorActorAttachmentsComponent(class AActor* Actor);
};


// Class Astro.ActorEntityLinkComponent
// 0x0048 (0x0138 - 0x00F0)
class UActorEntityLinkComponent : public UActorComponent
{
public:
	struct FAstroEntityDefinition                      EntityDefinition;                                         // 0x00F0(0x0030) (Edit, DisableEditOnInstance)
	struct FAstroDatumRef                              EntityRef;                                                // 0x0120(0x0010) (SaveGame)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorEntityLinkComponent");
		return ptr;
	}


	bool IsSpawnedFromEntity();
	struct FAstroDatumRef GetEntityDatumRef(bool* bOutSuccess);
};


// Class Astro.ActorGateObjectComponent
// 0x00A0 (0x0190 - 0x00F0)
class UActorGateObjectComponent : public UActorComponent
{
public:
	unsigned char                                      bHasPlayerProximityEvent : 1;                             // 0x00F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAnimatesInOutroCinematic : 1;                            // 0x00F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              PlayerProximityEventTriggerDistance;                      // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFirstPlayerEncountered;                                 // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerEnteredProximity;                                 // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerExitedProximity;                                  // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCanBeActivatedChanged;                                  // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsActivatedChanged;                                     // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGateObjectReplicationData                  ReplicationData;                                          // 0x0148(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0160(0x0018) MISSED OFFSET
	class USphereComponent*                            ProximitySphereComponent;                                 // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class USkeletalMeshComponent*>              SkeletalMeshes;                                           // 0x0180(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorGateObjectComponent");
		return ptr;
	}


	void OnRep_ReplicationData();
	void OnPlayerProximitySphereEndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnPlayerProximitySphereBeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOutroCinematicStarted();
	void OnOutroCinematicCompleted();
};


// Class Astro.ActorHarvestableComponent
// 0x0188 (0x0278 - 0x00F0)
class UActorHarvestableComponent : public UActorComponent
{
public:
	TArray<struct FHarvestableItemSpawnerDefinition>   PrimaryItemSpawners;                                      // 0x00F0(0x0010) (Edit, ZeroConstructor)
	struct FRuntimeFloatCurve                          PrimaryItemNumberProbabilityCurve;                        // 0x0100(0x0078) (Edit)
	TArray<struct FHarvestableItemSpawnerDefinition>   SecondaryItemSpawners;                                    // 0x0178(0x0010) (Edit, ZeroConstructor)
	struct FRuntimeFloatCurve                          SecondaryItemNumberWithPrimaryItemsProbabilityCurve;      // 0x0188(0x0078) (Edit)
	struct FRuntimeFloatCurve                          SecondaryItemNumberNoPrimaryItemsProbabilityCurve;        // 0x0200(0x0078) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorHarvestableComponent");
		return ptr;
	}

};


// Class Astro.ActorItemConverterComponent
// 0x0158 (0x0248 - 0x00F0)
class UActorItemConverterComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSystemMigrationCheckStarted;                            // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAuthorityItemConversionCompleted;                       // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActiveConversionsAdded;                                 // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActiveConversionsRemoved;                               // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateChanged;                                           // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWantsToBeActiveChanged;                                 // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnViewDataChanged;                                        // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplicationDataInitialized;                             // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FName>                               InputSlotNames;                                           // 0x0170(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               OutputSlotNames;                                          // 0x0180(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	class UClass*                                      ConversionFormulaType;                                    // 0x0190(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      OutputItemTypeList;                                       // 0x0198(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinPowerUnitProductionTime;                               // 0x01A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPowerUnitProductionTime;                               // 0x01A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEjectCompletedOutputItem;                                // 0x01A8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x01A9(0x0003) MISSED OFFSET
	float                                              OutputItemEjectionForce;                                  // 0x01AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EInputManagementType                               InputSlotsOrganizationRuleType;                           // 0x01B0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bAutoActivateWhenConversionAvailable : 1;                 // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCannotProcessConversionsInParallel : 1;                  // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bRequiresExplicitShutdown : 1;                            // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bInputSlotsAreUnclickable : 1;                            // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bOutputSlotIsUnclickable : 1;                             // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDetonatesVolatileInputItems : 1;                         // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShowOutputIndicatorsWhenSelectingRecipe : 1;             // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bForceRecipeSelection : 1;                                // 0x01B1(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCanUseActorItemComponentAsInput : 1;                     // 0x01B2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bProduceOutputsToUniqueSlots : 1;                         // 0x01B2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bKeepPartialOutputBetweenSaves : 1;                       // 0x01B2(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x5];                                       // 0x01B3(0x0005) MISSED OFFSET
	struct FItemConverterReplicationData               ReplicationData;                                          // 0x01B8(0x0030) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FItemConverterReplicationData               PrevReplicationData;                                      // 0x01E8(0x0030) (BlueprintVisible, BlueprintReadOnly)
	TArray<struct FSlotReference>                      InputSlotRefs;                                            // 0x0218(0x0010) (ZeroConstructor)
	TArray<struct FSlotReference>                      OutputSlotRefs;                                           // 0x0228(0x0010) (ZeroConstructor)
	TWeakObjectPtr<class URecipeOrganizationRule>      RecipeOrganizationRule;                                   // 0x0238(0x0008) (ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UOutputOrganizationRule>      OutputOrganizationRule;                                   // 0x0240(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorItemConverterComponent");
		return ptr;
	}


	void OnReplicationDataChanged();
	void OnAuthorityRemovedActiveItemConversion(const struct FActiveItemConversion& activeConversion);
	void OnAuthorityAddedActiveItemConversion(const struct FActiveItemConversion& activeConversion);
	bool STATIC_IsItemConversionRecipeInputStatusValid(const struct FItemConversionRecipeInputStatus& ItemConversionRecipeInputStatus);
	bool STATIC_IsItemConversionInputItemStatusValid(const struct FItemConversionInputItemStatus& ItemConversionIngredientStatus);
	void HandleItemChangedInExternalResourceSlot(class APhysicalItem* changedItem);
	struct FRecipe GetSelectedOutputRecipe();
	class UClass* GetSelectedOutputItemType();
	struct FItemConversionRecipeInputStatus GetConversionRecipeInputStatus(const struct FRecipe& Recipe);
	void AuthoritySetSelectedOutputItemTypeIndex(int newIndex);
	void AuthoritySetExternalResourceProviderSlotsForPlayer(class AAstroCharacter* controllingPlayer);
	void AuthoritySetConverterWantsToBeActive(bool active);
	void AuthorityIncrementSelectedOutputItemTypeIndex(bool AllowIndexWrapping);
	void AuthorityHandleItemComponentChanged();
	EItemConverterState AuthorityGetItemConverterState();
	void AuthorityDecrementSelectedOutputItemTypeIndex(bool AllowIndexWrapping);
	void AuthorityCancelActiveConversions();
};


// Class Astro.ActorLockableComponent
// 0x0010 (0x0100 - 0x00F0)
class UActorLockableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsUnlockedChangedAuthority;                             // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorLockableComponent");
		return ptr;
	}


	void OnAuthorityLockedStateChanged(const struct FAstroDatumRef& lockableComponentRef, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.ActorLockComponent
// 0x0030 (0x0120 - 0x00F0)
class UActorLockComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnIsUnlockedChangedAuthority;                             // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLockingMechanismOpenOrCloseAuthority;                   // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class ULockingMechanismView*>               LockingMechanismViews;                                    // 0x0110(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorLockComponent");
		return ptr;
	}


	void OnAuthorityLockingMechanismStateChanged(class ULockingMechanism* changedLockingMechanism, const struct FLockChangedEventMetadata& EventData);
	void OnAuthorityLockedStateChanged(const struct FAstroDatumRef& lockComponentRef, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.ActorResearchComponent
// 0x0100 (0x01F0 - 0x00F0)
class UActorResearchComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnWantsToResearchChanged;                                 // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsResearchingChanged;                                   // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResearchSubjectListChanged;                             // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResearchReplicationDataChanged;                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResearchStateChanged;                                   // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAuthorityChangedActiveResearchSubjects;                 // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnActiveResearchSubjectExpiredAuthority;                  // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FName>                               ResearchSlotNames;                                        // 0x0160(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ResearchPowerRequired;                                    // 0x0170(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumResearchPowerFraction;                             // 0x0174(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumResearchRateMultiplier;                            // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x017C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 UnderPoweredResearchRateCurve;                            // 0x0180(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumResearchPowerMultiplier;                           // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumResearchRateMutliplier;                            // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 OverPoweredResearchRateCurve;                             // 0x0190(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResearchSlotsUnclickableWhileActive;                     // 0x0198(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDestroyActiveResearchSubjectsOnInterruption;             // 0x0199(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	float                                              ExpiredResearchSubjectDestructionDelay;                   // 0x019C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FResearchReplicationData                    ResearchReplicationData;                                  // 0x01A0(0x0020) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData02[0x20];                                      // 0x01C0(0x0020) MISSED OFFSET
	TArray<struct FSlotReference>                      ResearchSlotRefs;                                         // 0x01E0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorResearchComponent");
		return ptr;
	}


	void OnRep_ResearchData();
	bool AuthorityStartOrInterruptResearch(class APlayController* InstigatingController);
	void AuthorityChangedActiveResearchSubjects(const struct FAstroDatumRef& ResearchComponentRef, TArray<struct FAttachedResearchSubject> ActiveResearchSubjects);
	void AuthorityActiveResearchSubjectExpired(const struct FAstroDatumRef& ResearchComponentRef, const struct FAttachedResearchSubject& ExpiredAttachedResearchSubject);
};


// Class Astro.SingleUseConsumableComponent
// 0x0040 (0x0130 - 0x00F0)
class USingleUseConsumableComponent : public UActorComponent
{
public:
	unsigned char                                      bHasBeenConsumed : 1;                                     // 0x00F0(0x0001) (Net, Transient)
	unsigned char                                      bSuppressUseAfterConsumption : 1;                         // 0x00F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSuppressExamineAfterConsumption : 1;                     // 0x00F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UParticleSystem*                             ConsumptionVFX;                                           // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FComponentReference                         VFXSpawnComponent;                                        // 0x0100(0x0018) (Edit, DisableEditOnInstance)
	struct FName                                       VFXSpawnSocketName;                                       // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     ConsumptionAudioEventName;                                // 0x0120(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SingleUseConsumableComponent");
		return ptr;
	}


	void OnRep_HasBeenConsumed(bool bWasConsumed);
};


// Class Astro.ActorResearchPointGrantComponent
// 0x0008 (0x0138 - 0x0130)
class UActorResearchPointGrantComponent : public USingleUseConsumableComponent
{
public:
	float                                              MinPointsGranted;                                         // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPointsGranted;                                         // 0x0134(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorResearchPointGrantComponent");
		return ptr;
	}

};


// Class Astro.TerrainModifierBase
// 0x13B0 (0x1660 - 0x02B0)
class UTerrainModifierBase : public USceneComponent
{
public:
	bool                                               Enabled;                                                  // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02B1(0x0003) MISSED OFFSET
	int                                                SeedOffset;                                               // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                EvaluationDepth;                                          // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                EdgeEvaluationDepth;                                      // 0x02BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x13A0];                                    // 0x02C0(0x13A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierBase");
		return ptr;
	}

};


// Class Astro.TerrainModifierLocal
// 0x0000 (0x1660 - 0x1660)
class UTerrainModifierLocal : public UTerrainModifierBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierLocal");
		return ptr;
	}

};


// Class Astro.TerrainPlacementComponent
// 0x0010 (0x1670 - 0x1660)
class UTerrainPlacementComponent : public UTerrainModifierLocal
{
public:
	int                                                OctreeResOffset;                                          // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AllowDecoratorOverlaps;                                   // 0x1664(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1665(0x0003) MISSED OFFSET
	float                                              ExclusionRadius;                                          // 0x1668(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x166C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainPlacementComponent");
		return ptr;
	}

};


// Class Astro.ActorSelectorComponent
// 0x0010 (0x1680 - 0x1670)
class UActorSelectorComponent : public UTerrainPlacementComponent
{
public:
	TArray<class UClass*>                              Actors;                                                   // 0x1670(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorSelectorComponent");
		return ptr;
	}

};


// Class Astro.ActorSolarPowerGeneratorComponent
// 0x0068 (0x0158 - 0x00F0)
class UActorSolarPowerGeneratorComponent : public UActorComponent
{
public:
	struct FComponentReference                         CastComponentRef;                                         // 0x00F0(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         SunFacingSolarPanelRef;                                   // 0x0108(0x0018) (Edit, DisableEditOnInstance)
	float                                              MinPowerOutput;                                           // 0x0120(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPowerOutput;                                           // 0x0124(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      SolarPanelShouldTrackSun : 1;                             // 0x0128(0x0001) (Edit, DisableEditOnInstance)
	ESolarGeneratorSunTrackingBehavior                 SunTrackingBehavior;                                      // 0x0129(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	float                                              SunFacingRotationLimit;                                   // 0x012C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SolarPanelRotatorInterpolationStrength;                   // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET
	class USceneComponent*                             CastComponent;                                            // 0x0138(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SunFacingSolarPanel;                                      // 0x0140(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0148(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0150(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorSolarPowerGeneratorComponent");
		return ptr;
	}


	void OnSpawnedInSlot();
	void OnReleasedFromSlot(bool NewOwner);
	void OnPlacedInSlot();
	void HandleStoppedGeneratingPower();
	void HandleStartedGeneratingPower();
	void HandlePickedUpFromWorld(bool PhysicalMovement);
	void HandleDroppedInWorld(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
};


// Class Astro.ActorStreamingPowerCableComponent
// 0x0028 (0x0118 - 0x00F0)
class UActorStreamingPowerCableComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnUpdateStreamingPowerCableVisualizationData;             // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FStreamingPowerCableVisualizationData       StreamingPowerCableVisualizationData;                     // 0x0100(0x0010) (Net)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0110(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorStreamingPowerCableComponent");
		return ptr;
	}


	void UpdateStreamingPowerCableVisualizationData__DelegateSignature(const struct FStreamingPowerCableVisualizationData& PowerCableVisualizationData);
	void SetDirectionalConnectionSplitRatio(float ratio);
	void OnSelfDestroyed(class AActor* Actor);
	void OnRep_VisualizationData();
	void MakeSlotConnection(const struct FSlotReference& From, const struct FSlotReference& To);
	void Disconnect();
};


// Class Astro.ActorStreamingPowerNodeComponent
// 0x0040 (0x0130 - 0x00F0)
class UActorStreamingPowerNodeComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnUpdatePowerVisualization;                               // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FStreamingPowerNodeVisualizationData        PowerVisualizationDataReplicated;                         // 0x0100(0x001C) (Net)
	bool                                               CanPropagateDirectionalConnectionSwaps;                   // 0x011C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x13];                                      // 0x011D(0x0013) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorStreamingPowerNodeComponent");
		return ptr;
	}


	void UpdateStreamingNodePowerVisualization__DelegateSignature(const struct FStreamingPowerNodeVisualizationData& VisualizationData);
	void OnRep_VisualizationData();
};


// Class Astro.ActorWindPowerGeneratorComponent
// 0x0050 (0x0140 - 0x00F0)
class UActorWindPowerGeneratorComponent : public UActorComponent
{
public:
	float                                              DebugLineWindVectorVerticalOffset;                        // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DebugLineWindDirectionScale;                              // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnWindPowerAnimationDataChanged;                          // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MinPowerOutput;                                           // 0x0108(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxPowerOutput;                                           // 0x010C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WindSpeedAnimationInterpolationStrength;                  // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WindDirAnimationInterpolationStrength;                    // 0x0114(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FWindPowerGeneratorReplicationData          WindPowerAnimationData;                                   // 0x0118(0x0010) (Net)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0128(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActorWindPowerGeneratorComponent");
		return ptr;
	}


	void OnWindPowerAnimationDataChanged__DelegateSignature(const struct FVector& WindNormal, float WindSpeed);
	void OnRep_AnimatedWindVec();
};


// Class Astro.ActuatorComponent
// 0x0018 (0x0108 - 0x00F0)
class UActuatorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnActuate;                                                // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USlotsComponent*                             SlotsComponent;                                           // 0x0100(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActuatorComponent");
		return ptr;
	}


	void MulticastOnActuate();
	void AuthorityScheduleActuation(class APlayController* Instigator, float Delay);
};


// Class Astro.ActuatorQueue
// 0x0010 (0x0038 - 0x0028)
class UActuatorQueue : public UObject
{
public:
	TArray<struct FActuationRequest>                   PendingRequests;                                          // 0x0028(0x0010) (ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ActuatorQueue");
		return ptr;
	}

};


// Class Astro.AdaptiveTickComponent
// 0x0010 (0x0100 - 0x00F0)
class UAdaptiveTickComponent : public UActorComponent
{
public:
	float                                              MinTickInterval;                                          // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTickInterval;                                          // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarTickDistance;                                          // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearTickDistance;                                         // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AdaptiveTickComponent");
		return ptr;
	}

};


// Class Astro.AdaptiveTickGroup
// 0x01B8 (0x0560 - 0x03A8)
class AAdaptiveTickGroup : public AActor
{
public:
	TArray<class AAstroCharacter*>                     m_characters;                                             // 0x03A8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FTickingObject>                      m_mobileObjects;                                          // 0x03B8(0x0010) (ZeroConstructor, Transient)
	TArray<struct FTickingObject>                      m_staticObjects;                                          // 0x03C8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x188];                                     // 0x03D8(0x0188) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AdaptiveTickGroup");
		return ptr;
	}

};


// Class Astro.TerrainModifier
// 0x0000 (0x1660 - 0x1660)
class UTerrainModifier : public UTerrainModifierBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifier");
		return ptr;
	}

};


// Class Astro.AdditiveModifier
// 0x0020 (0x1680 - 0x1660)
class UAdditiveModifier : public UTerrainModifier
{
public:
	class UTerrainBiomeProperties*                     BiomeProperties;                                          // 0x1660(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBiomeHazards*                               BiomeHazards;                                             // 0x1668(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UTerrainModifierBase*>                ChildModifiers;                                           // 0x1670(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AdditiveModifier");
		return ptr;
	}

};


// Class Astro.AstroAchievements
// 0x0000 (0x0028 - 0x0028)
class UAstroAchievements : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroAchievements");
		return ptr;
	}


	void STATIC_IncrementAchievementProgressForAllPlayers(EAstroAchievementKeys Achievement, int AddedProgress, class UObject* WorldContextObject);
	void STATIC_IncrementAchievementProgress(EAstroAchievementKeys Achievement, int AddedProgress, class APlayerController* Player);
	void STATIC_IncrementAchievementFloatProgressForAllPlayers(EAstroAchievementKeys Achievement, float AddedProgress, class UObject* WorldContextObject);
	void STATIC_IncrementAchievementFloatProgress(EAstroAchievementKeys Achievement, float AddedProgress, class APlayerController* Player);
	void STATIC_AwardAchievementForAllPlayers(EAstroAchievementKeys Achievement, class UObject* WorldContextObject);
	void STATIC_AwardAchievement(EAstroAchievementKeys Achievement, class APlayerController* Player);
	void STATIC_AddAchievementCollectionItemForAllPlayers(EAstroAchievementKeys Achievement, class UClass* Item, class UObject* WorldContextObject);
	void STATIC_AddAchievementCollectionItem(EAstroAchievementKeys Achievement, class UClass* Item, class APlayerController* Player);
};


// Class Astro.AchievementDefinitionTable
// 0x0040 (0x0070 - 0x0030)
class UAchievementDefinitionTable : public UDataAsset
{
public:
	TArray<struct FCountAchievement>                   CountAchievements;                                        // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FFloatCountAchievement>              FloatCountAchievements;                                   // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FItemCollectionAchievement>          ItemCollectionAchievements;                               // 0x0050(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FThresholdAchievementDefinition>     ThresholdAchievements;                                    // 0x0060(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AchievementDefinitionTable");
		return ptr;
	}

};


// Class Astro.AstroAction
// 0x0050 (0x0078 - 0x0028)
class UAstroAction : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnActionEnded;                                            // 0x0030(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      RequiredResources;                                        // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      Priority;                                                 // 0x0041(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bInterruptedBySamePriority : 1;                           // 0x0042(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0043(0x0001) MISSED OFFSET
	struct FAstroActionIdentifier                      Identifier;                                               // 0x0044(0x0004) (IsPlainOldData)
	EAstroActionState                                  State;                                                    // 0x0048(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FAstroActionContext                         Context;                                                  // 0x0050(0x0018) (BlueprintVisible, BlueprintReadOnly)
	TArray<class UGameplayTask*>                       ActiveTasks;                                              // 0x0068(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroAction");
		return ptr;
	}

};


// Class Astro.AstroActionComponent
// 0x0018 (0x0180 - 0x0168)
class UAstroActionComponent : public UGameplayTasksComponent
{
public:
	TArray<class UAstroAction*>                        ActiveActions;                                            // 0x0168(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0178(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroActionComponent");
		return ptr;
	}


	bool StartActionInstance(class UAstroAction* Action);
	bool StartAction(class UClass* ActionType);
	void ServerRequestStartAction(const struct FAstroActionRequestPayload& payload);
	void ServerRequestInterruptAction(const struct FAstroActionIdentifier& actionToInterruptIdentifier);
	void OnActionEnded(class UAstroAction* EndedAction);
	void MulticastStartAction(const struct FAstroActionRequestPayload& payload);
	void MulticastInterruptAction(const struct FAstroActionIdentifier& interruptedActionIdentifier);
	class UAstroAction* CreateAction(class UClass* ActionType);
	void ClientDenyStartActionRequest(const struct FAstroActionIdentifier& deniedActionIdentifier);
};


// Class Astro.AstroAIPawn
// 0x0028 (0x0430 - 0x0408)
class AAstroAIPawn : public APawn
{
public:
	class USceneComponent*                             TargetingOriginNode;                                      // 0x0408(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             AttackOriginNode;                                         // 0x0410(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FRotator                                    AttackRotator;                                            // 0x0418(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               CalculateAttackRotatorOnlyInZ;                            // 0x0424(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsWarning;                                                // 0x0425(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0426(0x0002) MISSED OFFSET
	class UAstroActionComponent*                       ActionComponent;                                          // 0x0428(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroAIPawn");
		return ptr;
	}

};


// Class Astro.AstroAnalytics
// 0x0000 (0x0028 - 0x0028)
class UAstroAnalytics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroAnalytics");
		return ptr;
	}


	void STATIC_RecordEventWithAttributes(const struct FString& EventName, TArray<struct FAnalyticsEventAttr> Attributes, class APlayerController* Player);
	void STATIC_RecordEventWithAttribute(const struct FString& EventName, const struct FString& AttributeName, const struct FString& AttributeValue, class APlayerController* Player);
	void STATIC_RecordEventResourceCollected(const struct FString& ResourceName, int Count, class APlayerController* Player);
	void STATIC_RecordEventPlanetfall(const struct FString& Planet, class APlayerController* Player);
	void STATIC_RecordEventItemUnlocked(const struct FString& Name, class APlayerController* Player);
	void STATIC_RecordEventItemCrafted(const struct FString& ItemType, int Count, class APlayerController* Player);
	void STATIC_RecordEventCustomization(const struct FString& Name, class APlayerController* Player, struct FString* Value);
	void STATIC_RecordEvent(const struct FString& EventName, class APlayerController* Player);
	void STATIC_AccumulateCounter(EAstroTelemetryCounter counter, float Value);
};


// Class Astro.AstroApplyTransformTask
// 0x00B8 (0x0120 - 0x0068)
class UAstroApplyTransformTask : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate                    OnTransformCompleted;                                     // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0078(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroApplyTransformTask");
		return ptr;
	}


	void SetTargetRelativeTransform(const struct FTransform& targetRelativeTransform, class UCurveFloat* relativeTransformProgressCurve);
	class UAstroApplyTransformTask* STATIC_CreateAstroApplyTransformTask(class UAstroAction* OwningAction, const struct FName& TaskInstanceName, class USceneComponent* SceneComponent, float Duration, class UCurveVector* LocationCurve, class UCurveVector* RotationCurve, class UCurveVector* ScaleCurve);
};


// Class Astro.AstroAudioStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroAudioStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroAudioStatics");
		return ptr;
	}


	void STATIC_SetSwitch(const struct FName& SwitchGroup, const struct FName& SwitchState, class AActor* Actor);
	void STATIC_SetState(const struct FName& StateGroup, const struct FName& State);
	void STATIC_SetRTPCValue(const struct FName& RTPC, float Value, int InterpolationTimeMs, class AActor* Actor);
	int STATIC_PostEventAttached(const struct FString& EventName, class AActor* Actor, const struct FName& AttachPointName, bool bStopWhenAttachedToDestroyed);
	int STATIC_PostEventAtLocation(const struct FString& EventName, const struct FVector& Location, const struct FRotator& Orientation, class UObject* WorldContextObject);
	int STATIC_PostEvent(const struct FString& EventName, class AActor* Actor, bool bStopWhenAttachedToDestroyed);
};


// Class Astro.AstroCharacter
// 0x0498 (0x08A0 - 0x0408)
class AAstroCharacter : public APawn
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0408(0x0008) MISSED OFFSET
	class USceneComponent*                             BaseLocation;                                             // 0x0410(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              FallDampening;                                            // 0x0418(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CurrentSpeed;                                             // 0x041C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CurrentVelocity;                                          // 0x0420(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	struct FVector                                     LastTerrainNormal;                                        // 0x042C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               Driving;                                                  // 0x0438(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Dying;                                                    // 0x0439(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Walking;                                                  // 0x043A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SwappingItem;                                             // 0x043B(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x043C(0x0004) MISSED OFFSET
	class AActor*                                      DrivingActor;                                             // 0x0440(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      AttachOwner;                                              // 0x0448(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              HeavyCarryingSlot;                                        // 0x0450(0x0010) (BlueprintVisible)
	struct FComponentReference                         AddBrushReference;                                        // 0x0460(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         SubtractBrushReference;                                   // 0x0478(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         FlatBrushReference;                                       // 0x0490(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         ColorPaintBrushReference;                                 // 0x04A8(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         ColorPickerBrushReference;                                // 0x04C0(0x0018) (Edit, DisableEditOnInstance)
	bool                                               Jumped;                                                   // 0x04D8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	bool                                               JumpInputReceived;                                        // 0x04D9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x04DA(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnCharacterCustomizationChanged;                          // 0x04E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x10];                                      // 0x04F0(0x0010) MISSED OFFSET
	bool                                               Sprinting;                                                // 0x0500(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0501(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLocalSolarBodyChanged;                                  // 0x0508(0x0010) (ZeroConstructor, InstancedReference)
	class UStaticMesh*                                 HoldingIndicatorMesh;                                     // 0x0518(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          HoldingIndicatorMaterial;                                 // 0x0520(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 HoldingIndicatorDirMesh;                                  // 0x0528(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          HoldingIndicatorDirMaterial;                              // 0x0530(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0538(0x0010) MISSED OFFSET
	class UStaticMeshComponent*                        HoldingIndicatorMeshComponent;                            // 0x0548(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        HoldingIndicatorDirMeshComponent;                         // 0x0550(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      HeldItem;                                                 // 0x0558(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	TArray<class UPrimitiveComponent*>                 HeldItemViewPrimitives;                                   // 0x0560(0x0010) (ExportObject, ZeroConstructor, Transient)
	float                                              grabAnimSpeed;                                            // 0x0570(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0574(0x0004) MISSED OFFSET
	struct FComponentReference                         InteractingCrackableClientPlacementComponent;             // 0x0578(0x0018) (Edit, DisableEditOnInstance)
	bool                                               Focusing;                                                 // 0x0590(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FocusingRotation;                                         // 0x0591(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HoldingTool;                                              // 0x0592(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsHeavyCarrying;                                          // 0x0593(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BackpackRaised;                                           // 0x0594(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0595(0x0003) MISSED OFFSET
	struct FVector                                     FocusLocation;                                            // 0x0598(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      AccentMaterialIndex;                                      // 0x05A4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x05A5(0x0003) MISSED OFFSET
	struct FRotator                                    LookAngle;                                                // 0x05A8(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              LastGestureTime;                                          // 0x05B4(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAstroCharacterMovementComponent*            AstroMovementComponent;                                   // 0x05B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           CapsuleComponent;                                         // 0x05C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      MeshComponent;                                            // 0x05C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    WindParticles;                                            // 0x05D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ItemSpawnPreviewLocation;                                 // 0x05D8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UChildSlotComponent*                         ItemSpawnPreviewSlot;                                     // 0x05E0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FVector                                     CreativeDroneLaunchPointLocalPosition;                    // 0x05E8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     CreativeDroneLaunchPointLocalRotation;                    // 0x05F4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     BaseTranslationOffset;                                    // 0x0600(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x060C(0x0004) MISSED OFFSET
	struct FQuat                                       BaseRotationOffset;                                       // 0x0610(0x0010) (IsPlainOldData)
	struct FVector_NetQuantize10                       ReplicatedVelocity;                                       // 0x0620(0x000C) (Net)
	unsigned char                                      ReplicatedMovementMode;                                   // 0x062C(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x062D(0x0003) MISSED OFFSET
	float                                              FoliageSoundCollisionRadius;                              // 0x0630(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x0634(0x0004) MISSED OFFSET
	struct FString                                     DamageImpactSoundEvent;                                   // 0x0638(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnCreativeDroneFlightStateChanged;                        // 0x0648(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               DisableLight;                                             // 0x0658(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0659(0x0007) MISSED OFFSET
	class ASolarBody*                                  LocalSolarBody;                                           // 0x0660(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class UChildActorComponent*                        backpackChildActorComponent;                              // 0x0668(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      LastHeldItem;                                             // 0x0670(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroActionComponent*                       ActionComponent;                                          // 0x0678(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      PointActionType;                                          // 0x0680(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USceneComponent*                             AddBrushComponent;                                        // 0x0688(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SubtractBrushComponent;                                   // 0x0690(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             FlatBrushComponent;                                       // 0x0698(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ColorPickerBrushComponent;                                // 0x06A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ColorPaintBrushComponent;                                 // 0x06A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData13[0x80];                                      // 0x06B0(0x0080) MISSED OFFSET
	struct FAstroCharacterCustomization                CurrentCustomization;                                     // 0x0730(0x0038) (BlueprintVisible, BlueprintReadOnly, Net, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnLanded;                                                 // 0x0768(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData14[0x30];                                      // 0x0778(0x0030) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSkeletalMeshSet;                                        // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOxygenThresholdChanged;                                 // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSuffocatingChanged;                                     // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPowerStateChanged;                                      // 0x07D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLightStateChanged;                                      // 0x07E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOnlineNicknameChanged;                                  // 0x07F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData15[0x1];                                       // 0x0808(0x0001) MISSED OFFSET
	unsigned char                                      bIsOxygenFilling : 1;                                     // 0x0809(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData16 : 1;                                        // 0x0809(0x0001)
	unsigned char                                      bIsTired : 1;                                             // 0x0809(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bHaveLifeSupport : 1;                                     // 0x0809(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bBreathing : 1;                                           // 0x0809(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bIsSuffocating : 1;                                       // 0x0809(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData17 : 1;                                        // 0x0809(0x0001)
	unsigned char                                      bIsAlive : 1;                                             // 0x0809(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bIsPowered : 1;                                           // 0x080A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      bIsLightsOn : 1;                                          // 0x080A(0x0001) (BlueprintVisible, Net)
	unsigned char                                      bInvincible : 1;                                          // 0x080A(0x0001) (BlueprintVisible)
	unsigned char                                      bSimulationStarted : 1;                                   // 0x080A(0x0001) (Net)
	unsigned char                                      bFreeOxygen : 1;                                          // 0x080A(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	unsigned char                                      UnknownData18[0x1];                                       // 0x080B(0x0001) MISSED OFFSET
	float                                              OxygenUseMultiplier;                                      // 0x080C(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FatigueLevel;                                             // 0x0810(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              OxygenLevel;                                              // 0x0814(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData19[0x4];                                       // 0x0818(0x0004) MISSED OFFSET
	float                                              Health;                                                   // 0x081C(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData20[0x4];                                       // 0x0820(0x0004) MISSED OFFSET
	float                                              MaxHealth;                                                // 0x0824(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DeathAnim;                                                // 0x0828(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData21[0x4];                                       // 0x082C(0x0004) MISSED OFFSET
	float                                              StormEncumbrance;                                         // 0x0830(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              LightIntensity;                                           // 0x0834(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData22[0x8];                                       // 0x0838(0x0008) MISSED OFFSET
	struct FSlotReference                              TetherSlotRef;                                            // 0x0840(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient)
	class UClass*                                      FilterBundleType;                                         // 0x0850(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StoredOxygenType;                                         // 0x0858(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OxygenType;                                               // 0x0860(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SafeZoneRadius;                                           // 0x0868(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData23[0x34];                                      // 0x086C(0x0034) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacter");
		return ptr;
	}


	void UpdateSpawnPreviewIndicator();
	void UpdatePlayerIndex();
	void UpdateHeldItem();
	void ToggleDeformTool();
	void SlotIndicatorClickedView();
	void SlotIndicatorClicked(const struct FSlotReference& Slot, class UClass* Type);
	void SetSprinting(bool Sprint);
	void SetPlayerIndex(unsigned char Index);
	void SetHoverDown(bool hover);
	void SetFreeOxygen(bool bNewFreeOxygen);
	void SetBackpackChildActorComponent(class UChildActorComponent* backpackChildActorComponent);
	void ServerSetCreativeDroneDeployed(bool IsDeployed);
	void ServerDropHeavyCarriedItems();
	void ReapplySavedCharacterCustomization();
	void QuickItemClickView(class APhysicalItem* Item);
	bool QuickItemClick(class APhysicalItem* Item);
	void PointItem(class UClass* ItemType, class UClass* PingSymbol, const struct FVector& Location, const struct FVector& Normal);
	void PlayDamageSound();
	void PlaceTetherFromBackpack();
	void OnRep_LocalSolarBody(class ASolarBody* oldSolarBody);
	void OnRep_IsPowered();
	void OnRep_Health();
	void OnRep_FreeOxygen();
	void OnRep_CharacterCustomization();
	void OnParentAttach(class AActor* Parent, bool Entering);
	void OnGameplayStarted();
	void OnBrushColorChanged(const struct FTerrainMaterial& TerrainMaterial);
	void NotifyPlayerDeathBegin();
	void MulticastPointItem(class UClass* ItemType, class UClass* PingSymbol, const struct FVector& Location, const struct FVector_NetQuantizeNormal& Normal);
	void HandleOnGameplayStartedEvent(bool StartedInExistingSavedGame);
	bool GetSprinting();
	struct FTransform GetSpawnPreviewTransform();
	class APlayController* GetPlayController();
	struct FString GetOnlinePlayerName();
	class ASolarBody* GetLocalSolarBody();
	class AAstroPlanet* GetLocalPlanet();
	bool GetHoverDown();
	struct FVector GetHeadLocation();
	EDroneControlState GetDroneControlState();
	class ADeformTool* GetDeformTool();
	class ADroneBase* GetCreativeDrone();
	class UAstroVisorMaterial* GetCharacterVisorMaterial();
	class UAstroCharacterSuit* GetCharacterSuit();
	class UAstroCharacterPalette* GetCharacterPalette();
	class UAstroCharacterHat* GetCharacterHat(ECharacterHatCategory Category);
	class ABackpack* GetBackpack();
	void Focus(const struct FVector& Location, bool rotationOnly);
	void EndFocus();
	void DoJump();
	void DetachFromSeat(bool bImmediate, bool bForce);
	bool CanSprint();
	void CancelIdle();
	void AuthoritySetLocalSolarBody(class ASolarBody* SolarBody);
	void AuthoritySetCharacterVisorMaterial(class UAstroVisorMaterial* visorColor);
	void AuthoritySetCharacterSuit(class UAstroCharacterSuit* Suit);
	void AuthoritySetCharacterPalette(class UAstroCharacterPalette* Palette);
	void AuthoritySetCharacterOverlayPattern(class UAstroCharacterOverlayPattern* OverlayPattern);
	void AuthoritySetCharacterHat(class UAstroCharacterHat* Hat, ECharacterHatCategory Category);
	void AuthoritySetCharacterCustomization(const struct FAstroCharacterCustomization& Customization);
	void AuthorityForceKillAstro();
	float ApplyPowerExternal(int Amount);
	int ApplyOxygenExternal(int Amount);
	void ApplyCharacterCustomization(const struct FAstroCharacterCustomization& Customization);
};


// Class Astro.AstroCharacterMovementComponent
// 0x0360 (0x0450 - 0x00F0)
class UAstroCharacterMovementComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	class AAstroCharacter*                             CharacterOwner;                                           // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         UpdatedComponent;                                         // 0x0100(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5C];                                      // 0x0108(0x005C) MISSED OFFSET
	struct FVector                                     Velocity;                                                 // 0x0164(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              Gravity;                                                  // 0x0170(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEnableScopedMovementUpdates : 1;                         // 0x0174(0x0001) (Edit)
	unsigned char                                      bNetworkUpdateReceived : 1;                               // 0x0174(0x0001) (Transient)
	unsigned char                                      bNetworkMovementModeChanged : 1;                          // 0x0174(0x0001) (Transient)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0175(0x000B) MISSED OFFSET
	float                                              NetworkSimulatedSmoothLocationTime;                       // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkSimulatedSmoothRotationTime;                       // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinTimeBetweenTimeStampResets;                            // 0x0188(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsCreativeModeDrone;                                     // 0x018C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x018D(0x0003) MISSED OFFSET
	unsigned char                                      bMovementInProgress : 1;                                  // 0x0190(0x0001)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0191(0x0003) MISSED OFFSET
	struct FVector                                     Acceleration;                                             // 0x0194(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x01A0(0x0018) MISSED OFFSET
	struct FVector                                     PendingForceToApply;                                      // 0x01B8(0x000C) (IsPlainOldData)
	struct FVector                                     PendingImpulseToApply;                                    // 0x01C4(0x000C) (IsPlainOldData)
	float                                              GravitySourceInterpolationTime;                           // 0x01D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x98];                                      // 0x01D4(0x0098) MISSED OFFSET
	struct FVector                                     CurrentGravity;                                           // 0x026C(0x000C) (IsPlainOldData)
	float                                              Mass;                                                     // 0x0278(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RotationSpeed;                                            // 0x027C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SprintMultiplier;                                         // 0x0280(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxAcceleration;                                          // 0x0284(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              InitialPushForceFactor;                                   // 0x0288(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PushForceFactor;                                          // 0x028C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x0290(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationWalking;                               // 0x0294(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundFriction;                                           // 0x0298(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UpslopeSlowdownStartThreshold;                            // 0x029C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeedSliding;                                          // 0x02A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideStartSpeedThreshold;                                 // 0x02A4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideExitSpeedThreshold;                                  // 0x02A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationSliding;                               // 0x02AC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GroundFrictionSliding;                                    // 0x02B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideMaxHangTime;                                         // 0x02B4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideBlockedDistanceThreshold;                            // 0x02B8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideBlockedBrakingDeceleration;                          // 0x02BC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlideBlockedGroundFriction;                               // 0x02C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrakingDecelerationFalling;                               // 0x02C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AirFriction;                                              // 0x02C8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingSurfaceFriction;                                    // 0x02CC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingSurfaceBrakingDeceleration;                         // 0x02D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingAirFriction;                                        // 0x02D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingAirBrakingDeceleration;                             // 0x02D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FlyingSlideOnSurfaceDotProductThreshold;                  // 0x02DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAstroCharacterEncumbrance                  LimitedMovementEncumbrance;                               // 0x02E0(0x000C) (Edit)
	struct FAstroCharacterEncumbrance                  HeavyCarryEncumbrance;                                    // 0x02EC(0x000C) (Edit)
	TArray<struct FAstroCharacterEncumbrance>          HeldItemEncumbranceByTier;                                // 0x02F8(0x0010) (Edit, ZeroConstructor)
	float                                              DownhillBias;                                             // 0x0308(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              JumpVerticalImpulse;                                      // 0x030C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              JumpBoostImpulse;                                         // 0x0310(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EAstroMovementMode                                 CurrentMovementMode;                                      // 0x0314(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0315(0x0003) MISSED OFFSET
	float                                              AirControlDampening;                                      // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bHasAirControl : 1;                                       // 0x031C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData08[0x3];                                       // 0x031D(0x0003) MISSED OFFSET
	float                                              MinFallingDamageVelocity;                                 // 0x0320(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxFallingDamageVelocity;                                 // 0x0324(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FString                                     GravityVolumeChangedAudioEvent;                           // 0x0328(0x0010) (Edit, ZeroConstructor)
	float                                              MinCreativeModeFlightSpeedScalar;                         // 0x0338(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxCreativeModeFlightSpeedScalar;                         // 0x033C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CreativeModeFlightSpeedScalar;                            // 0x0340(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData09[0x10C];                                     // 0x0344(0x010C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterMovementComponent");
		return ptr;
	}


	void SetUpdatedComponent(class UPrimitiveComponent* NewUpdatedComponent);
	void SetCreativeModeFlightSpeedScalarNormalized(float NormalizedCreativeModeFlightSpeedScalar);
	void ServerMoveOld(float OldTimeStamp, const struct FVector_NetQuantize10& OldInputAccel, unsigned char OldMoveFlags, const struct FAstroCharacterEncumbrance& Encumbrance, const struct FAstroCharacterActiveOverrides& Overrides);
	void ServerMoveFocus(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& clientLoc, const struct FVector_NetQuantize100& FocusLoc, unsigned char CompressedMoveFlags, unsigned char ClientMovementMode, const struct FAstroCharacterEncumbrance& Encumbrance, const struct FAstroCharacterActiveOverrides& Overrides);
	void ServerMoveDual(float TimeStamp0, const struct FVector_NetQuantize10& InAccel0, unsigned char PendingFlags, uint32_t View0, const struct FAstroCharacterEncumbrance& Encumbrance0, const struct FAstroCharacterActiveOverrides& Overrides0, float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& clientLoc, unsigned char NewFlags, uint16_t clientRoll, uint32_t View, const struct FAstroCharacterEncumbrance& Encumbrance, const struct FAstroCharacterActiveOverrides& Overrides, unsigned char ClientMovementMode);
	void ServerMove(float Timestamp, const struct FVector_NetQuantize10& InAccel, const struct FVector_NetQuantize100& clientLoc, unsigned char CompressedMoveFlags, uint16_t clientRoll, uint32_t View, unsigned char ClientMovementMode, const struct FAstroCharacterEncumbrance& Encumbrance, const struct FAstroCharacterActiveOverrides& Overrides);
	float GetCreativeModeFlightSpeedScalarNormalized();
	class AAstroCharacter* GetCharacterOwner();
	struct FVector ConsumeInputVector();
	void ClientVeryShortAdjustPosition(float Timestamp, const struct FVector& NewLoc, unsigned char ServerMovementMode, TArray<struct FMovementOverrideCorrection> OverrideCorrections);
	void ClientBumpVelocity(const struct FVector& velocityBump);
	void ClientAdjustPosition(float Timestamp, const struct FVector& NewLoc, const struct FVector& NewVel, unsigned char ServerMovementMode, TArray<struct FMovementOverrideCorrection> OverrideCorrections);
	void ClientAckGoodMove(float Timestamp);
	void CleanupMovementOverridesOnDriving();
	void AddMovementOverride(class UAstroCharacterMovementOverrideComponent* movementOverride);
	void AddInstantaneousVelocity(const struct FVector& velocityImpulse);
	void AddImpulse(const struct FVector& Impulse);
	void AddForce(const struct FVector& force);
	void AddAcceleration(const struct FVector& Acceleration);
};


// Class Astro.AstroCharacterMovementOverrideComponent
// 0x0048 (0x0138 - 0x00F0)
class UAstroCharacterMovementOverrideComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x48];                                      // 0x00F0(0x0048) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterMovementOverrideComponent");
		return ptr;
	}

};


// Class Astro.AstroPlayerController
// 0x0610 (0x0D10 - 0x0700)
class AAstroPlayerController : public APlayerController
{
public:
	struct FAchievementProgressReplicationData         AchievementReplicationData;                               // 0x0700(0x0040) (Net)
	unsigned char                                      UnknownData00[0x54];                                      // 0x0740(0x0054) MISSED OFFSET
	bool                                               EnableEscapeMenuToggle;                                   // 0x0794(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0795(0x0003) MISSED OFFSET
	struct FString                                     EscMenuToggleAudioEvent;                                  // 0x0798(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HelpMenuToggleAudioEvent;                                 // 0x07A8(0x0010) (Edit, ZeroConstructor)
	class UUserWidget*                                 CurrentHelpMenu;                                          // 0x07B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FName                                       FireworksAchievementLaunchCountKey;                       // 0x07C0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FireworksAchievementLaunchWindowKey;                      // 0x07C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnGameMenuResized;                                        // 0x07D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayFabClientDataRefreshed;                             // 0x07E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AActor*                                      ControlledVehicle;                                        // 0x07F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UPersistentLocalPlayerData*                  PersistentLocalData;                                      // 0x07F8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x50];                                      // 0x0800(0x0050) MISSED OFFSET
	int                                                MotionBlurQuality;                                        // 0x0850(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x1C];                                      // 0x0854(0x001C) MISSED OFFSET
	class UUserWidget*                                 CurrentDebugMenu;                                         // 0x0870(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0878(0x0010) MISSED OFFSET
	struct FNetUnstableActorReference                  PendingSelectionActor;                                    // 0x0888(0x0010) (Net)
	unsigned char                                      UnknownData05[0xA8];                                      // 0x0898(0x00A8) MISSED OFFSET
	TArray<class UVoxelVolumeComponent*>               VoxelVolumesAlreadyEncounteredForJIP;                     // 0x0940(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData06[0xA0];                                      // 0x0950(0x00A0) MISSED OFFSET
	TArray<float>                                      LaunchedFireworkTimes;                                    // 0x09F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData07[0x270];                                     // 0x0A00(0x0270) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnClientNewGameResponse;                                  // 0x0C70(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientSaveGameResponse;                                 // 0x0C80(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientLoadGameResponse;                                 // 0x0C90(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientDeleteGameResponse;                               // 0x0CA0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientRenameGameResponse;                               // 0x0CB0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientListPlayersResponse;                              // 0x0CC0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientListGamesResponse;                                // 0x0CD0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientServerStatisticsResponse;                         // 0x0CE0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientSetPropertiesResponse;                            // 0x0CF0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientCreativeModeResponse;                             // 0x0D00(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayerController");
		return ptr;
	}


	void WouldCompleteCollection_RespondToServer(bool response, int RequestID);
	void WouldCompleteCollection_RequestFromClient(EAstroAchievementKeys collectionAchievement, class UClass* newCollectionItem, int RequestID);
	void TravelToDedicatedServerByURL(const struct FString& ServerURL, const struct FString& Password, const struct FScriptDelegate& TravelInitiated);
	void TrackFireworkLaunchedForAchievementProgress();
	void ToggleProxyVisibility();
	void ToggleEscapeMenu();
	void ToggleAstropediaMenu();
	void TestSwitchProfilesPopup();
	void TestPurchase();
	void TestMountEncryptedPak();
	void TestListStoreItems();
	void TestListCatalogItems();
	void T2Raycast(float Distance);
	void StartNetworkSession();
	void SetSolarTime(double Time);
	void SetMotionBlurEnabled(bool Enable);
	void SetItemForInitialSelection(class APhysicalItem* Item);
	void ServerUseActor(class AActor* Actor, const struct FName& Action, TEnumAsByte<EInputEvent> KeyEvent, EUseType useType);
	void ServerStartPrint(class UPrinterComponent* Component);
	void ServerSetSolarTimeScaleMultiplierCreative(float Scale);
	void ServerSetNormalizedTimeOfDayCreative(float Scale);
	void ServerSetNormalizedSunOrbitCreative(float normalizedSunOrbit);
	void ServerSetCharacterCustomization(const struct FAstroCharacterCustomization& Customization);
	void ServerResetGameStateAchievementProgress();
	void ServerRequestUnlockItem(class UClass* ItemTypeToUnlock);
	void ServerRequestTerrainCorrection(class UVoxelVolumeComponent* voxelVolume, TArray<uint64_t> Nodes);
	void ServerRequestFoliageDestruction(class AActor* DestructionInstigator, const struct FVector_NetQuantize100& Location, float Radius, float MassThreshold, bool bShouldCollectResourceNuggets);
	void ServerRemote(const struct FString& consoleCommand);
	void ServerRedeemPlayerTicket(const struct FString& Ticket);
	void ServerPointItem(class UClass* ItemType, class UClass* PingSymbol, const struct FVector& Location, const struct FVector_NetQuantizeNormal& Normal);
	void ServerNotifyJoinMenuComplete();
	void ServerNotifyClientFullyJoined();
	void ServerNakDataChunk(uint32_t transmissionID, uint32_t missingChunkStart, uint32_t missingChunkCount);
	void ServerIncrementBlueprint(class UPrinterComponent* Component, int increment);
	void ServerGetServerStatistics();
	void ServerFlushPendingUnlocks();
	void ServerFlushPendingAchievements();
	void ServerDoDeformation(const struct FDeformationParams& params);
	void ServerDoControlSystemInput(const struct FVector_NetQuantize10& Input, const struct FVector_NetQuantizeNormal& cameraForward);
	void ServerClickSlotIndicator(const struct FSlotReference& Slot, class UClass* Type);
	void ServerClickSlot(const struct FSlotReference& Slot);
	void ServerClickActor(class AActor* Actor, const struct FTransform& CameraTransform);
	void ServerClick(class UPrimitiveComponent* Primitive, const struct FTransform& CameraTransform);
	void ServerCancelPrint(class UPrinterComponent* Component);
	void ServerAuxOverrideUseItem(class APhysicalItem* Item, TEnumAsByte<EInputEvent> InputEvent);
	void ServerAdminSetSaveGameInterval(const struct FString& Seconds);
	void ServerAdminSetProperties(uint64_t PlayerGuid, const struct FAstroClientProperties& clientCapabilities, const struct FAstroClientProperties& Mask);
	void ServerAdminSetPassword(const struct FString& Password);
	void ServerAdminSetOxygenFreeCreative(bool Enable);
	void ServerAdminSetInvisibleToHazardsCreative(bool Enable);
	void ServerAdminSetInvincibleCreative(bool Enable);
	void ServerAdminSetFuelFreeCreative(bool Enable);
	void ServerAdminSetDenyUnlisted(const struct FString& Enable);
	void ServerAdminSetCategoryForPlayerName(const struct FString& PlayerName, EPlayerCategory PlayerCategory);
	void ServerAdminSetBackupSaveGamesInterval(const struct FString& Seconds);
	void ServerAdminSetBackpackPowerUnlimitedCreative(bool Enable);
	void ServerAdminSetActivityTimeout(const struct FString& Seconds);
	void ServerAdminServerShutdown();
	void ServerAdminSaveGame(const struct FString& Name);
	void ServerAdminRenameGame(const struct FString& fromName, const struct FString& toName);
	void ServerAdminNewGame(const struct FString& Name);
	void ServerAdminLoadGame(const struct FString& Name);
	void ServerAdminListPlayers();
	void ServerAdminListGames();
	void ServerAdminKickPlayer(uint64_t PlayerGuid);
	void ServerAdminGetProperties();
	void ServerAdminDeleteGame(const struct FString& Name);
	void ServerAdminCreativeMode(bool Enable);
	void ServerAdminBackupSaveGames();
	void ServerActuatorOverrideUseItem(class APhysicalItem* Item, TEnumAsByte<EInputEvent> InputEvent);
	void ServerAckChunkedDataFinished(uint32_t transmissionID);
	void SaveGame(const struct FString& Name);
	void ResetPersistentLocalPlayerData();
	void ResetInactivePlayerTimeout();
	void ResetAllUnlocks();
	void ResetAllAchievements();
	void ReportAchievementProgress(EAstroAchievementKeys AchievementKey, float Progress, float NeededCount);
	void RebuildNodeWithLogging(const struct FString& locationCode);
	void PersistCharacterCustomization();
	void OnRep_AchievementProgress();
	void OnPersistentLocalPlayerDataSaveCooldownExpired();
	void OnPersistentLocalPlayerDataDirtied();
	void OnInactivePlayerTimeout();
	void OnClientTitleMenuComplete();
	void OnClientLoadingScreenComplete();
	void LogTerrainDataForNode(const struct FString& locationCode);
	void LoadSeamless(const struct FString& FURL);
	void LoadGame(const struct FString& Name);
	bool IsMainController();
	bool IsHelpMenuVisible();
	bool IsEscapeMenuVisible();
	bool IsControllerJoined();
	bool IsConnectionClosing();
	void IncrementAchievementProgress(const struct FCountAchievement& AchievementDef, int AddedProgress);
	void IncrementAchievementFloatProgress(const struct FFloatCountAchievement& AchievementDef, float AddedProgress);
	void HidePlayerNames(bool hide);
	void HideBeacons(bool hide);
	bool HasAdminAccess();
	void GrantAllUnlocks();
	void GrantAchievement(const struct FString& achievementName);
	bool GameFullyLoaded();
	void ForceStartGame();
	void ForceCrash();
	void FlushPendingAchievementsAndUnlocks();
	void EndNetworkSession();
	void DumpTerrainDataAroundPoint(float X, float Y, float Z, float Radius, bool modifiedOnly);
	void DumpTerrainData(bool modifiedOnly);
	void DumpActorDataTXT();
	void DumpActorDataCSV();
	void DropNextNetDeformations(uint32_t Count);
	void DeleteSaveGame(const struct FString& Name);
	void DeleteAllAutoSaves();
	void DeferredDisableEscapeMenu();
	void ClientVoxelJIPComplete();
	void ClientUnPossess(class AAstroCharacter* oldCharacter);
	void ClientTerrainValidateChecksumsT2(class UVoxelVolumeComponent* voxelVolume, TArray<struct FTerrainNodeNetChecksum> checksums);
	void ClientStartChunkedTransmission(uint32_t transmissionID, unsigned char dataType, uint32_t chunkCount, uint32_t uncompressedSize, class UObject* keyObject);
	void ClientSetSaveGameIntervalResponse(bool success, const struct FString& Message);
	void ClientSetPropertiesResponse(const struct FAstroClientProperties& clientCapabilities);
	void ClientSetPasswordResponse(bool success);
	void ClientSetOxygenFreeCreativeResponse(bool success, bool Enable);
	void ClientSetInvisibleToHazardsCreativeResponse(bool success, bool Enable);
	void ClientSetInvincibleCreativeResponse(bool success, bool Enable);
	void ClientSetFuelFreeCreativeResponse(bool success, bool Enable);
	void ClientSetDenyUnlistedResponse(bool success, const struct FString& Message);
	void ClientSetBackupSaveGamesIntervalResponse(bool success, const struct FString& Message);
	void ClientSetBackpackPowerUnlimitedCreativeResponse(bool success, bool Enable);
	void ClientSetAstroViewTarget(class AActor* ViewTarget);
	void ClientSetActivityTimeoutResponse(bool success);
	void ClientServerStatisticsResponse(const struct FServerStatistics& ServerStatistics);
	void ClientSaveGameResponse(bool success, const struct FString& Name);
	void ClientRequestFoliageDestruction(class AActor* DestructionInstigator, const struct FVector_NetQuantize100& Location, float Radius, float MassThreshold, bool bShouldCollectResourceNuggets);
	void ClientRenameGameResponse(bool copySuccess, bool removeSuccess, const struct FString& fromName, const struct FString& toName);
	void ClientRecvPlayerState(const struct FInitialClientStateParams& params);
	void ClientRecvPlanetSeeds(TArray<class AAstroPlanet*> planets, TArray<int> seeds, TArray<struct FVector> Offsets);
	void ClientRecvPlanetMaterials(class AAstroPlanet* Planet, TArray<struct FPackedVoxelMaterialInfo> Materials);
	void ClientRecvChunkedDataCompletionSignal(uint32_t transmissionID);
	void ClientRecvChunkedData(uint32_t transmissionID, int chunkIndex, TArray<int8_t> Data, class UObject* keyObject);
	void ClientRecordPlayerEventWithCallback(const struct FString& EventName, TArray<struct FAnalyticsEventAttr> Attributes);
	void ClientRecordPlayerEvent(const struct FString& EventName, TArray<struct FAnalyticsEventAttr> Attributes);
	void ClientNoInitialPlanetSignal();
	void ClientNewGameResponse(bool success, const struct FString& Name);
	void ClientLoadGameResponse(bool success, const struct FString& Name);
	void ClientListPlayersResponse(const struct FPlayerList& PlayerList);
	void ClientListGamesResponse(const struct FGameList& GameList);
	void ClientKickPlayerResponse(bool success);
	void ClientGrantItems(TArray<struct FString> ItemIds);
	void ClientGetPropertiesResponse(const struct FAstroClientProperties& clientCapabilities);
	void ClientFlushPendingUnlocks(TArray<struct FString> serverPendingUnlocks);
	void ClientEnqueueNotification(const struct FAstroNotificationTagAuthoringData& AuthoringData);
	void ClientDoDeformation(const struct FDeformationParams& params);
	void ClientDeleteGameResponse(bool success, const struct FString& Name);
	void ClientCreativeModeResponse(bool success, bool Enable);
	void ClientCreateProxySession(const struct FGuid& sessionGUID);
	void ClientBeginAuthHandshake(const struct FString& LobbyId);
	void ClientBackupSaveGamesResponse(bool success);
	void ClientAwardAchievement(EAstroAchievementKeys AchievementKey);
	void ClientAuthComplete(bool bSuccess);
	void AdminSetPropertiesForPlayer(const struct FString& PlayerGuid, const struct FAstroClientProperties& clientCapabilities);
	void AdminKickPlayer(const struct FString& PlayerGuid);
	void AddAchievementCollectionItem(const struct FItemCollectionAchievement& AchievementDef, class UClass* Item);
};


// Class Astro.PlayController
// 0x05A0 (0x12B0 - 0x0D10)
class APlayController : public AAstroPlayerController
{
public:
	struct FScriptMulticastDelegate                    OnClickUnhandled;                                         // 0x0D10(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EHandState                                         RightHandState;                                           // 0x0D20(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0D21(0x0003) MISSED OFFSET
	float                                              GrabThreshold;                                            // 0x0D24(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SelectionOffset;                                          // 0x0D28(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LastRightHandAxis;                                        // 0x0D2C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               QuickSelectionMade;                                       // 0x0D30(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0D31(0x0003) MISSED OFFSET
	struct FVector                                     TargetMultitoolLocation;                                  // 0x0D34(0x000C) (BlueprintVisible, IsPlainOldData)
	float                                              MouseZoomTickSize;                                        // 0x0D40(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MouseZoomSpeed;                                           // 0x0D44(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bGeometricZoom : 1;                                       // 0x0D48(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0D49(0x0007) MISSED OFFSET
	class AActor*                                      ToolActiveItem;                                           // 0x0D50(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ECameraMode                                        CameraMode;                                               // 0x0D58(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0D59(0x0007) MISSED OFFSET
	class AActor*                                      InteractingActor;                                         // 0x0D60(0x0008) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	class UStorageChassisComponent*                    CurrentTertiary;                                          // 0x0D68(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class ASolarBody*                                  HomeBody;                                                 // 0x0D70(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              PlanetarySelectionDistance;                               // 0x0D78(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UsingGamepad : 1;                                         // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CurrentClickPrimary : 1;                                  // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      planetSelection : 1;                                      // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      LandSelection : 1;                                        // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      IsVirtualCursorActive : 1;                                // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bApplyQuickSelectModifier : 1;                            // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bApplyUseModifier : 1;                                    // 0x0D7C(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0D7D(0x0003) MISSED OFFSET
	struct FClickResult                                CurrentClick;                                             // 0x0D80(0x0080) (BlueprintVisible, BlueprintReadOnly)
	struct FHitResult                                  CurrentCursorHit;                                         // 0x0E00(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FHitResult                                  LastCursorFullRangeHit;                                   // 0x0E88(0x0088) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     CachedNonzeroMoveDirection;                               // 0x0F10(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     CachedMoveDirection;                                      // 0x0F1C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TArray<class USceneComponent*>                     HoveredFacingComponents;                                  // 0x0F28(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnResourceInfoHover;                                      // 0x0F38(0x0010) (ZeroConstructor, InstancedReference)
	class UVirtualCursor*                              VirtualCursor;                                            // 0x0F48(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      FreeCamClass;                                             // 0x0F50(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ACameraRigActor*                             FreeCamRig;                                               // 0x0F58(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UClass*                                      IconRigClass;                                             // 0x0F60(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AIconRigNative*                              IconRig;                                                  // 0x0F68(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMesh*                                 ItemSelectorMesh;                                         // 0x0F70(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ASlotConnection*                             GrabbedCable;                                             // 0x0F78(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ItemSelectorMat;                                          // 0x0F80(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMesh*                                 SlottedItemSelectorMesh;                                  // 0x0F88(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    SlottedItemSelectorMat;                                   // 0x0F90(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMesh*                                 DefaultSecondarySelectorMesh;                             // 0x0F98(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               EnableClickableIndicatorsDisplay;                         // 0x0FA0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0FA1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlanetSelectionBegin;                                   // 0x0FA8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlanetSelectionEnd;                                     // 0x0FB8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLandSelectionBegin;                                     // 0x0FC8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLandSelectionEnd;                                       // 0x0FD8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSolarBodyClick;                                         // 0x0FE8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLandClick;                                              // 0x0FF8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData06[0x14];                                      // 0x1008(0x0014) MISSED OFFSET
	float                                              CurrentMouseZoom;                                         // 0x101C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnMouseZoomChanged;                                       // 0x1020(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData07[0x8];                                       // 0x1030(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBackpackToggled;                                        // 0x1038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInputDeviceChanged;                                     // 0x1048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLocalSolarBodyChanged;                                  // 0x1058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPreviouslyFailedSaveSucceeded;                          // 0x1068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSaveGameFailed;                                         // 0x1078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeShowCreativeDroneUIChanged;                     // 0x1088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeShowLODAnchorRangeVisualizationChanged;         // 0x1098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeTerrainBrushLightChanged;                       // 0x10A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerDeathBegin;                                       // 0x10B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerRespawned;                                        // 0x10C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<class UAstroEmoteDefinition*>               EmoteSet;                                                 // 0x10D8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              WindGustDeltaMinIntensity;                                // 0x10E8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WindGustScalar;                                           // 0x10EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      DebugWind : 1;                                            // 0x10F0(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData08[0x7];                                       // 0x10F1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlaceTetherFromBackpack;                                // 0x10F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEmoteSelectionChanged;                                  // 0x1108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData09[0x20];                                      // 0x1118(0x0020) MISSED OFFSET
	class UBackpackCameraContext*                      BackpackCameraContext;                                    // 0x1138(0x0008) (ZeroConstructor, IsPlainOldData)
	class UGameMenuPopoutCameraContext*                GameMenuPopoutCameraContext;                              // 0x1140(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AActor*>                              SpawnPointStack;                                          // 0x1148(0x0010) (BlueprintVisible, ZeroConstructor, SaveGame)
	unsigned char                                      UnknownData10[0x1C];                                      // 0x1158(0x001C) MISSED OFFSET
	struct FVector2D                                   m_lastMouseLocation;                                      // 0x1174(0x0008) (IsPlainOldData)
	unsigned char                                      UnknownData11[0xC];                                       // 0x117C(0x000C) MISSED OFFSET
	TArray<class UPrimitiveComponent*>                 LastPrimaryViewPrimitives;                                // 0x1188(0x0010) (ExportObject, ZeroConstructor, Transient)
	class AActor*                                      LastSecondaryViewActor;                                   // 0x1198(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x11];                                      // 0x11A0(0x0011) MISSED OFFSET
	unsigned char                                      UnknownData13 : 7;                                        // 0x11B1(0x0001)
	unsigned char                                      bCreativeRemoveDecoratorsWhilePainting : 1;               // 0x11B1(0x0001) (SaveGame)
	unsigned char                                      bCreativeTerrainBrushLightActive : 1;                     // 0x11B2(0x0001) (SaveGame)
	unsigned char                                      bCreativeShowLODAnchorRangeVisualization : 1;             // 0x11B2(0x0001) (SaveGame)
	unsigned char                                      bCreativeDisableCollectResourcesWhileDeforming : 1;       // 0x11B2(0x0001) (SaveGame)
	unsigned char                                      bShowCreativeDroneUI : 1;                                 // 0x11B2(0x0001) (SaveGame)
	unsigned char                                      UnknownData14[0x1];                                       // 0x11B3(0x0001) MISSED OFFSET
	int                                                HoldLabelCounter;                                         // 0x11B4(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	class UAstroNotificationManager*                   AstroNotificationManager;                                 // 0x11B8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTooltipManager*                             TooltipManager;                                           // 0x11C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UAstroUnlockNotificationManager*             AstroUnlockNotificationManger;                            // 0x11C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroPopupBadgeManager*                     AstroPopupBadgeManager;                                   // 0x11D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UBiomeSamplerComponent*                      biomeSampler;                                             // 0x11D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              BiomeEntryWeightThreshold;                                // 0x11E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BiomeExitWeightThreshold;                                 // 0x11E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0xA0];                                      // 0x11E8(0x00A0) MISSED OFFSET
	class UMaterialParameterCollection*                GlobalParameterCollection;                                // 0x1288(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData16[0x20];                                      // 0x1290(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlayController");
		return ptr;
	}


	void UpdateEmoteSelection(int Index, class UAstroEmoteDefinition* Emote);
	void UpdateClickableIndicators();
	void UpdateBiomeAmbienceLocal(class UBiomeSamplerComponent* biomeSampler);
	bool TransferCurrentQuickItemIntoHandForHolding();
	bool TraceCursorSpoofAtPlayerFeet(TEnumAsByte<ECollisionChannel> collisionChannel, const struct FVector& traceOffset, class AActor* actorToIgnore, float Distance, struct FHitResult* OutHit);
	bool TraceCursor(TEnumAsByte<ECollisionChannel> collisionChannel, class AActor* actorToIgnore, float Distance, struct FHitResult* OutHit);
	bool ToggleCreativeModeDeformMenu();
	void TertiaryAction();
	void TeleportToCursor();
	bool TargetHasAttachParent();
	bool TargetAllowFreeCam();
	void StopJump();
	class APhysicalItem* SpawnActorAndAttemptPackage(class UClass* objClass, const struct FTransform& SpawnTransform, class UClass* ItemType, bool CreativeMode, bool autoGrab);
	bool ShouldShowCreativeDroneUI();
	void SetUsingGamepad(bool IsUsingGamepad);
	void SetTerrainBrushLightActive(bool TerrainBrushLightActive);
	void SetSuitServer(class UAstroCharacterSuit* NewSuit);
	void SetShowCreativeDoneUI(bool shouldShowDroneUI);
	void SetSelectionIndicators();
	void SetMousePosition(float X, float Y);
	void SetGamepadLock(bool gamepadModeLocked);
	void SetCurrentSpawnPoint(class AActor* Spawn);
	void SetCreativeShowLODAnchorRangeVisualizationEnabled(bool ShowLODAnchorRange);
	void SetCreativeRemoveDecoratorsWhilePaintingEnabled(bool RemoveDecoratorsWhilePainting);
	void SetCreativeCollectResourcesWhileDeformingDisabled(bool DisableCollectResourcesWhileDeforming);
	void SetCharacterVisorServer(class UAstroVisorMaterial* NewVisorMaterial);
	void SetCharacterPaletteServer(class UAstroCharacterPalette* NewPalette);
	void SetCharacterHatServer(class UAstroCharacterHat* NewHat, ECharacterHatCategory Category);
	void SetCameraZoom(float zoom);
	void ServerSpawnResourceNuggetDebug(class UClass* objClass);
	void ServerSpawnActorDebug(class UClass* objClass);
	void ServerSpawnActorAndAttemptPackage(class UClass* objClass, const struct FTransform& SpawnTransform, class UClass* ItemType, bool CreativeMode, bool autoGrab);
	void ServerSpawnActor(class UClass* objClass, const struct FTransform& SpawnTransform);
	void ServerSetToolLocation(class UControlComponent* ControlComponent, const struct FTransform& Transform);
	void ServerPlayerCharacterSelectionLaunch();
	void ServerAddUnclaimedItemDrivePhysicalItemReward(const struct FPendingInGameItemRewards& PendingReward);
	void ServerAddToCheatPlinthSelectionIndex(class ACheatPlinthBase* CheatPlinth, int increment);
	void SaveGameFixup();
	struct FString RunScript(const struct FString& script);
	void RestoreAudioListener();
	void ResetPlayControllerStateForRespawn();
	void ResetInputMode();
	void ReapplySavedCharacterCustomization();
	void PreviewCharacterCustomization(const struct FAstroCharacterCustomization& customizationToPreview);
	void Ping();
	void OnReceiveUsePressed();
	void OnReceiveToggleDeformMenuPressed();
	void OnReceivePlaceTetherRepeat();
	void OnReceivePlaceTetherPressed();
	void OnReceiveDeployCreativeDronePressed();
	void OnReceiveChangeDeformBrushStrengthModifierReleased();
	void OnReceiveChangeDeformBrushStrengthModifierPressed();
	void OnReceiveChangeDeformBrushSizeModifierReleased();
	void OnReceiveChangeDeformBrushSizeModifierPressed();
	void OnReceiveBackpackToggleInput();
	void OnLoadScreenComplete();
	void OnIncrementCreativeBrushSizeControllerRepeat();
	void OnIncrementCreativeBrushIntensityControllerRepeat();
	void OnDepartedPlanet();
	void OnDecrementCreativeBrushIntensityControllerRepeat();
	void OnCharacterLocalSolarBodyChanged(class ASolarBody* newLocalSolarBody);
	void OnArrivedPlanet();
	void MouseWheelUp();
	void MouseWheelDown();
	void MouseWheel(float Value);
	void KillAstroForEmergencyRespawn();
	void Jump();
	bool IsUsingActiveGrabGamepad();
	bool IsTerrainBrushLightActive();
	bool IsCreativeShowLODAnchorRangeVisualizationEnabled();
	bool IsCreativeRemoveDecoratorsWhilePaintingEnabled();
	bool IsCreativeModeDeformMenuActive();
	bool IsCreativeCollectResourcesWhileDeformingDisabled();
	void InitializeSpawnPointsForPlayer();
	void IncrementHoldCounter();
	void HandleKeyboardMouseKeyJustPressed();
	void HandleGamepadKeyJustPressed();
	void HandleGameMenuPopoutCameraContext(bool GameMenuPopoutEnabled);
	void HandleCreativeModeEnabledChanged(bool CreativeModeEnabled);
	void HandleBackpackCameraContext(bool BackpackEnabled);
	float GetWindIntensity();
	struct FVector GetWindDirection();
	class AActor* GetTracedActor();
	class AActor* GetTertiaryActor();
	class USceneComponent* GetSpawnLocation();
	class AActor* GetSecondaryViewActor();
	EClickBehavior GetSecondaryBehavior();
	class AActor* GetSecondaryActor();
	float GetPrimaryViewIndicatorScale();
	class USceneComponent* GetPrimaryViewComponent();
	class AActor* GetPrimaryViewActor();
	EClickBehavior GetPrimaryBehavior();
	class AActor* GetPrimaryActor();
	class UMultiTool* GetMultitool();
	class ASolarBody* GetLocalSolarBody();
	int GetHoldCounter();
	bool GetCursorVector(struct FVector* WorldLocation, struct FVector* WorldDirection);
	struct FRotator GetCameraRotation();
	struct FVector GetCameraLocation();
	struct FVector2D GetCameraInput();
	class UCameraComponent* GetCamera();
	class AAstroCharacter* GetAstroCharacter();
	void EngageUseModifier();
	void EngageQuickSelectModifier();
	void EnableVirtualCursor(bool CenterCursor);
	void EnablePlanetSelection(bool Enable, class ASolarBody* NewHomeBody, float planetSelectionDistance);
	void EnableLandSelection(bool Enable, class ASolarBody* Body);
	void EmoteTwo();
	void EmoteThree();
	void EmoteOne();
	void EmoteFour();
	void DropHeldItem();
	void DisengageUseModifier();
	void DisengageQuickSelectModifier();
	void DisengageInteractionModifiers();
	void DisableVirtualCursor();
	void DebugFOVUp();
	void DebugFOVDown();
	void CycleCameraMode();
	void ContextRightReleased();
	void ContextRightPressed();
	void ContextLeftReleased();
	void ContextLeftPressed();
	void ClientPresentUnlockNotification(const struct FAstroNotificationUnlockAuthoringData& AuthoringData);
	void ClientNotifyPlayerRespawned();
	void ClientNotifyPlayerDeathBegin();
	void ClearSaveFailedErrorData();
	bool AttemptToPlaceArbitaryItemInHandForHolding(class APhysicalItem* Item);
	bool AttemptToDecrementCreativeBrushSizeController();
};


// Class Astro.AstroCheatManager
// 0x0000 (0x0078 - 0x0078)
class UAstroCheatManager : public UCheatManager
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCheatManager");
		return ptr;
	}


	void ToggleStreamingPowerDebugVis();
	void ToggleSelectionOutline();
	void ToggleDrillUI();
	void ServerRevealGateStation();
	void ServerPlayOutroCinematic();
	void ServerGrantResearchPoints(int numResearchPoints);
	void AstroToggleWorldUI();
	void AstroToggleHUD();
	void AstroToggle2DUI();
	void AstroRevealGateStation();
	void AstroResetNumTimesCreativeTutorialShown();
	void AstroResetEarnedItemDrivePhysicalRewards();
	void AstroPlayOutroCinematic();
	void AstroGrantResearchPoints(int numResearchPoints);
	void AstroFindVintageProbe();
	void AstroDebugFakeDeadlockAndCrash();
	void AstroAllProbesSpawnWandererRealityTear(bool bAlwaysSpawn);
};


// Class Astro.AstroChickenBitsControls
// 0x0000 (0x0028 - 0x0028)
class UAstroChickenBitsControls : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroChickenBitsControls");
		return ptr;
	}


	int STATIC_GetCvar_Vehicles_ShowDrillDebugVis();
	int STATIC_GetCvar_Vehicles_ApplyDrillDeformations();
	int STATIC_GetCvar_Vehicles_AllowConstraintConnections();
	int STATIC_GetCvar_Menu_AlwaysPlayIntroCutscene();
	int STATIC_GetCvar_Menu_AllowSaveFileRenaming();
	int STATIC_GetCvar_Menu_AllowSaveFileDuplication();
	int STATIC_GetCvar_Controls_UseItemMoveTierRestrictions();
	int STATIC_GetCvar_Controls_UseActiveGrab();
	int STATIC_GetCvar_Controls_EnableCreativeDrone();
};


// Class Astro.AstroChickenBitsPower
// 0x0000 (0x0028 - 0x0028)
class UAstroChickenBitsPower : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroChickenBitsPower");
		return ptr;
	}


	int STATIC_GetCvar_Power_VisualizeWindPowerGenerators();
	int STATIC_GetCvar_Power_UseStreamingPowerDebugVisualization();
	int STATIC_GetCvar_Power_UseStreamingPower();
};


// Class Astro.AstroColorDatabase
// 0x0050 (0x0080 - 0x0030)
class UAstroColorDatabase : public UDataAsset
{
public:
	TMap<EAstroColor, struct FLinearColor>             ColorDatabase;                                            // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroColorDatabase");
		return ptr;
	}

};


// Class Astro.AstroContentPackage
// 0x0028 (0x0098 - 0x0070)
class UAstroContentPackage : public UPrimaryAssetLabel
{
public:
	struct FAstroEncryptionOptions                     EncryptionOptions;                                        // 0x0070(0x0028) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroContentPackage");
		return ptr;
	}

};


// Class Astro.AstroDatumContainer
// 0x0018 (0x0040 - 0x0028)
class UAstroDatumContainer : public UObject
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroDatumContainer");
		return ptr;
	}


	struct FAstroDatumRef STATIC_MakeDatumRef_DO_NOT_USE_FROM_CPP(const struct FAstroDatum& Datum);
	bool STATIC_IsDatumRefValid_DO_NOT_USE_FROM_CPP(const struct FAstroDatumRef& DatumRef);
};


// Class Astro.BaseEditorTool
// 0x0000 (0x0028 - 0x0028)
class UBaseEditorTool : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BaseEditorTool");
		return ptr;
	}

};


// Class Astro.AstroDeveloperTools
// 0x0000 (0x0028 - 0x0028)
class UAstroDeveloperTools : public UBaseEditorTool
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroDeveloperTools");
		return ptr;
	}

};


// Class Astro.AstroEngine
// 0x0260 (0x1110 - 0x0EB0)
class UAstroEngine : public UGameEngine
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0EB0(0x0010) MISSED OFFSET
	struct FAstroEngineCommon                          m_engineCommon;                                           // 0x0EC0(0x0040)
	unsigned char                                      UnknownData01[0x210];                                     // 0x0F00(0x0210) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEngine");
		return ptr;
	}

};


// Class Astro.AstroEntityComponentContainer
// 0x0000 (0x0040 - 0x0040)
class UAstroEntityComponentContainer : public UAstroDatumContainer
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityComponentContainer");
		return ptr;
	}


	struct FAstroEntityComponent STATIC_GetEntityComponent(const struct FAstroDatumRef& ComponentRef, bool* bOutSuccess);
};


// Class Astro.AstroEntityComponentSubobjectDefinition
// 0x0018 (0x0040 - 0x0028)
class UAstroEntityComponentSubobjectDefinition : public UObject
{
public:
	struct FName                                       Name;                                                     // 0x0028(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RuntimeSubobjectType;                                     // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	EAstroEntityComponentSubobjectTickGroup            TickGroup;                                                // 0x0038(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityComponentSubobjectDefinition");
		return ptr;
	}

};


// Class Astro.AstroEntityComponentSubobject
// 0x0020 (0x0048 - 0x0028)
class UAstroEntityComponentSubobject : public UObject
{
public:
	struct FAstroDatumRef                              OwnerComponentRef;                                        // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	struct FName                                       DefinitionName;                                           // 0x0038(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	class UAstroEntityComponentSubobjectDefinition*    Definition;                                               // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityComponentSubobject");
		return ptr;
	}

};


// Class Astro.AstroEntityContainer
// 0x0030 (0x0070 - 0x0040)
class UAstroEntityContainer : public UAstroDatumContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityContainer");
		return ptr;
	}

};


// Class Astro.AstroEntityProceduralStateComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UAstroEntityProceduralStateComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityProceduralStateComponentContainer");
		return ptr;
	}

};


// Class Astro.AstroEntitySceneComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UAstroEntitySceneComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySceneComponentContainer");
		return ptr;
	}


	struct FAstroEntitySceneComponent STATIC_GetEntitySceneComponent(const struct FAstroDatumRef& SceneComponentRef, bool* bOutSuccess);
};


// Class Astro.AstroEntityTaskManager
// 0x0050 (0x0078 - 0x0028)
class UAstroEntityTaskManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET
	class UAstroEntityWorld*                           EntityWorld;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              DependentDatumContainerTypes;                             // 0x0038(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0048(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityTaskManager");
		return ptr;
	}

};


// Class Astro.AstroEntitySceneComponentTaskManager
// 0x0018 (0x0090 - 0x0078)
class UAstroEntitySceneComponentTaskManager : public UAstroEntityTaskManager
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0078(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySceneComponentTaskManager");
		return ptr;
	}

};


// Class Astro.AstroEntitySystem
// 0x0008 (0x0030 - 0x0028)
class UAstroEntitySystem : public UObject
{
public:
	class UAstroEntityWorld*                           CachedEntityWorld;                                        // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySystem");
		return ptr;
	}

};


// Class Astro.AstroEntitySceneComponentSystem
// 0x0008 (0x0038 - 0x0030)
class UAstroEntitySceneComponentSystem : public UAstroEntitySystem
{
public:
	class UAstroEntitySceneComponentTaskManager*       SceneComponentTaskManager;                                // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySceneComponentSystem");
		return ptr;
	}

};


// Class Astro.AstroEntitySlotBackupComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UAstroEntitySlotBackupComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySlotBackupComponentContainer");
		return ptr;
	}

};


// Class Astro.AstroEntitySlotBackupComponentSystem
// 0x0000 (0x0030 - 0x0030)
class UAstroEntitySlotBackupComponentSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntitySlotBackupComponentSystem");
		return ptr;
	}

};


// Class Astro.AstroEntityStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroEntityStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityStatics");
		return ptr;
	}

};


// Class Astro.AstroEntityWorld
// 0x01C8 (0x01F0 - 0x0028)
class UAstroEntityWorld : public UObject
{
public:
	class UAstroEntityContainer*                       EntityContainer;                                          // 0x0028(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	TArray<class UAstroEntityComponentContainer*>      EntityComponentContainers;                                // 0x0030(0x0010) (ZeroConstructor, SaveGame)
	TArray<class UAstroEntitySystem*>                  Systems;                                                  // 0x0040(0x0010) (ZeroConstructor)
	TArray<class UAstroEntityComponentSubobject*>      PrePhysicsTickingEntityComponentSubobjects;               // 0x0050(0x0010) (ZeroConstructor, SaveGame)
	TArray<class UAstroEntityComponentSubobject*>      PostPhysicsTickingEntityComponentSubobjects;              // 0x0060(0x0010) (ZeroConstructor, SaveGame)
	TArray<class UAstroEntityComponentSubobject*>      EntityComponentSubobjectsPendingTickDeactivation;         // 0x0070(0x0010) (ZeroConstructor, Transient)
	TArray<class UAstroEntityTaskManager*>             EntityTaskManagers;                                       // 0x0080(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x160];                                     // 0x0090(0x0160) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityWorld");
		return ptr;
	}


	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	struct FAstroDatumRef STATIC_GetOwnerEntity(const struct FAstroDatumRef& EntityComponentRef, bool* bOutSuccess);
	struct FAstroDatumRef STATIC_GetEntityRootComponentRef(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
	struct FAstroDatumRef STATIC_GetEntityComponentRefByName(const struct FAstroDatumRef& EntityRef, const struct FName& ComponentName, bool* bOutSuccess);
	TArray<struct FAstroDatumRef> STATIC_GetEntityComponentDatumRefs(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.AstroEntityWorldConfig
// 0x0028 (0x0058 - 0x0030)
class UAstroEntityWorldConfig : public UDataAsset
{
public:
	class UClass*                                      EntityWorldType;                                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              EntityComponentTypes;                                     // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                              EntitySystemTypes;                                        // 0x0048(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEntityWorldConfig");
		return ptr;
	}

};


// Class Astro.AstroErrorWidget
// 0x0018 (0x0220 - 0x0208)
class UAstroErrorWidget : public UUserWidget
{
public:
	struct FString                                     Message;                                                  // 0x0208(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	float                                              Timer;                                                    // 0x0218(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultTimeToDisplay;                                     // 0x021C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroErrorWidget");
		return ptr;
	}

};


// Class Astro.AstroFoliageDestructionManager
// 0x00E8 (0x0110 - 0x0028)
class UAstroFoliageDestructionManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0028(0x00B8) MISSED OFFSET
	TArray<struct FAstroFoliageDestructionRequest>     Requests;                                                 // 0x00E0(0x0010) (ZeroConstructor, Transient)
	class UWorld*                                      WorldCache;                                               // 0x00F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroGameInstance*                          AstroGameInstanceCache;                                   // 0x00F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UCollectibleHandler*                         CollectibleHandlerCache;                                  // 0x0100(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0108(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroFoliageDestructionManager");
		return ptr;
	}

};


// Class Astro.AstroGameInstance
// 0x0630 (0x0720 - 0x00F0)
class UAstroGameInstance : public UGameInstance
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFullLicenseDetected;                                    // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLicenseLost;                                            // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLicenseExpiringSoon;                                    // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoadingScreenCompleted;                                 // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AsyncMapLoadStarted;                                      // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x108];                                     // 0x0148(0x0108) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnControllingUserSet;                                     // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIntroCinematicComplete;                                 // 0x0260(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnNewGameSetupComplete;                                   // 0x0270(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnGameplayStarted;                                        // 0x0280(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialStartSelected;                                  // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartingGameDropshipSpawned;                            // 0x02A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSolarSystemInitialized_BlueprintEvent;                  // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCachedFriendsListUpdated;                               // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCachedServerListUpdated;                                // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAllCosmeticsSeen;                                       // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnclaimedPhysicalItemRewardsChanged;                    // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayFabTitleDataRefreshed;                              // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayFabMicroTxnStoreDataRefreshed;                      // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationStarted;               // 0x0320(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationCanceled;              // 0x0330(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationCommitted;             // 0x0340(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationUnlockTooltipInvalidated;// 0x0350(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationFinalizationStarted;   // 0x0360(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTitleScreenCharacterCustomizationFinalizationCanceled;  // 0x0370(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCharacterCustomizationPreviewRequested;                 // 0x0380(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEmotePreviewRequested;                                  // 0x0390(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnJoinedNetGame;                                          // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMessageOfTheDayUpdated;                                 // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayTogetherEventReceived;                              // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UAstroServerCommExecutor*                    AstroServerCommSingleton;                                 // 0x03D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x150];                                     // 0x03D8(0x0150) MISSED OFFSET
	TMap<class UWorld*, struct FWorldSingletons>       WorldSingletons;                                          // 0x0528(0x0050) (ZeroConstructor)
	TArray<class UVoxelVolumeComponent*>               ActiveVoxelVolumes;                                       // 0x0578(0x0010) (ExportObject, ZeroConstructor)
	class UAstroPlayFabTxnManager*                     PlayFabTxnManager;                                        // 0x0588(0x0008) (ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 ActiveLoadingScreen;                                      // 0x0590(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ActiveWaitForInputScreen;                                 // 0x0598(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ActiveConfirmChangeUsersPopup;                            // 0x05A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 ActiveReconnectControllerPopup;                           // 0x05A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FActorTemplateCache                         GlobalTemplateCache;                                      // 0x05B0(0x00A8) (Transient)
	unsigned char                                      UnknownData03[0x60];                                      // 0x0658(0x0060) MISSED OFFSET
	TMap<class UWorld*, struct FMaterialInstanceCache> MaterialInstanceCache;                                    // 0x06B8(0x0050) (ZeroConstructor, Transient)
	struct FString                                     LobbyId;                                                  // 0x0708(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0718(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameInstance");
		return ptr;
	}


	void NotifyWaitForInputScreenComplete();
	void NotifyTutorialStartSelected();
	void NotifyStartingGameDropshipSpawned();
	void NotifyPlayerRespondedToWaitForInputScreen(int playerIndex);
	void NotifyPlayerExitedStartingDropship();
	void NotifyPlayerConfirmedChangeUsers();
	void NotifyPlayerCancelledChangeUsers();
	void NotifyOnTitleScreenCharacterCustomizationUnlockTooltipInvalidated();
	void NotifyOnTitleScreenCharacterCustomizationStarted();
	void NotifyOnTitleScreenCharacterCustomizationFinalizationStarted();
	void NotifyOnTitleScreenCharacterCustomizationFinalizationCanceled();
	void NotifyOnTitleScreenCharacterCustomizationCommitted();
	void NotifyOnTitleScreenCharacterCustomizationCanceled();
	void NotifyOnEmotePreviewRequested(class UAstroEmoteDefinition* emoteDefinition, bool isLocked, const struct FTooltipWidgetDisplayData& lockedTooltipDisplayData);
	void NotifyOnCharacterCustomizationPreviewRequested(const struct FAstroCharacterCustomization& customizationToPreview, bool isLocked, const struct FTooltipWidgetDisplayData& lockedTooltipDisplayData);
	void NotifyNewGameSetupComplete();
	void NotifyLoadScreenFadeoutComplete();
	void NotifyLoadScreenComplete(bool RemoveFromViewport);
	void NotifyIntroCinematicComplete();
	void MessageOfTheDayUpdated__DelegateSignature(class UMessageOfTheDay* InMessageOfTheDay);
	bool IsPlayTogetherSessionPending();
	bool IsLoadingScreenActive();
	bool IsGameLicenseValid();
	bool IsGameInTrialMode();
	bool HasIntroCinematicCompleted();
	bool HasGameSessionStarted();
	void HandleServerListCacheUpdated();
	void HandleFriendsListCacheUpdated();
	void HandleFriendJoinRequestSucceeded(const struct FFriendJoinRequestSucceededPayload& joinRequestSucceededPayload);
	void HandleFriendJoinRequestFailed(EAstroFriendJoinRequestFailure JoinFailureReason);
	struct FAstroPlayFabTitleData GetTitleData();
	class UAstroPlayFabTxnManager* GetPlayFabTxnManager();
	struct FAstroPlayFabMicroTxnStoreData GetMicroTxnStoreData();
	float GetEstimatedLoadPercentage(class UObject* WorldContextObject);
	void DisplayLoadScreenWidget(class UClass* overrideWidget);
	void DisplayConfirmChangeUsersPopup();
	void DebugLicenseOverride(int Type);
	void DebugExpirationOverride();
	bool AllowLoadingScreenDismiss();
};


// Class Astro.UserWidgetBlueprintDesignable
// 0x0008 (0x0210 - 0x0208)
class UUserWidgetBlueprintDesignable : public UUserWidget
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UserWidgetBlueprintDesignable");
		return ptr;
	}


	void SetupStylingData();
	void PostLayoutWidget();
	void OnSynchronizeProperties();
	bool LayoutWidget();
	bool GetStylingDataSetupComplete();
};


// Class Astro.AstroGameMenuCustomizationSubsection
// 0x0090 (0x02A0 - 0x0210)
class UAstroGameMenuCustomizationSubsection : public UUserWidgetBlueprintDesignable
{
public:
	TArray<struct FAstroSuitDisplayOption>             AvailableSuits;                                           // 0x0210(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FAstroVisorMaterialDisplayOption>    AvailableVisors;                                          // 0x0220(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FAstroCharacterPaletteDisplayOption> AvailablePalettes;                                        // 0x0230(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FAstroCharacterHatDisplayOption>     AvailableHats;                                            // 0x0240(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FAstroCharacterHatDisplayOption>     AvailableMasks;                                           // 0x0250(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FAstroCharacterCustomization                CurrentlyCommittedCharacterCustomizationOptions;          // 0x0260(0x0038) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0298(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuCustomizationSubsection");
		return ptr;
	}


	void UpdateVisorSelectionOption(int Index);
	void UpdateUnlockSelectionsFromPlayfabData();
	void UpdateSuitSelectionOption(int Index);
	void UpdatePaletteSelectionOption(int Index);
	void UpdateMaskSelectionOption(int Index);
	void UpdateHatSelectionOption(int Index);
	void UpdateEmoteSlots(bool WithLayout);
	void SetupEmoteSlots();
	void SetCurrentlyCommittedCharacterCustomizationOptions(const struct FAstroCharacterCustomization& CharacterCustomization);
	void OnSubsectionClosed();
	void NotifySubsectionClosed();
	void MakeVisorSelectionOptions();
	void MakeSuitSelectionOptions();
	void MakePaletteSelectionOptions();
	void MakeMaskSelectionOptions();
	void MakeHatSelectionOptions();
};


// Class Astro.AstroGameMenuFocusItemContainerWidget
// 0x0068 (0x0278 - 0x0210)
class UAstroGameMenuFocusItemContainerWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0210(0x0020) MISSED OFFSET
	TArray<class UAstroGameMenuFocusItemWidget*>       FocusableWidgetsList;                                     // 0x0230(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	TArray<class UAstroGameMenuFocusItemWidget*>       AllMenuItemWidgets;                                       // 0x0240(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, Transient)
	class UAstroGameMenuFocusItemWidget*               CurrentlyFocusedItem;                                     // 0x0250(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<EMouseFocusChangeSuppressionSource>         ActiveMouseFocusChangeSuppressions;                       // 0x0258(0x0010) (ZeroConstructor, Transient)
	class UAstroGameMenuFocusItemWidget*               LastUsedItem;                                             // 0x0268(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0270(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuFocusItemContainerWidget");
		return ptr;
	}


	void RemoveMouseFocusSuppression(EMouseFocusChangeSuppressionSource MouseSuppression);
	void OnFocusIndexChanged(int NewFocusIndex);
	bool IsMouseFocusSuppressed();
	void HandleLastUsedItemChanged(bool IsLastUsedItem, class UAstroGameMenuFocusItemWidget* LastUsedWidget);
	void HandleFocusedItemChanged(bool IsFocused, class UAstroGameMenuFocusItemWidget* FocusedWidget, EFocusItemFocusChangeCause FocusChangeCause);
	class UAstroGameMenuFocusItemWidget* GetCurrentFocusItem();
	struct FEventReply AttemptToUseFocusedItemViaMouse();
	struct FEventReply AttemptToToggleEditFocusedItem();
	struct FEventReply AttemptToStartDragEditFocusedItem(const struct FVector2D& MousePos);
	struct FEventReply AttemptToIncrementCurrentlyEditedItem();
	struct FEventReply AttemptToDecrementCurrentlyEditedItem();
	struct FEventReply AttemptToCancelDragOrEditFocusItem();
	void AddMouseFocusSuppression(EMouseFocusChangeSuppressionSource MouseSuppression);
};


// Class Astro.AstroGameMenuFocusItemWidget
// 0x0250 (0x0460 - 0x0210)
class UAstroGameMenuFocusItemWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0x140];                                     // 0x0210(0x0140) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFocusItemUsedDelegate;                                  // 0x0350(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLockedFocusItemAttemptedUseDelegate;                    // 0x0360(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemIsLastUsedStateChangedDelegate;                // 0x0370(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemFocusStateChangedDelegate;                     // 0x0380(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEditingUnhandledKeyPressed;                             // 0x0390(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDiscreteEditStarted;                           // 0x03A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDiscreteEditCommitted;                         // 0x03B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDiscreteEditCanceled;                          // 0x03C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEditingItemValueIncremented;                            // 0x03D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEditingItemValueDecremented;                            // 0x03E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDragEditStarted;                               // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDragEditCommitted;                             // 0x0400(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDragEditCanceled;                              // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFocusItemDragMovedDelegate;                             // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UOverlaySlot*                                FocusBGImageOverlaySlot;                                  // 0x0430(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UImage*                                      FocusBGImage;                                             // 0x0438(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              DragEditStartDeadzone;                                    // 0x0440(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bBlockFocusAudio : 1;                                     // 0x0444(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bBlockUseAudio : 1;                                       // 0x0444(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bDiscreteEditCannotBeCommittedWithButtonInput : 1;        // 0x0444(0x0001) (Edit)
	unsigned char                                      bIsFocused : 1;                                           // 0x0444(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bIsLastUsed : 1;                                          // 0x0444(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bEditTimeForceNotInteractive : 1;                         // 0x0444(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x1B];                                      // 0x0445(0x001B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuFocusItemWidget");
		return ptr;
	}


	void SetInteractionBlocked(bool IsInteractionBlocked);
	bool IsInteractionBlocked();
	struct FVector2D GetMenuFocusWidgetSize();
	bool GetIsBeingDragged();
	bool GetIsBeingDiscretelyEdited();
	void ForceCommitDiscreteEditing();
	bool AttemptToCommitDiscreteEdit();
};


// Class Astro.AstroGameMenuSpatialWindow
// 0x0000 (0x0278 - 0x0278)
class UAstroGameMenuSpatialWindow : public UAstroGameMenuFocusItemContainerWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuSpatialWindow");
		return ptr;
	}


	struct FVector2D GetUnboundedDimensionOfSubPane();
	float GetTotalHeightOfSubPaneFocusItemWidgets();
	float GetMaxWidthOfSubPaneFocusItemWidgets();
	struct FVector2D GetLocalPositionOfFocusItemWidget(class UAstroGameMenuFocusItemWidget* FocusItemWidget);
};


// Class Astro.AstroGameMenuPopoutWidget
// 0x0008 (0x0280 - 0x0278)
class UAstroGameMenuPopoutWidget : public UAstroGameMenuSpatialWindow
{
public:
	class UAstroGameMenuPopoutWidgetContentsBase*      PopoutContents;                                           // 0x0278(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuPopoutWidget");
		return ptr;
	}


	class UPanelWidget* GetPopoutPanelWrapper();
	class UPanelWidget* GetPopoutOutermostContainer();
	class UPanelWidget* GetPopoutContentsWrapper();
};


// Class Astro.AstroGameMenuPopoutWidgetContentsBase
// 0x0068 (0x0278 - 0x0210)
class UAstroGameMenuPopoutWidgetContentsBase : public UUserWidgetBlueprintDesignable
{
public:
	class UAstroGameMenuFocusItemWidget*               OwningFocusItem;                                          // 0x0210(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FText                                       PopoutParentTitleText;                                    // 0x0218(0x0018) (Edit, BlueprintVisible)
	struct FAstroGameMenuEntryWidgetDisplayData        PopoutParentTitleTextWidgetDisplayData;                   // 0x0230(0x0038) (Edit, BlueprintVisible)
	int                                                InitialFocusCoordinates;                                  // 0x0268(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	class UAstroGameMenuPopoutWidget*                  ParentPopoutWidget;                                       // 0x0270(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuPopoutWidgetContentsBase");
		return ptr;
	}


	void HandleWrapperFocusIndexChanged(int NewFocusIndex);
	void HandleNavigationBackRequest();
};


// Class Astro.AstroGameMenuScrollBarBase
// 0x0020 (0x0480 - 0x0460)
class UAstroGameMenuScrollBarBase : public UAstroGameMenuFocusItemWidget
{
public:
	class UWidget*                                     ScrollBarHandleWidget;                                    // 0x0460(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidget*                                     ScrollBarBGWidget;                                        // 0x0468(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0470(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuScrollBarBase");
		return ptr;
	}


	void SetScrollBarHandlePositionNormalized(float NormalizedPosition);
	void SetScrollBarHandlePosition(float Position);
	bool IsScrollBarActive();
	void HandleTargetFocusItemChanged(class UAstroGameMenuFocusItemWidget* FocusItem, EFocusItemFocusChangeCause FocusChangeCause);
	float GetScrollBarWidth();
	float GetScrollBarHandlePositionNormalized();
	float GetScrollBarHandlePosition();
	void DeactivateScrollBar();
	void AddScrollDelta(float ScrollDelta);
	void ActivateScrollBar(float NewViewableHeightOfScrollTargetContainer, float VerticalPaddingOfScrollTargetContainer, class UAstroGameMenuSubPaneWidget* NewScrollBarTarget);
};


// Class Astro.AstroGameMenuStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroGameMenuStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuStatics");
		return ptr;
	}


	bool STATIC_TryGetCurrentGameMenuContext(class UObject* WorldContextObject, EAstroGameMenuContext* OutCurrentMenuContext);
	void STATIC_SetIsPreviewingCharacterCustomizationFromTitleScreen(class UObject* WorldContextObject, bool IsPreviewing);
	void STATIC_RestoreKeyboardFocusToGameMenu(class UObject* WorldContextObject);
	void STATIC_ResizeCurrentPopout(class UObject* WorldContextObject);
	void STATIC_RemoveMouseFocusSuppressionFromCurrentSubPane(class UObject* WorldContextObject, EMouseFocusChangeSuppressionSource MouseSuppression);
	void STATIC_PushNavigationStackCoordinates(class UObject* WorldContextObject, const struct FAstroGameMenuNavigationCoordinates& NavCoordinates);
	void STATIC_PresentTitleGameMenu(class UObject* WorldContextObject);
	class UAstroGameMenuPopoutWidget* STATIC_PresentGameMenuPopoutWidgetPreconstructed(class UObject* WorldContextObject, class UAstroGameMenuFocusItemWidget* OwningFocusItem, class UAstroGameMenuPopoutWidgetContentsBase* PopoutContents, class UAstroGameMenuPopoutWidget* PopoutWrapper);
	class UAstroGameMenuPopoutWidget* STATIC_PresentGameMenuPopoutWidget(class UObject* WorldContextObject, class UAstroGameMenuFocusItemWidget* OwningFocusItem, class UAstroGameMenuPopoutWidgetContentsBase* PopoutContents, class UClass* OptionalCustomPopoutWrapper);
	void STATIC_PopNavigationStack(class UObject* WorldContextObject);
	void STATIC_LockGameMenuControls(class UObject* WorldContextObject, bool isLocked);
	void STATIC_LayoutGameMenuActiveSubPane(class UObject* WorldContextObject);
	void STATIC_LayoutGameMenu(class UObject* WorldContextObject);
	bool STATIC_IsPreviewingCharacterCustomizationFromTitleScreen(class UObject* WorldContextObject);
	bool STATIC_IsMenuEntryBeingEditedOrDragged(class UObject* WorldContextObject);
	bool STATIC_IsGameMenuTabBarAuthoringDataValid(const struct FAstroGameMenuTabBarAuthoringData& tabBarData);
	bool STATIC_GetTutorialSlideDeck(class UObject* WorldContextObject, EAstroGameMenuTutorialSlideDeckKey TutorialSlideDeckKey, struct FAstroGameMenuTutorialSlideDeck* OutTutorialSlideDeckData);
	bool STATIC_GetTutorialSlideCard(class UObject* WorldContextObject, EAstroGameMenuTutoriaSlideCardKey TutorialSlideCardKey, struct FAstroGameMenuTutorialSlide* OutTutorialSlideCardData);
	struct FVector2D STATIC_GetOriginOfActiveSubPaneContentsRegion(class UObject* WorldContextObject);
	class UUserWidget* STATIC_GetMOTDWidget(class UObject* WorldContextObject);
	bool STATIC_GetKeybindingForDiscreteInputMapping(const struct FAstroDiscreteInputDefinition& DiscreteInputDefinition, struct FKey* OutKey, bool* OutIsAxis);
	struct FVector2D STATIC_GetCachedSizeOfGameMenu(class UObject* WorldContextObject, bool IncludeScrollBarSize);
	class UUserWidget* STATIC_GetAchievementProgressionWarningWidget(class UObject* WorldContextObject);
	void STATIC_GameMenuTryToSaveAndQuitGame(class UObject* WorldContextObject, bool ReturnToTitleScreen, const struct FScriptDelegate& OnFailedToSaveGame);
	void STATIC_GameMenuForceQuitGame(class UObject* WorldContextObject, bool ReturnToTitleScreen, bool AttemptToSave);
	void STATIC_DismissTitleGameMenu(class UObject* WorldContextObject);
	void STATIC_DismissGameMenu(class UObject* WorldContextObject);
	void STATIC_DismissCurrentGameMenuPopoutWidget(class UObject* WorldContextObject);
	void STATIC_ClearGameMenuSelection(class UObject* WorldContextObject);
	void STATIC_ChangeSubPaneOnTopOfNavigationStack(class UObject* WorldContextObject, class UClass* NewSubPane);
	void STATIC_ChangeMenuContext(class UObject* WorldContextObject, EAstroGameMenuContext NewMenuContext);
	bool STATIC_AreGameMenuTabBarAuthoringDataEqual(const struct FAstroGameMenuTabBarAuthoringData& tabBarDataA, const struct FAstroGameMenuTabBarAuthoringData& tabBarDataB);
	bool STATIC_AreGameMenuControlsLocked(class UObject* WorldContextObject);
	void STATIC_AddMouseFocusSuppressionToCurrentSubPane(class UObject* WorldContextObject, EMouseFocusChangeSuppressionSource MouseSuppression);
};


// Class Astro.AstroGameMenuSubPaneWidget
// 0x0000 (0x0278 - 0x0278)
class UAstroGameMenuSubPaneWidget : public UAstroGameMenuSpatialWindow
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuSubPaneWidget");
		return ptr;
	}


	void NavigatedAwayFrom(bool isNavigateBack);
	void MenuBeingClosed();
	struct FEventReply AttemptToUseFocusedItemViaMouse();
};


// Class Astro.AstroGameMenuTabBarButtonWidget
// 0x0000 (0x0460 - 0x0460)
class UAstroGameMenuTabBarButtonWidget : public UAstroGameMenuFocusItemWidget
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuTabBarButtonWidget");
		return ptr;
	}

};


// Class Astro.AstroGameMenuTabBarWidget
// 0x0020 (0x0298 - 0x0278)
class UAstroGameMenuTabBarWidget : public UAstroGameMenuFocusItemContainerWidget
{
public:
	struct FAstroGameMenuTabBarAuthoringData           AuthoringData;                                            // 0x0278(0x0020) (Edit, BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuTabBarWidget");
		return ptr;
	}


	float GetHeightOfTabBar();
};


// Class Astro.AstroGameMenuWidget
// 0x0170 (0x0380 - 0x0210)
class UAstroGameMenuWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0210(0x00C0) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnMenuOpened;                                             // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMenuClosed;                                             // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDisplayMOTD;                                            // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPopoutPresented;                                        // 0x0300(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPopoutDismissed;                                        // 0x0310(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USpacer*                                     ScrollBarSpacer;                                          // 0x0320(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAstroGameMenuScrollBarBase*                 ScrollBarWidget;                                          // 0x0328(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAstroGameMenuSubPaneWidget*                 ActiveSubPaneWidget;                                      // 0x0330(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0338(0x0008) MISSED OFFSET
	class UAstroGameMenuTabBarWidget*                  ActiveTabBarWidget;                                       // 0x0340(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UAstroGameMenuPopoutWidget*                  ActivePopoutWidget;                                       // 0x0348(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              MinimumMenuWidth;                                         // 0x0350(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ScrollDelta;                                              // 0x0354(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UAstroGameMenuFocusItemContainerWidget*      ScrollBarContainerWidget;                                 // 0x0358(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      PopoutConnectorWidget;                                    // 0x0360(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector2D                                   PopoutPositionOffset;                                     // 0x0368(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0370(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuWidget");
		return ptr;
	}


	void OnMenuOpenClose__DelegateSignature(EAstroGameMenuContext GameMenuContext);
	void LockControls(bool bLockControls);
	void HandleDebugMenuVisbilityChanged(bool IsVisible);
	float GetVerticalPaddingForContentSubPaneRegion();
	class UAstroGameMenuTabBarWidget* GetTabBarWidget();
	class UBorder* GetSubPaneWrapper();
	class UCanvasPanel* GetPopoutWrapper();
	struct FVector2D GetOriginOfActiveSubPaneContentsRegion();
	class UUserWidget* GetMOTDWidget();
	class UVerticalBox* GetMenuContentsWrapper();
	float GetMaxHeightOfContentSubPaneRegion();
	float GetLowerBoundOfMenu();
	struct FVector2D GetBoundedSizeOfMenu();
	class UUserWidget* GetAchievementProgressionWarningWidget();
	void BackToMainMenuHack();
};


// Class Astro.AstroGameMode
// 0x0190 (0x0608 - 0x0478)
class AAstroGameMode : public AGameMode
{
public:
	struct FScriptMulticastDelegate                    OnGameLifecycleStateChanged;                              // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMatchStarted;                                           // 0x0488(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerRestarted;                                        // 0x0498(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayerJoin;                                             // 0x04A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClientCharacterSelected;                                // 0x04B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x28];                                      // 0x04C8(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroGameMode.NewGameMap
	EResearchProgressionMethod                         ResearchProgressionMethod;                                // 0x04F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x04F1(0x0007) MISSED OFFSET
	class UClass*                                      InitialKnownItemTypeList;                                 // 0x04F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      InitialItemTypeUnlockList;                                // 0x0500(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                InitialResearchPointBalance;                              // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPlayerStartsWithTerrainTool : 1;                         // 0x050C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bAllowsMultiplayer : 1;                                   // 0x050C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsTutorialMode : 1;                                      // 0x050C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bDeferStartListenServer : 1;                              // 0x050C(0x0001) (Edit, DisableEditOnInstance)
	bool                                               NewGamesUseIntroCinematic;                                // 0x050D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               PlayIntroOnce;                                            // 0x050E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NewGamesUseTitleMenu;                                     // 0x050F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EnableSavedGamesAutomatically;                            // 0x0510(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4F];                                      // 0x0511(0x004F) MISSED OFFSET
	class UStorageChassisComponent*                    DefaultSpawnPoint;                                        // 0x0560(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UStorageChassisComponent*>            UnmappedSpawnPoints;                                      // 0x0568(0x0010) (ExportObject, ZeroConstructor)
	TMap<class ASolarBody*, struct FSpawnPointList>    SpawnPointsBySolarBody;                                   // 0x0578(0x0050) (ZeroConstructor)
	TArray<class AActor*>                              CandidateStartingPoints;                                  // 0x05C8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x28];                                      // 0x05D8(0x0028) MISSED OFFSET
	class ULevelSequencePlayer*                        IntroSequencePlayer;                                      // 0x0600(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMode");
		return ptr;
	}


	void UnregisterSpawnPointActorAttachmentsComponent(class UStorageChassisComponent* spawnPoint);
	void SwitchLifecycleState(EGameLifecycleState NewState, const struct FString& Reason);
	void SpawnPlayerFromHistory(int64_t NetworkUuid);
	void SetMultiplayerEnabled(bool bIsEnabled);
	void ServerSaveGameName(const struct FString& Name);
	void ServerSaveGameAndQuit();
	void ServerSaveGame();
	void ServerNewGame();
	bool ServerLoadGameName(const struct FString& Name);
	void RespawnPlayer(class APlayController* Player, const struct FVector& locationOnDeath);
	void RegisterSpawnPointActorAttachmentsComponent(class UStorageChassisComponent* spawnPoint);
	void OnOutroCinematicComplete();
	void OnNewGameInitiated();
	void OnIntroCinematicFinished();
	void OnIntroCinematicComplete();
	void OnFullLicenseDetected();
	bool STATIC_IsPackagedBuild();
	void InitializeForSolarSystem(class USolarSystem* SolarSystem);
	void HandleControllingLocalPlayerLoggedOut();
	class UStorageChassisComponent* GetDefaultSpawnPoint();
	EGameLifecycleState GetCurrentLifecycleState();
	void ClearCinematicTerrainPoints();
	void AuthoritySetDefaultSpawnLocation(const struct FVector& spawnLocation);
	bool AuthoritySelectStartingPointFromCandiates(struct FVector* outStartingLocation, struct FRotator* outStartingRotation);
	void AuthorityAddStartingPointCandiateActor(class AActor* candidateActor);
	void AddTerrainResolutionPoint(float X, float Y, float Z, float Radius);
};


// Class Astro.AstroGameSingleton
// 0x05E0 (0x0608 - 0x0028)
class UAstroGameSingleton : public UObject
{
public:
	unsigned char                                      bIsExperimentalBuild : 1;                                 // 0x0028(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	class UClass*                                      GameMenu;                                                 // 0x0030(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAstroGameMenuTutorialSlideDeckDatabase*     TutorialSlideDeckDatabase;                                // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultPopoutWrapper;                                     // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HelpMenu;                                                 // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      HelpMenuGamepad;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DebugMenu;                                                // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      MasterItemList;                                           // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ForcedPackageIncludes;                                    // 0x0068(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UResearchProgressionTable*                   ResearchProgressionTable;                                 // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UEmoteTable*                                 EmoteTable;                                               // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USuitTable*                                  SuitTable;                                                // 0x0080(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UDeployableItemPackageCatalog*               DeployableItemPackageCatalog;                             // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UDestructionDefinitionTable*                 DestructionDefinitionTable;                               // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ScrapItemType;                                            // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SedimentItemType;                                         // 0x00A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UScrapConversionTable*                       ScrapConversionTable;                                     // 0x00A8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoilConversionTable*                        SoilConversionTable;                                      // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UItemTradeValueTable*                        ItemTradeValueTable;                                      // 0x00B8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCraftingDependencyMapList*                  CraftingSources;                                          // 0x00C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UInputKeyToIconMapping*                      InputKeyToIconMapping;                                    // 0x00C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAstroDiscreteInputDefinitionDatabase*       DiscreteAstroInputDefinitionDatabase;                     // 0x00D0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UTetherSystemProperties*                     TetherProperties;                                         // 0x00D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UAstroFoliageDestructionData*                FoliageDestructionData;                                   // 0x00E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindPowerActivationThreshold;                             // 0x00E8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultHoldInputDuration;                                 // 0x00EC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DefaultHoldInputCancelTreshold;                           // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UAstroCharacterCustomizationGlobals*         CharacterCustomizationGlobals;                            // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAstroMicroTxnStoreGlobals*                  MicroTxnStoreGlobals;                                     // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0xD0];                                      // 0x0108(0x00D0) MISSED OFFSET
	class UAstroPlatformSpecificCustomizationContent*  PlatformSpecificCustomizationContent;                     // 0x01D8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroPlatformSpecificCustomizationContent*  WindowsSpecificCustomizationContent;                      // 0x01E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroPlatformSpecificCustomizationContent*  XboxSpecificCustomizationContent;                         // 0x01E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UAstroPlatformSpecificCustomizationContent*  PS4SpecificCustomizationContent;                          // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FCombinedRuntimeCustomizationContent        RuntimeCustomizationContent;                              // 0x01F8(0x0080) (Transient)
	struct FText                                       IndicatorRequestItemOverrideSubtitle;                     // 0x0278(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       IndicatorOutputItemOverrideSubtitle;                      // 0x0290(0x0018) (Edit, DisableEditOnInstance)
	class UClass*                                      PlanetProxyActor;                                         // 0x02A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      WindstormClass;                                           // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      RewardTable;                                              // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ControlSymbolIconActor;                                   // 0x02C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ControlSymbolIconPingActor;                               // 0x02C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ResourceInfoActor;                                        // 0x02D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ResourceInfoNeededActor;                                  // 0x02D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ResourceInfoPingActor;                                    // 0x02E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PowerPingActorCharge;                                     // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PowerPingActorDischarge;                                  // 0x02F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ConnectSymbol;                                            // 0x02F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PullConnectionSymbol;                                     // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      LiftItemSymbol;                                           // 0x0308(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PlaceItemSymbol;                                          // 0x0310(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FString>                             GlobalSoundBanks;                                         // 0x0318(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PowerDeltaAddAudioEvent;                                  // 0x0328(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     PowerDeltaSubtractAudioEvent;                             // 0x0338(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     CannotQuickStowItemAudioEvent;                            // 0x0348(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UMaterialInterface*                          IndicatorMaterial;                                        // 0x0358(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          InvalidIndicatorMaterial;                                 // 0x0360(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          ButtonMaterial;                                           // 0x0368(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PrintingMaterial;                                         // 0x0370(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UFont*                                       AstroFont;                                                // 0x0378(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FLinearColor>                        DefaultPlayerAccentColors;                                // 0x0380(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FText>                               DefaultPlayerAccentName;                                  // 0x0390(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UMaterialInterface*                          PowerColdMaterial;                                        // 0x03A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          PowerHotMaterial;                                         // 0x03A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<struct FString, class UMaterialInstance*>     CrateLogoMaterialInstances;                               // 0x03B0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	class UAstroColorDatabase*                         AstroColorDatabase;                                       // 0x0400(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAstroUIStylingDatabase*                     AstroUIStylingDatabase;                                   // 0x0408(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAstroUIAudioDatabase*                       AstroUIAudioDatabase;                                     // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          NonFlashingButtonMaterial;                                // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          FlashingButtonMaterial;                                   // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 ResourceShellMesh;                                        // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 CylinderButtonOuterMesh;                                  // 0x0430(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 CylinderButtonInnerMesh;                                  // 0x0438(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 CylinderButtonFullMesh;                                   // 0x0440(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 BoxButtonOuterMesh;                                       // 0x0448(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 BoxButtonInnerMesh;                                       // 0x0450(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 BoxButtonFullMesh;                                        // 0x0458(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class ULocalizationCultureOptions*                 LocalizationCultureOptions;                               // 0x0460(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                ConfirmButtonColor;                                       // 0x0468(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                CancelButtonColor;                                        // 0x0478(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UTexture2D*                                  FoliageLUT;                                               // 0x0488(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipBadgeBackgroundSquare;               // 0x0490(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipBadgeBackgroundRound;                // 0x0498(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DefaultTooltipBadgeColor;                                 // 0x04A0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FSimpleFocusTooltipWidgetAuthoringData      SalvageDefaultTooltipData;                                // 0x04B0(0x0068) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      ToolTipWidget;                                            // 0x0518(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAstroNotificationDatabase*                  AstroNotificationDatabase;                                // 0x0520(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAstroPopupBadgeDatabase*                    AstroPopupBadgeDatabase;                                  // 0x0528(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      InteractionIndicatorPip;                                  // 0x0530(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   DefaultUIPivot;                                           // 0x0538(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UMessageOfTheDay*                            DefaultMessageOfTheDay;                                   // 0x0540(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAstroEntityWorldConfig*                     EntityWorldConfig;                                        // 0x0548(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       TutorialMapName;                                          // 0x0550(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     TutorialTooltipCursorTargetBadgeIcon;                     // 0x0558(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipCursorTargetBadgeBackground;         // 0x0560(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TutorialTooltipCursorTargetBadgeColor;                    // 0x0568(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UObject*                                     TutorialTooltipInfoBadgeIcon;                             // 0x0578(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipInfoBadgeBackground;                 // 0x0580(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TutorialTooltipInfoBadgeColor;                            // 0x0588(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UObject*                                     TutorialTooltipActionBadgeIcon;                           // 0x0598(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipActionBadgeBackground;               // 0x05A0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TutorialTooltipActionBadgeColor;                          // 0x05A8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UObject*                                     TutorialTooltipLocationBadgeIcon;                         // 0x05B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     ResourceObjectTooltipLocationBadgeBackground;             // 0x05C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                TutorialTooltipLocationBadgeColor;                        // 0x05C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UAchievementDefinitionTable*                 AchievementDefinitions;                                   // 0x05D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UVoxelVolumePaintModePalette*                CreativeModePaintPalette;                                 // 0x05E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           CreativeModePaintSpecialPaletteIndex;                     // 0x05E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	TArray<class UClass*>                              AutoCraneItemBlackList;                                   // 0x05F0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0600(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameSingleton");
		return ptr;
	}


	class UAstroGameSingleton* STATIC_GetAstroGameSingleton();
};


// Class Astro.AstroGameState
// 0x0430 (0x0838 - 0x0408)
class AAstroGameState : public AGameState
{
public:
	float                                              GameSpeed;                                                // 0x0408(0x0004) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              SolarTimeScaleMultiplierCreative;                         // 0x040C(0x0004) (BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnObjectiveSet;                                           // 0x0410(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTutorialNotify;                                         // 0x0420(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStarterItemCreated;                                     // 0x0430(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResearchPointBalanceChanged;                            // 0x0440(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnKnownItemTypesChanged;                                  // 0x0450(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnlockedItemTypesChanged;                               // 0x0460(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeModeCatalogUnlockedChanged;                     // 0x0470(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeModeEnabledChanged;                             // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAchievementProgressionDisabledChanged;                  // 0x0490(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCreativeFreeFuelChanged;                                // 0x04A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOutroCinematicStarted;                                  // 0x04B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOutroSequenceActorCreated;                              // 0x04C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOutroCinematicCompleted;                                // 0x04D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 DeformToolActivation;                                     // 0x04E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              AvailableRecipes;                                         // 0x04E8(0x0010) (BlueprintVisible, ZeroConstructor, SaveGame)
	bool                                               TutorialInteractionMode;                                  // 0x04F8(0x0001) (BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               TutorialSlowMovement;                                     // 0x04F9(0x0001) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x04FA(0x0006) MISSED OFFSET
	struct FName                                       CurrentObjective;                                         // 0x0500(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	TArray<struct FName>                               TutorialNotifiedList;                                     // 0x0508(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame)
	TArray<class APhysicalItem*>                       SpawnedStartingItems;                                     // 0x0518(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame)
	bool                                               MapLoadedFromSave;                                        // 0x0528(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SaveGamePermitted;                                        // 0x0529(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x052A(0x0002) MISSED OFFSET
	float                                              WindValue;                                                // 0x052C(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    UnlockedVintageProbesChanged;                             // 0x0530(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnWandererRealityTearOpenChanged;                         // 0x0540(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<EAstroAchievementKeys, int>                   CountAchievementProgress;                                 // 0x0550(0x0050) (ZeroConstructor, SaveGame)
	TMap<EAstroAchievementKeys, float>                 FloatAchievementProgress;                                 // 0x05A0(0x0050) (ZeroConstructor, SaveGame)
	TMap<EAstroAchievementKeys, struct FItemCollectionAchievementProgress> CollectionAchievementProgress;                            // 0x05F0(0x0050) (ZeroConstructor, SaveGame)
	struct FScriptMulticastDelegate                    OnActiveCreativeTerrainColorChanged;                      // 0x0640(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bIsMultiplayerEnabled : 1;                                // 0x0650(0x0001) (SaveGame)
	unsigned char                                      bIsOutroCinematicActive : 1;                              // 0x0650(0x0001) (Net)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0651(0x0007) MISSED OFFSET
	TArray<class AActor*>                              NewPlayerSpawnLocations;                                  // 0x0658(0x0010) (ZeroConstructor, SaveGame)
	TArray<class AActor*>                              SpawnLocations;                                           // 0x0668(0x0010) (ZeroConstructor, SaveGame)
	struct FString                                     LobbyId;                                                  // 0x0678(0x0010) (Net, ZeroConstructor)
	class UActorEntityLinkComponent*                   EntityLinkComponent;                                      // 0x0688(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, IsPlainOldData)
	EResearchProgressionMethod                         ResearchProgressionMethod;                                // 0x0690(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0691(0x0003) MISSED OFFSET
	float                                              CurrentResearchPointBalance;                              // 0x0694(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentResearchPointsPerMinute;                           // 0x0698(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x069C(0x0004) MISSED OFFSET
	TArray<class UClass*>                              KnownItemTypes;                                           // 0x06A0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	TArray<class UClass*>                              UnlockedItemTypes;                                        // 0x06B0(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	TArray<struct FScannableStatus>                    ScannableStatuses;                                        // 0x06C0(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData05[0x20];                                      // 0x06D0(0x0020) MISSED OFFSET
	TArray<struct FProbeUnlockState>                   ProbeUnlockStates;                                        // 0x06F0(0x0010) (Net, ZeroConstructor, SaveGame)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0700(0x0008) MISSED OFFSET
	class ULevelSequencePlayer*                        OutroCinematicPlayer;                                     // 0x0708(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ALevelSequenceActor*                         OutroSequenceActor;                                       // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x78];                                      // 0x0718(0x0078) MISSED OFFSET
	unsigned char                                      UnknownData08 : 4;                                        // 0x0790(0x0001)
	unsigned char                                      bAchievementProgressionDisabled : 1;                      // 0x0790(0x0001) (Net, SaveGame)
	unsigned char                                      bIsIndividualDedicatedServerGame : 1;                     // 0x0790(0x0001) (Net, SaveGame)
	unsigned char                                      bCreativeModeActive : 1;                                  // 0x0790(0x0001) (Net, SaveGame)
	unsigned char                                      bCreativeAllCatalogItemsUnlocked : 1;                     // 0x0790(0x0001) (Net, SaveGame)
	unsigned char                                      bCreativeFreeOxygenOn : 1;                                // 0x0791(0x0001) (SaveGame)
	unsigned char                                      bCreativeFreeFuelOn : 1;                                  // 0x0791(0x0001) (Net, SaveGame)
	unsigned char                                      bCreativeInvisibleToHazardsOn : 1;                        // 0x0791(0x0001) (SaveGame)
	unsigned char                                      bCreativeInvincibleOn : 1;                                // 0x0791(0x0001) (SaveGame)
	unsigned char                                      bCreativeUnlimitedBackpackPowerOn : 1;                    // 0x0791(0x0001) (SaveGame)
	unsigned char                                      UnknownData09[0x6];                                       // 0x0792(0x0006) MISSED OFFSET
	float                                              MatCollectionGameSpeed;                                   // 0x0798(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData10[0x24];                                      // 0x079C(0x0024) MISSED OFFSET
	class UActuatorQueue*                              ActuatorQueue;                                            // 0x07C0(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	class URewardSystem*                               RewardSystem;                                             // 0x07C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class URewardState*                                RewardState;                                              // 0x07D0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FAstroRemotePlayerChunk>             RemotePlayerHistory;                                      // 0x07D8(0x0010) (ZeroConstructor, Transient)
	TMap<uint16_t, struct FScriptMulticastDelegate>    DeformationCompleteEvents;                                // 0x07E8(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameState");
		return ptr;
	}


	void UnregisterSpawnedStartingItem(class APhysicalItem* Item);
	void SetOxygenFreeCreative(bool OxygenFree);
	void SetInvisibleToHazardsCreative(bool InvisibleToHazards);
	void SetInvincibleCreative(bool Invincible);
	void SetFuelFreeCreative(bool FreeFuelEnabled);
	void SetCurrentObjective(const struct FName& Name);
	void SetCreativeModeActive(bool CreativeMode);
	void SetCatalogUnlockedCreative(bool CatalogUnlocked);
	void SetBackpackPowerUnlimitedCreative(bool BackpackPowerUnlimited);
	void SetAchievementProgressionDisabledCreative(bool AchievementProgressionDisabled);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void RemoveNewPlayerSpawnLocation(class AActor* Spawn);
	void RegisterSpawnedStartingItem(class APhysicalItem* Item);
	void OnRep_CreativeModeSettings();
	void OnAuthorityUnlockedItemsChanged(TArray<class UClass*> NewUnlockedItems);
	void OnAuthorityResearchPointBalanceChanged(float NewPointBalance);
	void OnAuthorityKnownItemsChanged(TArray<class UClass*> newKnownItems);
	bool NotifyTutorial(const struct FName& Name, bool bShowText);
	void NotifyOutroCinematicCompleted();
	void MultiSoundFX(const struct FTransform& Transform, class USoundBase* Sound, class UParticleSystem* Particle);
	void MulticastNewMaterialPalette(class AAstroPlanet* Planet, TArray<struct FPackedVoxelMaterialInfo> dynamicMaterials);
	void MulticastNewCreativeMaterialPalette(class AAstroPlanet* Planet, TArray<struct FPackedVoxelMaterialInfo> dynamicMaterials, TArray<struct FCreativePaintMaterialMapping> creativePaintData);
	void MulticastExplosionEffects(const struct FTransform& Transform, class AActor* Actor, const struct FName& surfTypeSwitchName, TArray<struct FString> AudioEffects, TArray<class UParticleSystem*> ParticleEffects, float Power);
	void MulticastDisplayResearchPointChange(int researchPointDelta);
	void MulticastDisplayGrantDurableMessage(class UClass* itemToUnlock);
	void MulticastAudioEventAndVFXWithTint(const struct FTransform& Transform, const struct FString& AudioEvent, class UParticleSystem* ParticleEffect, const struct FLinearColor& Color);
	void MulticastAudioEventAndVFX(const struct FTransform& Transform, const struct FString& AudioEvent, class UParticleSystem* ParticleEffect);
	bool IsProbeUnlocked(class AAstroCharacter* Character, const struct FName& ProbeName);
	bool IsOxygenFreeCreative();
	bool IsInvisibleToHazardsCreative();
	bool IsInvincibleCreative();
	bool IsGravitySimulationEnabled();
	bool IsFuelFreeCreative();
	bool IsCreativeModeActive();
	bool IsCatalogUnlockedCreative();
	bool IsBackpackPowerUnlimitedCreative();
	bool IsAchievementProgressionDisabled();
	bool HasSaveGameCacheBeenEnumerated();
	bool HasEverBeenIndividualDedicatedServerGame();
	bool HasEverBeenCreativeGame();
	TArray<class APhysicalItem*> GetStartingItemArrayRef();
	class URewardSystem* GetRewardSystem();
	class URewardState* GetRewardState();
	struct FScannableStatus GetNearestRelevantScannable(class AAstroCharacter* Player);
	class UActuatorQueue* GetActuatorQueue();
	EAchievementProgressionState GetAchievementProgressionState();
	void DoDeformation(const struct FDeformationParams& params, bool shouldThrottle);
	void DisplayDiscoverItemTypeMessage(class UClass* itemTypeDiscovered);
	void DestroyAllSpawnedStartingItems();
	void BroadcastUnlockedVintageProbesChanged();
	void BroadcastUnlockedItemsChanged();
	void BroadcastResearchPointBalanceChanged();
	void BroadcastOnCreativeModeCatalogUnlockedChanged();
	void BroadcastKnownItemsChanged();
	void AuthoritySetWandererRealityTearOpenState(EWandererRealityTearOpenState State);
	EWandererRealityTearOpenState AuthorityGetWandererRealityTearOpenState();
	bool ArePlayerNamesVisible();
	bool AreBeaconsVisible();
	void AddAndPrioritizeNewPlayerSpawnLocation(class AActor* Spawn);
};


// Class Astro.AstroGameUserSettings
// 0x0108 (0x0210 - 0x0108)
class UAstroGameUserSettings : public UGameUserSettings
{
public:
	struct FScriptMulticastDelegate                    OnNonResolutionSettingsChanged;                           // 0x0108(0x0010) (ZeroConstructor, InstancedReference)
	struct FString                                     Language;                                                 // 0x0118(0x0010) (ZeroConstructor, Config)
	int                                                Brightness;                                               // 0x0128(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                CloudQuality;                                             // 0x012C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	int                                                MouseSensitivity;                                         // 0x0130(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MasterVol;                                                // 0x0134(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              MusicVol;                                                 // 0x0138(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              SoundFXVol;                                               // 0x013C(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              VoiceVol;                                                 // 0x0140(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	float                                              AmbientVol;                                               // 0x0144(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               InvertedCameraYAxixMouse;                                 // 0x0148(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHoldToSprintMouse;                                       // 0x0149(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               InvertedCameraYAxisGamepad;                               // 0x014A(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bHoldToSprintGamepad;                                     // 0x014B(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bVehiclesUseAbsoluteSteering;                             // 0x014C(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               bVehiclesUseYawAirControls;                               // 0x014D(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x014E(0x0002) MISSED OFFSET
	int                                                MaxPlayers;                                               // 0x0150(0x0004) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      NumTimesCreativeTutorialShown;                            // 0x0154(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	bool                                               AllowInitialPlanetSelection;                              // 0x0155(0x0001) (ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0156(0x0002) MISSED OFFSET
	TArray<struct FInputActionKeyMapping>              ActionMappings;                                           // 0x0158(0x0010) (ZeroConstructor, Config)
	TArray<struct FInputAxisKeyMapping>                AxisMappings;                                             // 0x0168(0x0010) (ZeroConstructor, Config)
	TArray<struct FInputActionKeyMapping>              ActiveActionMappings;                                     // 0x0178(0x0010) (ZeroConstructor)
	TArray<struct FInputAxisKeyMapping>                ActiveAxisMappings;                                       // 0x0188(0x0010) (ZeroConstructor)
	TMap<struct FInputReference, struct FInputReference> SlavedMappings;                                           // 0x0198(0x0050) (ZeroConstructor)
	TArray<struct FName>                               RebindableInputActions;                                   // 0x01E8(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x18];                                      // 0x01F8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameUserSettings");
		return ptr;
	}


	void SetWindowMode(TEnumAsByte<EWindowMode> InWindowMode);
	void SetVSync(bool InbVSync);
	void SetVoiceVolume(float InVoiceVolume);
	void SetVehiclesUseYawAirControls(bool InUseYawAirControls, class APlayerController* Player);
	void SetVehiclesUseAbsoluteSteering(bool InUseAbsSteering);
	void SetupInputMappings(class APlayerController* PlayController);
	void SetToDefaults();
	void SetSfxVolume(float InSfxVolume);
	void SetRebindableInputActions(TArray<EAstroDiscreteInputOptionPlayerFacing> PlayerFacingRebindableInputActions);
	void SetMusicVolume(float InMusicVolume);
	void SetMouseSensitivity(int InMouseSensitivity);
	void SetMaxPlayers(int InMaxPlayers);
	void SetMasterVolume(float InMasterVolume);
	void SetLanguage(const struct FString& InLanguage);
	void SetInvertedCameraYAxisMouse(bool InInvertedCameraYAxixMouse);
	void SetInvertedCameraYAxisGamepad(bool InInvertedCameraYAxisGamepad);
	void SetHoldToSprintMouse(bool InHoldToSprint);
	void SetHoldToSprintGamepad(bool InHoldToSprint);
	void SetFpsLimit(float InFpsLimit);
	void SetCloudQuality(int InCloudQuality);
	void SetBrightness(int InBrightness);
	void SetAstroWindowMode(EAstroWindowMode InAstroWindowMode);
	void SetAmbientVolume(float InAmbientVolume);
	void SetAllowInitialPlanetSelection(bool InAllowInitialPlanetSelection);
	void RestoreInputDefaults(class APlayerController* PlayController);
	void ResetNumTimesCreativeTutorialShown();
	void RemoveInputAxisMapping(const struct FKey& Key, const struct FName& AxisName, float Scale);
	void RemoveInputActionMapping(const struct FKey& Key, const struct FName& ActionName);
	void PreviewAudioSettings(float MusicVol, float sfxVol, float VoiceVol, float AmbientVol);
	void LoadSettings(bool bForceReload);
	void IncrementNumTimesCreativeTutorialShown();
	TEnumAsByte<EWindowMode> GetWindowMode();
	bool GetVSync();
	float GetVoiceVolume();
	bool GetVehiclesUseYawAirControls();
	bool GetVehiclesUseAbsoluteSteering();
	float GetSfxVolume();
	unsigned char GetNumTimesCreativeTutorialShown();
	float GetMusicVolume();
	int GetMouseSensitivity();
	int GetMaxPlayers();
	float GetMasterVolume();
	struct FString GetLanguage();
	bool GetInvertedCameraYAxisMouse();
	bool GetInvertedCameraYAxisGamepad();
	TArray<struct FInputAxisKeyMapping> GetInputAxisMappings(const struct FKey& Key);
	TArray<struct FInputAxisKeyMapping> GetInputAxisMappingKeys(const struct FName& AxisName, float Scale, bool IgnoreScale);
	TArray<struct FName> GetInputActionMappingNames(const struct FKey& Key);
	TArray<struct FInputActionKeyMapping> GetInputActionMappingKeys(const struct FName& ActionName);
	bool GetHoldToSprintMouse();
	bool GetHoldToSprintGamepad();
	float GetFpsLimit();
	int GetCloudQuality();
	int GetBrightness();
	class UAstroGameUserSettings* STATIC_GetAstroGameUserSettings();
	float GetAmbientVolume();
	bool GetAllowInitialPlanetSelection();
	bool DoesKeyMatchActionMapping(const struct FName& ActionName, const struct FKey& Key);
	float STATIC_BrightnessToGamma(int InBrightness);
	void AttemptRebindInput(class APlayerController* Controller, const struct FKey& newKey, const struct FKey& oldKey, const struct FName& InputName, bool isAxis, float Scale);
	void AssignInputAxisMapping(const struct FKey& Key, const struct FName& AxisName, float Scale, bool bTryToAddCustomInputMapping);
	void AssignInputActionMapping(const struct FKey& Key, const struct FName& ActionName, bool bTryToAddCustomInputMapping);
	void ApplySettings(bool bCheckForCommandLineOverrides);
	void ApplySensitivitySettings(class APlayerController* PlayController);
	void ApplyNonResolutionSettings();
	void ApplyAudioSettings();
};


// Class Astro.AstroHUD
// 0x0030 (0x04C0 - 0x0490)
class AAstroHUD : public AHUD
{
public:
	class UClass*                                      PlayWidget;                                               // 0x0490(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CreativeDroneOverlayClass;                                // 0x0498(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StoreWidgetClass;                                         // 0x04A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UUserWidget*                                 StoreWidgetInstance;                                      // 0x04A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPlayWidget*                                 PlayWidgetInstance;                                       // 0x04B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UUserWidget*                                 CreativeDroneOverlayInstance;                             // 0x04B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroHUD");
		return ptr;
	}


	bool IsStoreActive();
	void HandleOnCreativeShowCreativeDroneUIChanged(bool ShowUI);
	void DestroyStoreWidget();
	void CreateStoreWidget();
};


// Class Astro.AstroIgnoreInputTask
// 0x0008 (0x0070 - 0x0068)
class UAstroIgnoreInputTask : public UGameplayTask
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0068(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroIgnoreInputTask");
		return ptr;
	}


	class UAstroIgnoreInputTask* STATIC_CreateAstroIgnoreInputTask(class UAstroAction* OwningAction, const struct FName& TaskInstanceName, bool bShouldIgnoreMoveInput, bool bShouldIgnoreLookInput);
};


// Class Astro.AstroInterpolateItemTask
// 0x00A8 (0x0110 - 0x0068)
class UAstroInterpolateItemTask : public UGameplayTask
{
public:
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0068(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroInterpolateItemTask");
		return ptr;
	}


	void OnTargetItemMotionStateChanged();
	class UAstroInterpolateItemTask* STATIC_CreateAstroInterpolateItemTask(class UAstroAction* OwningAction, const struct FName& TaskInstanceName, class APhysicalItem* ItemToInterpolate, const struct FTransform& TargetTransform, float InterpolationDuration, bool bMaintainAttachmentDuringMovement, class UCurveFloat* OptionalInterpolationProgressCurve);
};


// Class Astro.AstroLevelScriptActor
// 0x0000 (0x03B0 - 0x03B0)
class AAstroLevelScriptActor : public ALevelScriptActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroLevelScriptActor");
		return ptr;
	}

};


// Class Astro.AstroMaterialStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroMaterialStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroMaterialStatics");
		return ptr;
	}


	void STATIC_ToggleBitfieldParameterBits(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, TArray<int> BitIndices);
	void STATIC_ToggleBitfieldParameterBit(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, int BitIndex);
	void STATIC_SetPackedParameterValues(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, int PackedValueBitSize, TArray<struct FPackedParameterValue> PackedParameterValues);
	void STATIC_SetPackedParameterValue(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, int PackedSlotIndex, int PackedValueBitSize, int PackedValue);
	void STATIC_SetBitfieldParamterBits(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, TArray<struct FBitfieldBitValue> BitValues);
	void STATIC_SetBitfieldParameterBit(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, int BitIndex, bool BitValue);
	bool STATIC_GetBitfieldParameterBit(class UMaterialInstanceDynamic* Mid, const struct FName& ParameterName, int BitIndex);
};


// Class Astro.AstroMicroTxnBlueprintLibrary
// 0x0000 (0x0028 - 0x0028)
class UAstroMicroTxnBlueprintLibrary : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroMicroTxnBlueprintLibrary");
		return ptr;
	}


	bool STATIC_IsStoreUIActive(class UObject* WorldContextObject);
	void STATIC_GetVirtualCurrencyAmount(class UObject* WorldContextObject, const struct FString& CurrencyName, bool* Found, int* Currency);
};


// Class Astro.AstroMicroTxnStoreGlobals
// 0x00F0 (0x0120 - 0x0030)
class UAstroMicroTxnStoreGlobals : public UDataAsset
{
public:
	TMap<struct FString, struct FAstroMicroTxnStoreCategory> StoreCategories;                                          // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FString, EMicroTxnStoreItemFlags>      TagStringToItemFlag;                                      // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<struct FString, class UAstroMicroTxnStoreItemData*> StoreItems;                                               // 0x00D0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroMicroTxnStoreGlobals");
		return ptr;
	}

};


// Class Astro.AstroMicroTxnStoreItemData
// 0x0048 (0x0078 - 0x0030)
class UAstroMicroTxnStoreItemData : public UDataAsset
{
public:
	struct FText                                       DisplayText;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	class UTexture2D*                                  TileBackgroundTexture;                                    // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  TileIconTexture;                                          // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  TileItemTexture;                                          // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EMicroTxnStoreTileTypes                            TileType;                                                 // 0x0060(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<class UDataAsset*>                          CustomizationAssets;                                      // 0x0068(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroMicroTxnStoreItemData");
		return ptr;
	}

};


// Class Astro.AstroNotificationDatabase
// 0x0538 (0x0568 - 0x0030)
class UAstroNotificationDatabase : public UDataAsset
{
public:
	struct FLinearColor                                DefaultNotificationBadgeColor;                            // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                DefaultNotificationBadgeStrokeColor;                      // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              TagNotificationQueueDisplayFrequency;                     // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UnlockNotificationQueueDisplayFrequency;                  // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       ResearchBytesGainedPrefixText;                            // 0x0058(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       ResearchBytesLostTextPrefixText;                          // 0x0070(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       ResearchCatalogItemUnlockedPrefixText;                    // 0x0088(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       CosmeticItemUnlockedPrefixText;                           // 0x00A0(0x0018) (Edit, DisableEditOnInstance)
	struct FString                                     UnlockedResearchCatalogItemNotificationAudioEvent;        // 0x00B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     UnlockedCosmeticNotificationAudioEvent;                   // 0x00C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	EAstroColor                                        SuitUnlockNotifIconColor;                                 // 0x00D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00D9(0x0007) MISSED OFFSET
	class UTexture2D*                                  SuitUnlockNotifIcon;                                      // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       SuitUnlockSubtitle;                                       // 0x00E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAstroColor                                        VisorUnlockNotifIconColor;                                // 0x0100(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	class UTexture2D*                                  VisorUnlockNotifIcon;                                     // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       VisorUnlockSubtitle;                                      // 0x0110(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAstroColor                                        PaletteUnlockNotifIconColor;                              // 0x0128(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	class UTexture2D*                                  PaletteUnlockNotifIcon;                                   // 0x0130(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       PaletteUnlockSubtitle;                                    // 0x0138(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAstroColor                                        HatUnlockNotifIconColor;                                  // 0x0150(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	class UTexture2D*                                  HatUnlockNotifIcon;                                       // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       HatUnlockSubtitle;                                        // 0x0160(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAstroColor                                        MaskUnlockNotifIconColor;                                 // 0x0178(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
	class UTexture2D*                                  MaskUnlockNotifIcon;                                      // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       MaskUnlockSubtitle;                                       // 0x0188(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	EAstroColor                                        PhotoFilterUnlockNotifIconColor;                          // 0x01A0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET
	class UTexture2D*                                  PhotoFilterUnlockNotifIcon;                               // 0x01A8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       PhotoFilterUnlockSubtitle;                                // 0x01B0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CarePackageTitle;                                         // 0x01C8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CarePackageSubtitle;                                      // 0x01E0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UTexture*                                    CarePackageIcon;                                          // 0x01F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AstroNotificationTagWidgetClass;                          // 0x0200(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AstroNotificationUnlockWidgetClass;                       // 0x0208(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAstroNotificationTagAuthoringData          NotificationOxygenSuffocating;                            // 0x0210(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationAstroNoPower;                                 // 0x0260(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationAstroBackpackFull;                            // 0x02B0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationShuttleNoFuel;                                // 0x0300(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationShuttleNoThruster;                            // 0x0350(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationShuttleSkyObstructed;                         // 0x03A0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationResearchPointsGranted;                        // 0x03F0(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationTagAuthoringData          NotificationDurableItemUnlocked;                          // 0x0440(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationUnlockAuthoringData       NotificationSaveFailedMaxSaveSizeFileExceeded;            // 0x0490(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationUnlockAuthoringData       NotificationSaveFailedInsufficientStorageSpace;           // 0x04D8(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroNotificationUnlockAuthoringData       NotificationSaveFailedUnknownError;                       // 0x0520(0x0048) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroNotificationDatabase");
		return ptr;
	}

};


// Class Astro.AstroNotificationManager
// 0x0068 (0x0158 - 0x00F0)
class UAstroNotificationManager : public UActorComponent
{
public:
	TMap<class USceneComponent*, struct FNotificationSpawner> ActiveNotificationSpawners;                               // 0x00F0(0x0050) (ZeroConstructor, Transient)
	TArray<struct FLivingAstroNotification>            LivingAstroNotifications;                                 // 0x0140(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      NotificationsDisabled : 1;                                // 0x0150(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0151(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroNotificationManager");
		return ptr;
	}

};


// Class Astro.AstroNotificationStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroNotificationStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroNotificationStatics");
		return ptr;
	}


	void STATIC_PresentUnlockNotification(class UObject* WorldContextObject, const struct FAstroNotificationUnlockAuthoringData& AuthoringData);
	void STATIC_PresentResearchPointGrantNotificationData(class AActor* OwningActor, int ResearchPoints);
	void STATIC_PresentCatalogItemUnlockNotification(class UObject* WorldContextObject, class UClass* ItemType);
	void STATIC_ImmediatelyPresentNotificationWidget(class AActor* OwningActor, const struct FAstroNotificationTagAuthoringData& AuthoringData, class USceneComponent* OverrideAnchorReference);
	class UAstroNotificationDatabase* STATIC_GetAstroNotificationDatabase();
	void STATIC_EnqueueNotificationWidget(class AActor* OwningActor, const struct FAstroNotificationTagAuthoringData& AuthoringData, class USceneComponent* OverrideAnchorReference, bool AllowDuplicateEnqueue);
	struct FAstroNotificationTagAuthoringData STATIC_CreateNotificationTagDataForItemPing(class UObject* WorldContextObject, class UClass* ItemType);
};


// Class Astro.InputRespondingWidgetBase
// 0x0000 (0x0210 - 0x0210)
class UInputRespondingWidgetBase : public UUserWidgetBlueprintDesignable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.InputRespondingWidgetBase");
		return ptr;
	}


	void InputStarted(const struct FName& ActionOrAxisName);
	void InputComplete(const struct FName& ActionOrAxisName, bool InputSucceeded);
};


// Class Astro.AstroUICardWidget
// 0x0000 (0x0210 - 0x0210)
class UAstroUICardWidget : public UInputRespondingWidgetBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUICardWidget");
		return ptr;
	}


	struct FVector2D GetUICardScreenPosOffset();
	struct FVector2D GetUICardRenderSize();
};


// Class Astro.AstroNotificationTagWidget
// 0x0050 (0x0260 - 0x0210)
class UAstroNotificationTagWidget : public UAstroUICardWidget
{
public:
	float                                              ElapsedAnimationTimeNormalized;                           // 0x0210(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	float                                              AnimationDuration;                                        // 0x0218(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DriftIncrement;                                           // 0x021C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DriftTarget;                                              // 0x0220(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
	struct FAstroNotificationTagWidgetDisplayData      DisplayData;                                              // 0x0228(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroNotificationTagWidget");
		return ptr;
	}


	void UpdateAnimationVisuals(float DeltaTime);
};


// Class Astro.AstroNotificationUnlockWidget
// 0x0068 (0x0278 - 0x0210)
class UAstroNotificationUnlockWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET
	struct FAstroNotificationUnlockDisplayData         DisplayData;                                              // 0x0218(0x0030) (Edit, BlueprintVisible)
	struct FScriptMulticastDelegate                    OnMaxLifetimeReached;                                     // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              DriftIncrement;                                           // 0x0258(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpawningDriftOffset;                                      // 0x025C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxLifetime;                                              // 0x0260(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MagicDriftSpeed;                                          // 0x0264(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0268(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroNotificationUnlockWidget");
		return ptr;
	}


	void MarkNotificationForDestruction();
};


// Class Astro.AstroPlayMontageAction
// 0x0018 (0x0090 - 0x0078)
class UAstroPlayMontageAction : public UAstroAction
{
public:
	class UAnimMontage*                                Montage;                                                  // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartSection;                                             // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0088(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bShouldSuppressLookInput : 1;                             // 0x008C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bShouldSuppressMoveInput : 1;                             // 0x008C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x008D(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayMontageAction");
		return ptr;
	}


	void SetMontage(class UAnimMontage* Montage);
	void OnSingleAnimCustomNotify(const struct FName& NotifyName);
	void OnMontageTaskInterrupted();
	void OnMontageTaskFailedToStart();
	void OnMontageTaskCompleted();
};


// Class Astro.AstroPackagingAction
// 0x0028 (0x00B8 - 0x0090)
class UAstroPackagingAction : public UAstroPlayMontageAction
{
public:
	class UCurveVector*                                LocationCurve;                                            // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                RotationCurve;                                            // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveVector*                                ScaleCurve;                                               // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemInterpolationTargetComponentName;                     // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 ItemTargetInterpolationProgressCurve;                     // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPackagingAction");
		return ptr;
	}

};


// Class Astro.SolarBody
// 0x0158 (0x0500 - 0x03A8)
class ASolarBody : public AActor
{
public:
	struct FString                                     OrbitingBodyName;                                         // 0x03A8(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FText                                       Name;                                                     // 0x03B8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UStaticMesh*                                 IconMesh;                                                 // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WidgetIcon;                                               // 0x03D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       PlanetType;                                               // 0x03E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       TooltipSubtitle;                                          // 0x03E8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       TooltipDescription;                                       // 0x0400(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UObject*                                     TooltipResourceObjectBadge;                               // 0x0418(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TooltipScreenOffset;                                      // 0x0420(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector2D                                   CustomBadgeSize;                                          // 0x0428(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              WorldSize;                                                // 0x0430(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Gravity;                                                  // 0x0434(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	float                                              GravityRadius;                                            // 0x0438(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OrbitalMass;                                              // 0x043C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DayLength;                                                // 0x0440(0x0004) (Edit, BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              SecondsPerSkyboxRevolution;                               // 0x0444(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               FreezeOrbit;                                              // 0x0448(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Stationary;                                               // 0x0449(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x044A(0x0002) MISSED OFFSET
	struct FVector                                     SolarVelocity;                                            // 0x044C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class ASolarBody*                                  OrbitingBody;                                             // 0x0458(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OrbitDistance;                                            // 0x0460(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0464(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnOrbitAxisUpdated;                                       // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVector                                     ActiveOrbitAxis;                                          // 0x0478(0x000C) (BlueprintVisible, BlueprintReadOnly, Net, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0484(0x000C) MISSED OFFSET
	struct FVector                                     OrbitAxis;                                                // 0x0490(0x000C) (Transient, SaveGame, IsPlainOldData)
	struct FVector                                     OrbitAxisCreative;                                        // 0x049C(0x000C) (Transient, SaveGame, IsPlainOldData)
	struct FVector                                     InitialOrbitOffset;                                       // 0x04A8(0x000C) (Transient, SaveGame, IsPlainOldData)
	struct FVector                                     InitialOrbitAxis;                                         // 0x04B4(0x000C) (Transient, SaveGame, IsPlainOldData)
	struct FTransform                                  InitialTransform;                                         // 0x04C0(0x0030) (Transient, SaveGame, IsPlainOldData)
	float                                              LastCalculatedNormalizedDayTime;                          // 0x04F0(0x0004) (ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	float                                              DayTimeBias;                                              // 0x04F4(0x0004) (Net, ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	float                                              LastSetOrbitAxisRotation;                                 // 0x04F8(0x0004) (ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SolarBody");
		return ptr;
	}


	void SetOrbitAxisRotation(float rads);
	void SetNormalizedDayTime(float dayTime);
	void SetDayLength(float newDayLength);
	void SetBodyTransform(const struct FTransform& Transform);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void OnRep_OrbitAxis();
	void OnOrbitAxisUpdated__DelegateSignature(const struct FVector& NewOrbitAxis);
	void OnLocalPlayerPlanetSelectionEnd();
	void OnLocalPlayerPlanetSelectionBegin(class ASolarBody* homeSolarBody);
	void OnLocalPlayerLocalSolarBodyChanged(class ASolarBody* newLocalSolarBody);
	void OnCreativeModeEnabledChanged(bool CreativeModeEnabled);
	class USceneComponent* GetProxyComponent();
	struct FVector GetProxyCenter();
	struct FVector GetOrbitAxis();
	float GetNormalizedDayTime();
	float GetLastOrbitAxisRotation();
	struct FRotator GetDayRotationOffset();
	class USceneComponent* GetCenterComponent();
	struct FVector GetCenter();
	struct FTransform GetBodyTransform();
	bool CanBeVisitedByPlayer();
};


// Class Astro.AstroPlanet
// 0x0A20 (0x0F20 - 0x0500)
class AAstroPlanet : public ASolarBody
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0500(0x0008) MISSED OFFSET
	EPlanetIdentifier                                  PlanetIdentifier;                                         // 0x0508(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0509(0x0007) MISSED OFFSET
	class UClass*                                      PlanetItemType;                                           // 0x0510(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UVoxelVolumeComponent*                       PlanetaryVoxelVolume;                                     // 0x0518(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                Seed;                                                     // 0x0520(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0524(0x0004) MISSED OFFSET
	TArray<int>                                        ExplicitSeeds;                                            // 0x0528(0x0010) (Edit, ZeroConstructor)
	bool                                               VerticalZLandingZone;                                     // 0x0538(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0539(0x0007) MISSED OFFSET
	TArray<struct FText>                               SwapStartPlanets;                                         // 0x0540(0x0010) (Edit, ZeroConstructor)
	bool                                               Enable;                                                   // 0x0550(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0551(0x0003) MISSED OFFSET
	int                                                Difficulty;                                               // 0x0554(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FAtmosphericResource>                AtmosphericResources;                                     // 0x0558(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               Cutaway;                                                  // 0x0568(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CenterOrigin;                                             // 0x0569(0x0001) (Edit, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x056A(0x0002) MISSED OFFSET
	int                                                MinDepth;                                                 // 0x056C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RandomizeSeedForBuild;                                    // 0x0570(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RandomizeSeedForPIE;                                      // 0x0571(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0572(0x0006) MISSED OFFSET
	struct FTerrainMaterial                            DefaultMaterial;                                          // 0x0578(0x0058) (Edit)
	float                                              LodMultiplier;                                            // 0x05D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VoxelSize;                                                // 0x05D4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SunExposureModifier;                                      // 0x05D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              WindIntensityModifier;                                    // 0x05DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                AmbientColor;                                             // 0x05E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              AmbientIntensity;                                         // 0x05F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                DaytimeSkyColor;                                          // 0x05F4(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              DaytimeSkyIntensity;                                      // 0x0604(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                NightSkyColor;                                            // 0x0608(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              NightSkyIntensity;                                        // 0x0618(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogFalloff;                                               // 0x061C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogPower;                                                 // 0x0620(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogAtmosphereHeight;                                      // 0x0624(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FogAtmosphereThickness;                                   // 0x0628(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogColorCeiling;                                          // 0x062C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                FogColorFloor;                                            // 0x063C(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              DaytimeEnvironmentFogContribution;                        // 0x064C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogColorNightCeiling;                                     // 0x0650(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                FogColorNightFloor;                                       // 0x0660(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              NighttimeEnvironmentFogContribution;                      // 0x0670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogColorUnderground;                                      // 0x0674(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              FogUndergroundThickness;                                  // 0x0684(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FogMaxOpacity;                                            // 0x0688(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                FogSunHaloColor;                                          // 0x068C(0x0010) (Edit, IsPlainOldData)
	float                                              FogSunHaloIntensity;                                      // 0x069C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FogSunHaloPower;                                          // 0x06A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindScale;                                                // 0x06A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindNoiseMovement;                                        // 0x06A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindDirectionChangeRate;                                  // 0x06AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WindIntensityChangeRate;                                  // 0x06B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AmbientWind;                                              // 0x06B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxFlightHeightAdjustment;                                // 0x06B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x06BC(0x0004) MISSED OFFSET
	struct FGatewayObjectPlacementProperties           GatewayObjectPlacementProperties;                         // 0x06C0(0x0058) (Edit)
	class UPhysicalMaterial*                           DefaultPhysicalMaterial;                                  // 0x0718(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UTerrainModifierBase*>                Modifiers;                                                // 0x0720(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UTerrainBiomeProperties*>             BiomeProperties;                                          // 0x0730(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UBiomeHazards*>                       BiomeHazards;                                             // 0x0740(0x0010) (ExportObject, ZeroConstructor, Transient)
	TMap<uint64_t, struct FCreatedOctreeNode>          ExistingBlocks;                                           // 0x0750(0x0050) (ZeroConstructor, Transient)
	class UMaterial*                                   FogMaterial;                                              // 0x07A0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    FogMaterialDynamic;                                       // 0x07A8(0x0008) (ZeroConstructor, IsPlainOldData)
	class UMaterialParameterCollection*                FogMaterialParameterCollection;                           // 0x07B0(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               IsLocallyVisible;                                         // 0x07B8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x07B9(0x0007) MISSED OFFSET
	class AScatteredMeshDecoratorStreamer*             DecoratorStreamer;                                        // 0x07C0(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	class USphereComponent*                            CenterComponent;                                          // 0x07C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData09[0x20];                                      // 0x07D0(0x0020) MISSED OFFSET
	TArray<class AHazardActor*>                        Storms;                                                   // 0x07F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData10[0x88];                                      // 0x0800(0x0088) MISSED OFFSET
	class USceneComponent*                             OffsetComponent;                                          // 0x0888(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FTransform                                  OffsetTransform;                                          // 0x0890(0x0030) (Transient, IsPlainOldData)
	class UTerrainInterface*                           TerrainInterface;                                         // 0x08C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UStaticMeshComponent*                        FogMesh;                                                  // 0x08C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UChildActorComponent*                        ProxyComponent;                                           // 0x08D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ProxyMeshComponent;                                       // 0x08D8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FTerrainMaterial>                    TerrainMaterials;                                         // 0x08E0(0x0010) (ZeroConstructor, Transient)
	TArray<class UTerrainModifierBase*>                GatewayObjectPlacementModifiers;                          // 0x08F0(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UBoundedVoxelVolumeModifier*>         GatewayObjectPlacementVoxelVolumeModifiers;               // 0x0900(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData11[0x10];                                      // 0x0910(0x0010) MISSED OFFSET
	class AActor*                                      HighRezClouds;                                            // 0x0920(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      LowRezClouds;                                             // 0x0928(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      LowRezProxyClouds;                                        // 0x0930(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class AActor*                                      AtmostphericFeatures;                                     // 0x0938(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x468];                                     // 0x0940(0x0468) MISSED OFFSET
	class AActor*                                      SunActor;                                                 // 0x0DA8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ADayNight*                                   DayNightActor;                                            // 0x0DB0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData13[0x50];                                      // 0x0DB8(0x0050) MISSED OFFSET
	TArray<struct FTerrainMaterial>                    CustomMaterials;                                          // 0x0E08(0x0010) (Net, ZeroConstructor)
	unsigned char                                      UnknownData14[0x108];                                     // 0x0E18(0x0108) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlanet");
		return ptr;
	}


	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	struct FLinearColor SampleFog(const struct FVector& Origin, const struct FVector& Ray);
	void OnRep_CustomMaterials();
	void OnNonResolutionMenuSettingsChanged();
	void OnDeformationComplete(const struct FDeformationParamsT2& params);
	bool LocationInAtmosphere(const struct FVector& Location);
	struct FVector GetWindDirectionAt(const struct FVector& Location, float* Intensity);
	struct FVector GetTerrainNormal(const struct FVector& Location);
	struct FTerrainMaterial GetTerrainMaterial(const struct FVector& Location);
	float GetTerrainDensity(const struct FVector& Location);
	class USceneComponent* GetTerrainBlock(const struct FVector& Location);
	float GetRadius();
	class APlanetProxyActor* GetProxy();
	struct FTransform GetPlanetTransform();
	struct FTransform GetPlanetToProxyTransform();
	struct FVector GetNorthVector();
	void GetHazardArray(const struct FVector& Location, TArray<class UBiomeHazards*>* Biomes, TArray<float>* Weights);
	class ADayNight* GetDayNightActor();
	void GetBiomeArray(const struct FVector& Location, TArray<class UTerrainBiomeProperties*>* Biomes, TArray<float>* Weights);
};


// Class Astro.CameraContext
// 0x0020 (0x0048 - 0x0028)
class UCameraContext : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnOwningRigDestroyed;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
	class UCustomCameraRigComponent*                   OwningComponent;                                          // 0x0038(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      Priority;                                                 // 0x0040(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CameraContext");
		return ptr;
	}

};


// Class Astro.AstroPlayerCameraManager
// 0x0010 (0x1B00 - 0x1AF0)
class AAstroPlayerCameraManager : public APlayerCameraManager
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x1AF0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayerCameraManager");
		return ptr;
	}


	void PopAllCameraContexts(class UCameraContext* Context);
};


// Class Astro.AstroPlayerState
// 0x0108 (0x0540 - 0x0438)
class AAstroPlayerState : public APlayerState
{
public:
	struct FScriptMulticastDelegate                    OnResearchPointBalanceChanged;                            // 0x0438(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnKnownItemTypesChanged;                                  // 0x0448(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnUnlockedItemTypesChanged;                               // 0x0458(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnHelpMenuUpdated;                                        // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FString                                     BackendPlayerId;                                          // 0x0478(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0488(0x0010) MISSED OFFSET
	EPlayerPlatform                                    Platform;                                                 // 0x0498(0x0001) (Net, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               HelpMenuWasViewed;                                        // 0x0499(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x049A(0x0006) MISSED OFFSET
	struct FPersistedCameraState                       PersistedCameraState;                                     // 0x04A0(0x0060) (Transient, SaveGame)
	class UActorEntityLinkComponent*                   EntityLinkComponent;                                      // 0x0500(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, IsPlainOldData)
	float                                              CurrentResearchPointBalance;                              // 0x0508(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	float                                              CurrentResearchPointsPerMinute;                           // 0x050C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              KnownItemTypes;                                           // 0x0510(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	TArray<class UClass*>                              UnlockedItemTypes;                                        // 0x0520(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient)
	unsigned char                                      IsReturningPlayer : 1;                                    // 0x0530(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bClientShouldUseTitleMenu : 1;                            // 0x0530(0x0001) (BlueprintVisible, BlueprintReadOnly, Transient)
	unsigned char                                      bAuthorityHasAcquiredTerrainTool : 1;                     // 0x0530(0x0001) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      bIsOffworld : 1;                                          // 0x0530(0x0001) (SaveGame)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0531(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayerState");
		return ptr;
	}


	bool ShouldUseClientTitleMenu();
	void SetHelpMenuState(bool HelpMenuOpen);
	void OnRep_PlayerName();
	void OnAuthorityUnlockedItemsChanged(TArray<class UClass*> NewUnlockedItemTypes);
	void OnAuthorityResearchPointBalanceChanged(float NewPointBalance);
	void OnAuthorityKnownItemsChanged(TArray<class UClass*> newKnownItemTypes);
	bool IsPlayerOffworld();
	void HelpMenuStateUpdate__DelegateSignature(bool HelpMenuViewState);
	EPlayerPlatform GetPlayerPlatform();
	bool GetIsReturningPlayer();
	bool GetHelpMenuWasViewed();
	void BroadcastUnlockedItemTypesChanged();
	void BroadcastResearchPointBalanceChanged();
	void BroadcastKnownItemTypesChanged();
	void AuthorityNotifyAcquiredTerrainTool();
};


// Class Astro.AstroPlayFabTxnManager
// 0x0010 (0x0038 - 0x0028)
class UAstroPlayFabTxnManager : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnPlayFabTxnCompleted;                                    // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayFabTxnManager");
		return ptr;
	}


	void PurchaseItem(const struct FAstroMicroTxnStoreItem& ItemId, const struct FString& CurrencyString);
};


// Class Astro.AstroPlayLevelScriptActor
// 0x0000 (0x03B0 - 0x03B0)
class AAstroPlayLevelScriptActor : public AAstroLevelScriptActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayLevelScriptActor");
		return ptr;
	}

};


// Class Astro.AstroPlayMontageTask
// 0x00B8 (0x0120 - 0x0068)
class UAstroPlayMontageTask : public UGameplayTask
{
public:
	struct FScriptMulticastDelegate                    OnFailedToStart;                                          // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInterrupted;                                            // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCompleted;                                              // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSingleAnimCustomNotify;                                 // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x78];                                      // 0x00A8(0x0078) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayMontageTask");
		return ptr;
	}


	void RouteSingleAnimCustomNotify(const struct FName& NotifyName);
	void OnMontageEnded(class UAnimMontage* Montage, bool bInterrupted);
	class UAstroPlayMontageTask* STATIC_CreateAstroPlayMontageTask(class UAstroAction* OwningAction, const struct FName& TaskInstanceName, class UAnimMontage* Montage, float PlayRate, const struct FName& StartSection);
};


// Class Astro.AstroPlayStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroPlayStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlayStatics");
		return ptr;
	}


	void STATIC_WeldToPreserveContraints(class AActor* Actor, class UPrimitiveComponent* Parent);
	class AActor* STATIC_WeldChildActor(class UChildActorComponent* Slot);
	void STATIC_ServerClickActor(class AActor* Actor);
	void STATIC_ServerClick(class UPrimitiveComponent* Primitive);
	void STATIC_RestoreInputModeToGameFromUI(class UObject* WorldContextObject);
	bool STATIC_RaycastVoxels(class AAstroPlanet* Planet, const struct FVector& RayStart, const struct FVector& RayEnd, float accuracy, struct FHitResult* OutHit);
	void STATIC_PlaySurfaceFoley(const struct FString& SoundEvent, class USceneComponent* AttachToComponent, const struct FName& AttachPointName, bool bStopWhenAttachedToDestroyed);
	bool STATIC_MoveToSafety(class AActor* actorToMove, class UPrimitiveComponent* actorCollisionComponent, const struct FVector& testConstellationUpVector, float testGrowthIncrement);
	void STATIC_LocalClick(class UPrimitiveComponent* Primitive);
	int STATIC_GetTradeOutputAmount(class UClass* OutputItemType, TArray<class APhysicalItem*> InputItems, float ExchangeRateMultiplier);
	class AActor* STATIC_GetTopmostParentActor(class AActor* Component);
	class UPrimitiveComponent* STATIC_GetSimulatingParent(class USceneComponent* Component);
	class UPrimitiveComponent* STATIC_GetSimulatingAttachParent(class USceneComponent* Component);
	struct FVector STATIC_GetRopeInterpNormal(const struct FVector& Start, const struct FVector& StartNormal, const struct FVector& End, const struct FVector& EndNormal, float NormalScale, float Alpha);
	struct FVector STATIC_GetRopeInterpLocation(const struct FVector& Start, const struct FVector& StartNormal, const struct FVector& End, const struct FVector& EndNormal, float NormalScale, float Alpha);
	class APlayController* STATIC_GetPlayController(class UObject* WorldContextObject, int Index);
	struct FVector STATIC_GetMoveDirection3D(class APlayerController* Controller, class AActor* Actor, const struct FVector& ControlDirection);
	struct FVector STATIC_GetMoveDirection(class APlayerController* Controller, class AActor* Actor, const struct FVector2D& ControlDirection);
	bool STATIC_GetMinimumDiscreteTradeRatioBetweenItems(class UClass* InputItemType, class UClass* OutputItemType, float ExchangeRateMultiplier, int* OutDiscreteInputRatioTerm, int* OutDiscreteOutputRatioTerm);
	class APlayController* STATIC_GetLocalPlayController(class UObject* WorldContextObject);
	class UItemType* STATIC_GetItemTypeDefault(class UClass* Type);
	class UAstroEmoteDefinition* STATIC_GetDisplayedEmoteViaIndex(int Index, bool* bOutSuccess);
	class UClass* STATIC_GetDefaultEmoteActionType();
	class APlayerController* STATIC_GetCurrentInputController();
	class UControlSymbol* STATIC_GetControlSymbolDefault(class UClass* Type);
	TArray<class APhysicalItem*> STATIC_GetConsumedInputItemsForTradeOutput(class UClass* OutputItemType, int TargetOutputAmount, TArray<class APhysicalItem*> InputItems, float ExchangeRateMultiplier);
	TArray<class APlayController*> STATIC_GetAllPlayControllers(class UObject* WorldContextObject);
	TArray<class UAstroEmoteDefinition*> STATIC_GetAllEmoteDefinitions(bool* bOutSuccess);
	struct FTerrainMaterial STATIC_DowncastTerrainMaterial(class UObject* WorldContextObject, const struct FVector& Location);
	void STATIC_ClickActor(class AActor* Actor);
	void STATIC_Click(class UPrimitiveComponent* Primitive);
	void STATIC_AddComponentForceAtLocation(class USceneComponent* Component, const struct FVector& force, const struct FVector& Location);
};


// Class Astro.AstroPopupBadgeDatabase
// 0x0180 (0x01B0 - 0x0030)
class UAstroPopupBadgeDatabase : public UDataAsset
{
public:
	struct FLinearColor                                DefaultPopupBadgeColor;                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                DefaultPopupBadgeStrokeColor;                             // 0x0040(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UCurveFloat*                                 PopupBadgeDriftAnimationCurve;                            // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveFloat*                                 PopupBadgeFadeAnimationCurve;                             // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AstroPopupBadgeWidgetClass;                               // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FAstroPopupBadgeAuthoringData               PowerPingCharge;                                          // 0x0068(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroPopupBadgeAuthoringData               PowerPingDischarge;                                       // 0x00B8(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroPopupBadgeAuthoringData               Oxygen50;                                                 // 0x0108(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroPopupBadgeAuthoringData               Oxygen25;                                                 // 0x0158(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	float                                              PowerPingRange;                                           // 0x01A8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x01AC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPopupBadgeDatabase");
		return ptr;
	}

};


// Class Astro.AstroPopupBadgeManager
// 0x0018 (0x0108 - 0x00F0)
class UAstroPopupBadgeManager : public UActorComponent
{
public:
	TArray<class UPopupBadgeWidgetComponent*>          LivingAstroPopupBadges;                                   // 0x00F0(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      PopupBadgesDisabled : 1;                                  // 0x0100(0x0001) (Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPopupBadgeManager");
		return ptr;
	}

};


// Class Astro.AstroPopupBadgeWidget
// 0x0040 (0x0250 - 0x0210)
class UAstroPopupBadgeWidget : public UAstroUICardWidget
{
public:
	float                                              PresentationAnimationDuration;                            // 0x0210(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0214(0x0004) MISSED OFFSET
	class UBorder*                                     PopupBadgeContainerBorder;                                // 0x0218(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FAstroPopupBadgeWidgetDisplayData           DisplayData;                                              // 0x0220(0x0030) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPopupBadgeWidget");
		return ptr;
	}


	void UpdateDisplayData(const struct FAstroPopupBadgeWidgetDisplayData& NewDisplayData);
	struct FVector2D GetPivotForUserWidget();
	struct FVector2D GetDrawSizeForUserWidget();
};


// Class Astro.AstroProceduralStateSystem
// 0x0000 (0x0030 - 0x0030)
class UAstroProceduralStateSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroProceduralStateSystem");
		return ptr;
	}

};


// Class Astro.AstroRepackAction
// 0x00E8 (0x01A0 - 0x00B8)
class UAstroRepackAction : public UAstroPackagingAction
{
public:
	unsigned char                                      bMoveRepackingItemAboveTarget : 1;                        // 0x00B8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0xF];                                       // 0x00B9(0x000F) MISSED OFFSET
	float                                              InterpolateToTopOfTargetDuration;                         // 0x00C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 InterpolateToTopOfTargetProgressCurve;                    // 0x00D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PackageSpawnLocationComponentName;                        // 0x00D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PackageOffsetComponentName;                               // 0x00E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class APhysicalItem*                               ItemToRepackage;                                          // 0x00E8(0x0008) (ZeroConstructor, IsPlainOldData)
	class ARepackager*                                 Repackager;                                               // 0x00F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      ItemToRepackageType;                                      // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FGuid                                       ItemToRepackageItemDriveRequestGUID;                      // 0x0100(0x0010) (IsPlainOldData)
	class UPrimitiveComponent*                         IndicatorComponent;                                       // 0x0110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UClass*                                      PackageTypeToSpawn;                                       // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      PackagedItemType;                                         // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              SlotToPlacePackageIn;                                     // 0x0128(0x0010)
	unsigned char                                      UnknownData02[0x68];                                      // 0x0138(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroRepackAction");
		return ptr;
	}


	void OnSingleAnimCustomNotify(const struct FName& NotifyName);
	void OnInterpolationToTopOfTargetFinished();
};


// Class Astro.AstroReplicationGraph
// 0x0130 (0x0420 - 0x02F0)
class UAstroReplicationGraph : public UReplicationGraph
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x02F0(0x0008) MISSED OFFSET
	TArray<class UClass*>                              NonSpatializedChildClasses;                               // 0x02F8(0x0010) (ZeroConstructor)
	TArray<class UClass*>                              AlwaysRelevantClasses;                                    // 0x0308(0x0010) (ZeroConstructor)
	class UReplicationGraphNode_GridSpatialization2D*  GridNode;                                                 // 0x0318(0x0008) (ZeroConstructor, IsPlainOldData)
	class UReplicationGraphNode_ActorList*             AlwaysRelevantNode;                                       // 0x0320(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF8];                                      // 0x0328(0x00F8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroReplicationGraph");
		return ptr;
	}

};


// Class Astro.AstroReplicationGraphNode_AlwaysRelevant_ForConnection
// 0x0238 (0x0288 - 0x0050)
class UAstroReplicationGraphNode_AlwaysRelevant_ForConnection : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x228];                                     // 0x0050(0x0228) MISSED OFFSET
	class AActor*                                      LastPawn;                                                 // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0280(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroReplicationGraphNode_AlwaysRelevant_ForConnection");
		return ptr;
	}

};


// Class Astro.AstroReplicationGraphNode_PlayerStateFrequencyLimiter
// 0x0030 (0x0080 - 0x0050)
class UAstroReplicationGraphNode_PlayerStateFrequencyLimiter : public UReplicationGraphNode
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0050(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroReplicationGraphNode_PlayerStateFrequencyLimiter");
		return ptr;
	}

};


// Class Astro.AstroSave
// 0x01E0 (0x0208 - 0x0028)
class UAstroSave : public USaveGame
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x0028(0x0018) MISSED OFFSET
	struct FAstroLevelSaveChunk                        LevelChunk;                                               // 0x0040(0x0138) (Transient)
	TArray<struct FAstroRemotePlayerChunk>             RemotePlayerChunks;                                       // 0x0178(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCustomSerializeCallback_DEPRECATED> CustomSerializeCallbacks;                                 // 0x0188(0x0010) (ZeroConstructor, Transient, Deprecated)
	TArray<struct FCallback_DEPRECATED>                BlueprintFixups;                                          // 0x0198(0x0010) (ZeroConstructor, Transient, Deprecated)
	unsigned char                                      UnknownData01[0x60];                                      // 0x01A8(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroSave");
		return ptr;
	}

};


// Class Astro.AstroSaveCustomArchiveProxy
// 0x0008 (0x0030 - 0x0028)
class UAstroSaveCustomArchiveProxy : public UObject
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0028(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroSaveCustomArchiveProxy");
		return ptr;
	}

};


// Class Astro.AstroServerCommExecutor
// 0x0010 (0x0038 - 0x0028)
class UAstroServerCommExecutor : public UObject
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0028(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroServerCommExecutor");
		return ptr;
	}


	void DSTravelURL(const struct FString& ServerURL, const struct FString& Password, const struct FString& Index);
	void DSTravelPass(const struct FString& ServerName, const struct FString& Password, const struct FString& Index);
	void DSTravelName(const struct FString& ServerName, const struct FString& Index, const struct FString& Password);
	void DSTravelFriend(const struct FString& friendName, const struct FString& Password, const struct FString& Index);
	void DSTravel(int serverIndex, const struct FString& Password);
	void DSSetSaveGameInterval(const struct FString& Seconds);
	void DSSetPlayerCategoryIdx(uint32_t Index, const struct FString& Category);
	void DSSetPlayerCategoryGuid(uint64_t PlayerGuid, const struct FString& Category);
	void DSSetPlayerCategoryForPlayerName(const struct FString& PlayerName, const struct FString& Category);
	void DSSetPlayerCategory(const struct FString& PlayerName, const struct FString& Category, const struct FString& Index);
	void DSSetPassword(const struct FString& Password);
	void DSSetOxygenFreeCreative(bool Enable);
	void DSSetInvisibleToHazardsCreative(bool Enable);
	void DSSetInvincibleCreative(bool Enable);
	void DSSetFuelFreeCreative(bool Enable);
	void DSSetDenyUnlisted(const struct FString& Enable);
	void DSSetBackupSaveGamesInterval(const struct FString& Seconds);
	void DSSetBackpackPowerUnlimitedCreative(bool Enable);
	void DSSetActivityTimeout(const struct FString& Seconds);
	void DSServerStatistics();
	void DSServerShutdown();
	void DSSaveGame(const struct FString& Name);
	void DSRenameGame(const struct FString& fromName, const struct FString& toName);
	void DSRemoveFavorite(const struct FString& ServerName);
	void DSRemote(const struct FString& consoleCommand);
	void DSNewGame(const struct FString& Name);
	void DSLoadGame(const struct FString& Name);
	void DSListPlayers();
	void DSListGames();
	void DSKickPlayerGuid(uint64_t PlayerGuid);
	void DSKickPlayer(int playerIndex);
	void DSGetServerList();
	void DSGetRecentsList();
	void DSGetProperties();
	void DSGetFavoritesList();
	void DSDeleteGame(const struct FString& Name);
	void DSCreativeMode(bool Enable);
	void DSClearRecentsList();
	void DSClearFavoritesList();
	void DSBackupSaveGames();
	void DSAddFavorite(const struct FString& ServerName, const struct FString& NickName);
};


// Class Astro.AstroServerCommWorldDataMap
// 0x0050 (0x0078 - 0x0028)
class UAstroServerCommWorldDataMap : public UObject
{
public:
	TMap<uint64_t, struct FAstroServerCommWorldData>   Map;                                                      // 0x0028(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroServerCommWorldDataMap");
		return ptr;
	}

};


// Class Astro.AstroServerSettings
// 0x00D8 (0x0100 - 0x0028)
class UAstroServerSettings : public UObject
{
public:
	float                                              MaxServerFramerate;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxServerIdleFramerate;                                   // 0x002C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	uint32_t                                           MaximumPlayerCount;                                       // 0x0030(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bLoadAutoSave;                                            // 0x0034(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	struct FString                                     ExitSemaphore;                                            // 0x0038(0x0010) (Edit, ZeroConstructor, Config)
	bool                                               bWaitForPlayersBeforeShutdown;                            // 0x0048(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                ConsolePort;                                              // 0x004C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FString                                     PublicIP;                                                 // 0x0050(0x0010) (Edit, ZeroConstructor, Config)
	int                                                HeartbeatInterval;                                        // 0x0060(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FString                                     ServerName;                                               // 0x0068(0x0010) (Edit, ZeroConstructor, Config)
	struct FGuid                                       ServerGuid;                                               // 0x0078(0x0010) (Config, IsPlainOldData)
	struct FString                                     OwnerName;                                                // 0x0088(0x0010) (Edit, ZeroConstructor, Config)
	uint64_t                                           OwnerGuid;                                                // 0x0098(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                PlayerActivityTimeout;                                    // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	struct FString                                     ServerPassword;                                           // 0x00A8(0x0010) (Edit, ZeroConstructor, Config)
	bool                                               bDisableServerTravel;                                     // 0x00B8(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00B9(0x0007) MISSED OFFSET
	TArray<struct FPlayerProperties>                   PlayerProperties;                                         // 0x00C0(0x0010) (Edit, ZeroConstructor, Config)
	bool                                               DenyUnlistedPlayers;                                      // 0x00D0(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               VerbosePlayerProperties;                                  // 0x00D1(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               Dirty;                                                    // 0x00D2(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x00D3(0x0001) MISSED OFFSET
	int                                                AutoSaveGameInterval;                                     // 0x00D4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	int                                                BackupSaveGamesInterval;                                  // 0x00D8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	struct FString                                     ActiveSaveFileDescriptiveName;                            // 0x00E0(0x0010) (Edit, ZeroConstructor, Config)
	struct FString                                     ServerAdvertisedName;                                     // 0x00F0(0x0010) (ZeroConstructor, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroServerSettings");
		return ptr;
	}

};


// Class Astro.AstroSettings
// 0x00A8 (0x0600 - 0x0558)
class AAstroSettings : public AWorldSettings
{
public:
	unsigned char                                      bIsFlatland : 1;                                          // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bFreePower : 1;                                           // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bInteractionLogging : 1;                                  // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bSurvival : 1;                                            // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTutorial : 1;                                            // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bStartAllRecipes : 1;                                     // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bLoadAutoSave : 1;                                        // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bTrailer : 1;                                             // 0x0558(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bRelease : 1;                                             // 0x0559(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bBalancePalettes : 1;                                     // 0x0559(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bAnalyticsEnabled : 1;                                    // 0x0559(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bDetailedTerrainLog : 1;                                  // 0x0559(0x0001) (Edit, Config)
	unsigned char                                      UnknownData00[0x6];                                       // 0x055A(0x0006) MISSED OFFSET
	class ULevelSequence*                              IntroCinematicSequence;                                   // 0x0560(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class ULevelSequence*                              OutroCinematicSequence;                                   // 0x0568(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     OutroCinematicAudioEvent;                                 // 0x0570(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       OutroCinematicMusicState;                                 // 0x0580(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class AActor*>                              CinematicTerrainResolutionPoints;                         // 0x0588(0x0010) (Edit, ZeroConstructor)
	TArray<class AAstroPlanet*>                        PlanetsToReseedForCinematic;                              // 0x0598(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      bGateStationPlacedAtRuntime : 1;                          // 0x05A8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x7];                                       // 0x05A9(0x0007) MISSED OFFSET
	class UClass*                                      GateStationType;                                          // 0x05B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GateStationSpawnLocation;                                 // 0x05B8(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x05C4(0x0004) MISSED OFFSET
	class ASolarBody*                                  GateStationOrbitingBody;                                  // 0x05C8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GateStationOrbitDistance;                                 // 0x05D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     GateStationOrbitDirection;                                // 0x05D4(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     GateStationOrbitAxis;                                     // 0x05E0(0x000C) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x05EC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFreePowerChanged;                                       // 0x05F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroSettings");
		return ptr;
	}


	void OnFreePowerChanged__DelegateSignature(bool FreePowerEnabled);
	class AAstroSettings* STATIC_GetAstroSettings(class AActor* Actor);
};


// Class Astro.AstroSlateFocusWidget
// 0x0008 (0x0218 - 0x0210)
class UAstroSlateFocusWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0210(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroSlateFocusWidget");
		return ptr;
	}


	void GrantFocus();
	void DisableChildWidgetFocusHighlight();
};


// Class Astro.AstroStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroStatics");
		return ptr;
	}


	struct FVector2D STATIC_WorldLocationToScreenLocationOffset(class UObject* WorldContextObject, const struct FVector& WorldLocation, const struct FVector2D& WorldOffset);
	struct FVector2D STATIC_WorldLocationToScreenLocation(class UObject* WorldContextObject, const struct FVector& WorldLocation);
	ESaveGameErrorType STATIC_WasThereAnErrorTryingToSaveTheGame(class UObject* WorldContextObject, struct FString* outSaveName, int* outSaveSize);
	struct FVector STATIC_VInterpCombo(const struct FVector& Current, const struct FVector& Target, float ConstantSpeed, float MultiplicativeSpeed, float DeltaTime);
	struct FVector STATIC_VelocityAtWorldLocation(class UPrimitiveComponent* Component, const struct FVector& Location);
	void STATIC_UpdatePhysicsConstraintFrames(class UPhysicsConstraintComponent* Component);
	class UCreativeModeData* STATIC_TryGetCreativeModeData(class UObject* WorldContextObject);
	void STATIC_ToggleUMGHidden(class UWidget* Widget, ESlateVisibility VisibleState);
	void STATIC_ToggleCreativeModeLodAnchorPreview(class UObject* WorldContextObject);
	bool STATIC_SweepPrimitiveComponentByProfile(class UPrimitiveComponent* Component, const struct FVector& Start, const struct FVector& End, const struct FName& Profile, struct FHitResult* OutHit);
	bool STATIC_SweepPrimitiveComponent(class UPrimitiveComponent* Component, const struct FVector& Start, const struct FVector& End, struct FHitResult* OutHit);
	int STATIC_StringChecksum(const struct FString& String, int Hash);
	float STATIC_Sinusoid(float Speed, class UObject* WorldContextObject);
	void STATIC_ShowLodAnchorBeacons(bool doShow, class UObject* WorldContextObject);
	void STATIC_SetWeldedComponentLocation(class UPrimitiveComponent* Component, const struct FVector& WorldLocation);
	void STATIC_SetUIEnabled(class UPrimitiveComponent* Component, bool Enable);
	void STATIC_SetTraceEnabled(class UPrimitiveComponent* Component, bool Enabled);
	void STATIC_SetTraceAndCollisionEnabled(class UPrimitiveComponent* Component, bool Enabled);
	struct FTimerHandle STATIC_SetTimerFromFunctionWithDelay(class UObject* Object, const struct FString& FunctionName, float Time, bool bLooping, float InitialDelay);
	void STATIC_SetStateFirstAvailableSaveSlot(class UObject* WorldContextObject);
	void STATIC_SetSkeletalMeshPlaybackRatio(class USkeletalMeshComponent* Mesh, float PlaybackRatio, bool bFireNotifies);
	void STATIC_SetPostProcessVignetting(const struct FPostProcessSettings& InSettings, float Value, struct FPostProcessSettings* OutSettings);
	void STATIC_SetPostProcessLensFlare(const struct FPostProcessSettings& InSettings, float Value, struct FPostProcessSettings* OutSettings);
	void STATIC_SetNearClippingPlane(float Distance);
	void STATIC_SetCuePlaying(class UAudioComponent* Sound, bool Play, float Fade);
	void STATIC_SetCreativeModeTerrainColorIndex(int colorIndex, EPaintIndexType Type, class UObject* WorldContextObject);
	void STATIC_SetCollisionEnabled(class UPrimitiveComponent* Component, bool Enabled);
	void STATIC_SetChildActorPhysics(class UChildActorComponent* ChildActor, bool Physics, bool Collision);
	int STATIC_SetBitValue(int BitMask, int BitIndex, bool BitValue);
	void STATIC_SetAllVectorParameterValue(TArray<class UMaterialInstanceDynamic*> DynamicInstances, const struct FName& Parameter, const struct FLinearColor& Value);
	void STATIC_SetAllScalarParameterValue(TArray<class UMaterialInstanceDynamic*> DynamicInstances, const struct FName& Parameter, float Value);
	void STATIC_SetAllMaterial(class AActor* Actor, class UMaterialInterface* Material);
	void STATIC_SetAllComponentMaterial(class UPrimitiveComponent* Component, class UMaterialInterface* Material);
	void STATIC_SetActorUp(class AActor* Actor, const struct FVector& Forward);
	void STATIC_SetActorTraceEnabled(class AActor* Actor, bool Enabled);
	void STATIC_SetActorSimulatePhysics(class AActor* Actor, bool Simulate);
	void STATIC_SetActorRight(class AActor* Actor, const struct FVector& Forward);
	void STATIC_SetActorForward(class AActor* Actor, const struct FVector& Forward);
	void STATIC_SetActorCollisionEnabled(class AActor* Actor, bool Enabled);
	void STATIC_SaveGameNoCloudSave(class UObject* WorldContextObject, const struct FString& Name, const struct FScriptDelegate& OnCompletedDelegate);
	void STATIC_SaveGameAuto(class UObject* WorldContextObject, const struct FScriptDelegate& OnCompletedDelegate);
	void STATIC_SaveGame(class UObject* WorldContextObject, const struct FString& Name, const struct FScriptDelegate& OnCompletedDelegate);
	struct FString STATIC_SanitizeSaveFileDescriptiveName(const struct FString& SaveFileDescriptiveName);
	int STATIC_RollIntegerIncrement(int Value, int Max);
	int STATIC_RollIntegerDecrement(int Value, int Max);
	bool STATIC_ReturnToTitleScreen(class UObject* WorldContextObject);
	bool STATIC_RenameSaveFile(class UObject* WorldContextObject, const struct FString& CurrSaveName, const struct FString& newDescriptiveSaveName, const struct FScriptDelegate& OnCompletedDelegate);
	float STATIC_ReinterpretIntToFloat(int Int);
	int STATIC_ReinterpretFloatToInt(float Float);
	void STATIC_PreviewEmoteLocally(class USkeletalMeshComponent* targetMesh, class UAstroEmoteDefinition* emoteDefinition);
	bool STATIC_PredictIfActiveSaveFileIsTooLargeToSave(class UObject* WorldContextObject, struct FString* outSaveName, int* outSaveSize);
	void STATIC_PopulateSpawnableObjects(class UPanelWidget* Widget, const struct FString& nameFilter);
	void STATIC_PopulateSaveGames(class UPanelWidget* Widget);
	void STATIC_PopulateResourceTypes(class UPanelWidget* Widget);
	void STATIC_PopulateLoadablePresets(class UPanelWidget* Widget);
	void STATIC_PlaySound(class USoundBase* Sound, class UObject* WorldContextObject);
	void STATIC_PhysicsConstrain(class UPrimitiveComponent* Target, class UPrimitiveComponent* Other);
	void STATIC_NullInspectObject(class UObject* Object);
	void STATIC_MarkPrimitiveRenderStateDirty(class UPrimitiveComponent* Primitive);
	struct FVector_NetQuantizeNormal STATIC_MakeVectorQuantizeNormal(const struct FVector& Vector);
	struct FVector_NetQuantize100 STATIC_MakeVectorQuantize100(const struct FVector& Vector);
	void STATIC_MakeInert(class AActor* Actor);
	int STATIC_LogInt(int Val, int Base);
	bool STATIC_LoadMapSeamless(const struct FName& MapName, const struct FString& Options, bool bAbsolute, class UObject* WorldContextObject);
	bool STATIC_LoadGame(const struct FString& Name, class UObject* WorldContextObject);
	float STATIC_LerpToRange(float Min, float Max, float CurrentValue, float TargetLerp, float Alpha);
	void STATIC_JoinToURL(const struct FString& Name, class UObject* WorldContextObject);
	bool STATIC_IsWorldGameWorld(class UObject* WorldContextObject);
	bool STATIC_IsValidAstroLinearColor(const struct FLinearColor& ColorToTest);
	bool STATIC_IsTrailerBuild(class UObject* WorldContextObject);
	bool STATIC_IsStoreUIEnabled();
	bool STATIC_IsShippingBuild();
	bool STATIC_IsSaveRestoreInProgress();
	bool STATIC_IsSavePermittedOverrideEnabled();
	bool STATIC_IsSaveFileDescriptiveNameTheActiveSaveFile(class UObject* WorldContextObject, const struct FString& DescriptiveName);
	bool STATIC_IsReleaseBuild(class UObject* WorldContextObject);
	bool STATIC_IsPlatformUWPOrXbox();
	bool STATIC_IsPlatformPS4();
	bool STATIC_IsPlatformGameConsole();
	bool STATIC_IsLocalControlledPawn(class APawn* Pawn);
	bool STATIC_IsLanMatch(class UObject* WorldContextObject);
	bool STATIC_IsDedicatedServerUIEnabled();
	bool STATIC_IsDedicatedServer(class UObject* WorldContextObject);
	bool STATIC_IsCreativeMode(class UObject* WorldContextObject);
	bool STATIC_IsAsyncSaveInProgress();
	bool STATIC_IsAnalyticsEnabled(class UObject* WorldContextObject);
	float STATIC_InterpToRange(float Min, float Max, float CurrentValue, float TargetLerp, float DeltaTime, float Speed);
	struct FTransform STATIC_IdentityTransform();
	struct FVector STATIC_HitLocation(const struct FHitResult& Hit);
	struct FVector STATIC_HitImpactPoint(const struct FHitResult& Hit);
	struct FVector STATIC_HitImpactNormal(const struct FHitResult& Hit);
	class UPrimitiveComponent* STATIC_HitImpactComponent(const struct FHitResult& Hit);
	class AActor* STATIC_HitImpactActor(const struct FHitResult& Hit);
	bool STATIC_HasEventualParentActorOfType(class AActor* Actor, class UClass* ActorType);
	bool STATIC_HasComponentOfType(class UClass* ActorType, class UClass* ComponentType);
	struct FVector2D STATIC_GetWidgetOuterCanvasPosition(class UWidget* Widget);
	bool STATIC_GetUseSplitscreen(class UObject* WorldContextObject);
	int STATIC_GetTotalSizeOfAllCachedSaveFiles(class UObject* WorldContextObject);
	struct FVector2D STATIC_GetTextBoundsForFont(const struct FText& Text, const struct FSlateFontInfo& FontInfo);
	float STATIC_GetSkeletalMeshPlaybackRatio(class USkeletalMeshComponent* Mesh);
	struct FIntPoint STATIC_GetScreenResolution();
	float STATIC_GetPostProcessVignetting(const struct FPostProcessSettings& Settings);
	float STATIC_GetPostProcessLensFlare(const struct FPostProcessSettings& Settings);
	int STATIC_GetPlatformSaveStorageLimit();
	int STATIC_GetPlatformLowFreeStorageSpaceThreshold();
	class APlayerController* STATIC_GetOwnerPlayerControllerForActor(class AActor* Actor);
	class APlayerController* STATIC_GetOwnerPlayerController(class UActorComponent* Component);
	class APawn* STATIC_GetOwnerPawnForActor(class AActor* Actor);
	class APawn* STATIC_GetOwnerPawn(class UActorComponent* Component);
	class AActor* STATIC_GetOutermostActor(class AActor* Actor);
	bool STATIC_GetNumberOfPlayersInMultiplayerSession(int* outNumPlayersInSession);
	TArray<struct FString> STATIC_GetNicknamesOfPlayersInMultiplayerSession(bool bExcludeLocalControllingPlayer);
	TArray<struct FAstroSaveFileInformation> STATIC_GetNewestSaves(class UObject* WorldContextObject);
	struct FAstroSaveFileInformation STATIC_GetNewestSave(class UObject* WorldContextObject);
	bool STATIC_GetMultiplayerSessionLeaderName(struct FString* OutSessionLeaderName);
	class APawn* STATIC_GetLocalPawn(class UObject* WorldContextObject);
	class UObject* STATIC_GetKeyImageForKey(const struct FKey& Key);
	class UObject* STATIC_GetKeyImageForInteractionPrompt(class UObject* WorldContextObject, const struct FInteractionPromptEntryData& PromptData, EGameControllerType GameControllerType, bool ForceKeyboardImage);
	class UObject* STATIC_GetKeyImageForGamepadInput(class UObject* WorldContextObject, const struct FKey& Key);
	struct FName STATIC_GetInputNameFromInputMapping(EAstroInputBindingNameMappings ActionMapping);
	class AAstroGameState* STATIC_GetGameState(class UObject* WorldContextObject);
	EGamePlatform STATIC_GetGamePlatform();
	class AAstroGameMode* STATIC_GetGameMode(class UObject* WorldContextObject);
	class UAstroGameInstance* STATIC_GetGameInstance(class UObject* WorldContextObject);
	TEnumAsByte<EWindowMode> STATIC_GetFullscreenMode();
	struct FAstroDiscreteInputDefinition STATIC_GetDiscreteAstroInputDefinition(EAstroDiscreteInputOptionPlayerFacing DiscretePlayerFacingInputOption);
	struct FString STATIC_GetDedicatedServerUrl(class UObject* WorldContextObject);
	struct FString STATIC_GetDedicatedServerSearchName(class UObject* WorldContextObject);
	bool STATIC_GetCVar_Integer(const struct FString& cvarName, int* outInteger);
	int STATIC_GetCvar_EnableBackpackTrickleCharge();
	int STATIC_GetCvar_DeformTool_UseTerrainResource();
	int STATIC_GetCvar_DeformTool_UsePowerDraw();
	void STATIC_GetCreativeModeTerrainColors(class UObject* WorldContextObject, TArray<class UMaterialInterface*>* OutMaterials, TArray<struct FLinearColor>* OutTerrainColors);
	struct FLinearColor STATIC_GetCreativeModeTerrainColorAtIndex(int colorIndex, EPaintIndexType Type, class UObject* WorldContextObject);
	struct FLinearColor STATIC_GetCreativeModeTerrainColor(class UObject* WorldContextObject);
	class UMaterialInterface* STATIC_GetCreativeModeTerrainButtonColor(class UObject* WorldContextObject);
	void STATIC_GetCreativeModeSpecialColors(class UObject* WorldContextObject, TArray<struct FLinearColor>* OutPlanetColors, TArray<class UMaterialInterface*>* OutMaterials);
	void STATIC_GetCreativeModePlanetColors(class AActor* forActor, TArray<struct FLinearColor>* OutPlanetColors, TArray<class UMaterialInterface*>* OutMaterials);
	class UCreativeModeData* STATIC_GetCreativeModeData(class UObject* WorldContextObject);
	struct FString STATIC_GetControllingPlayerNickname();
	void STATIC_GetComponentsInChildren(class AActor* Actor, class UClass* Class, TArray<class UActorComponent*>* OutComponents);
	TArray<class USceneComponent*> STATIC_GetComponentParentHierarchy(class USceneComponent* Component, bool Inclusive);
	void STATIC_GetChildrenRecursive(class AActor* Actor, bool Inclusive, TArray<class AActor*>* OutActors);
	struct FString STATIC_GetBuildVersionWithFlavor();
	struct FDateTime STATIC_GetBuildVersionDate();
	struct FString STATIC_GetBuildVersion();
	bool STATIC_GetBitValue(int BitMask, int BitIndex);
	class AActor* STATIC_GetAttachParentActor(class AActor* Actor);
	struct FSlateColor STATIC_GetAstroColorAsSlateColor(EAstroColor AstroColor);
	struct FLinearColor STATIC_GetAstroColor(EAstroColor AstroColor);
	TArray<class AActor*> STATIC_GetActorParentHierarchy(class AActor* Actor, bool Inclusive);
	struct FRotator STATIC_FromToRotation(const struct FVector& From, const struct FVector& To);
	float STATIC_FInterpCombo(float Current, float Target, float ConstantSpeed, float MultiplicativeSpeed, float DeltaTime);
	class UActorComponent* STATIC_FindComponentByName(class AActor* Actor, const struct FName& ComponentName);
	struct FRotator STATIC_FindBetween(const struct FVector& A, const struct FVector& B);
	void STATIC_EnqueueSkeletalMeshPlayRate(class USkeletalMeshComponent* Mesh, float Rate);
	bool STATIC_DuplicateSaveFile(class UObject* WorldContextObject, const struct FString& CurrSaveName, const struct FString& newDescriptiveSaveName, const struct FScriptDelegate& OnCompletedDelegate);
	bool STATIC_DoesSaveFileDescriptiveNameCollideWithExistingSaves(class UObject* WorldContextObject, const struct FString& newDescriptiveSaveName);
	bool STATIC_DoesKeyMatchInputBinding(EAstroInputBindingNameMappings InputBinding, float AxisScale, const struct FKey& Key);
	void STATIC_DisplayLoadingUMG(class APlayerController* PlayerController, class UClass* LoadingWidgetOverride);
	void STATIC_DestroyChildActors(class AActor* Actor);
	void STATIC_DestroyActorHierarchy(class AActor* Actor, bool includeSelf);
	bool STATIC_DeleteSaveGame(class UObject* WorldContextObject, const struct FAstroSaveFileInformation& SaveDisplayInfo);
	void STATIC_DeleteAllSaves(class UObject* WorldContextObject);
	struct FString STATIC_DateTimeToString(const struct FDateTime& DateTime);
	class UMaterialInstanceDynamic* STATIC_CreatePostprocessMaterialDynamic(int Index, class UPostProcessComponent* PostProcess);
	TArray<class UMaterialInstanceDynamic*> STATIC_CreateAllDynamicMaterialInstances(class AActor* Actor, class UMaterialInterface* Material);
	TArray<class UMaterialInstanceDynamic*> STATIC_CreateAllComponentDynamicMaterialInstances(class UPrimitiveComponent* Component, class UMaterialInterface* Material);
	class UMaterialInstanceDynamic* STATIC_CreateAllComponentDynamicMaterialInstance(class UPrimitiveComponent* Component, class UMaterialInterface* Material);
	struct FTransform STATIC_ConvertToRelativeTransform(const struct FTransform& ParentTransform, const struct FTransform& Transform);
	struct FVector STATIC_ClosestPointOnLine(const struct FVector& LineStart, const struct FVector& LineEnd, const struct FVector& Point, float* T);
	int STATIC_CastPhysicalSurfaceToInteger(TEnumAsByte<EPhysicalSurface> surface);
	bool STATIC_CanGetSavedGames(class UObject* WorldContextObject);
	void STATIC_AddPostProcessBlendableMaterial(const struct FPostProcessSettings& InSettings, class UMaterial* Material, struct FPostProcessSettings* OutSettings);
	bool STATIC_ActorSimulatingPhysics(class AActor* Actor);
	bool STATIC_ActorOnClickedBound(class AActor* Actor);
	void STATIC_ActorCallOnClicked(class AActor* Actor);
};


// Class Astro.AstroTakePictureAction
// 0x0060 (0x00D8 - 0x0078)
class UAstroTakePictureAction : public UAstroAction
{
public:
	struct FScriptMulticastDelegate                    OnTakePictureCountdownPing;                               // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPictureTaken;                                           // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0098(0x0010) MISSED OFFSET
	class UClass*                                      PhotoWidgetType;                                          // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PictureImageCaptureDelay;                                 // 0x00B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PhotoWidgetDisplayDelay;                                  // 0x00B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPhotoWidgetForInstigatorOnly : 1;                        // 0x00B8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	float                                              DisplayPhotoWidgetForPlayersWithinDistance;               // 0x00BC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x00C0(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroTakePictureAction");
		return ptr;
	}


	void SetInstigator(class APlayerController* Instigator);
	void OnTakePictureTaskCompleted();
	void OnPictureImageCaptureDelayComplete();
	void OnPhotoWidgetDisplayDelayComplete();
	void BroadcastTakePictureCountdownPing();
};


// Class Astro.AstroTakePictureEmoteAction
// 0x0030 (0x00C0 - 0x0090)
class UAstroTakePictureEmoteAction : public UAstroPlayMontageAction
{
public:
	struct FScriptMulticastDelegate                    OnPictureTaken;                                           // 0x0090(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData00[0x10];                                      // 0x00A0(0x0010) MISSED OFFSET
	class UClass*                                      PhotoWidgetType;                                          // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayPhotoWidgetForPlayersWithinDistance;               // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPhotoWidgetForInstigatorOnly : 1;                        // 0x00BC(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroTakePictureEmoteAction");
		return ptr;
	}


	void OnTakePictureTaskCompleted();
	void OnSingleAnimCustomNotify(const struct FName& NotifyName);
	void OnMontageTaskInterrupted();
	void OnMontageTaskCompleted();
};


// Class Astro.AstroTakePictureTask
// 0x0038 (0x00A0 - 0x0068)
class UAstroTakePictureTask : public UGameplayTask
{
public:
	unsigned char                                      UnknownData00[0x38];                                      // 0x0068(0x0038) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroTakePictureTask");
		return ptr;
	}


	void OnPhotoWidgetClosed();
	void DisplayPhotoWidget();
};


// Class Astro.AstroTooltipWidget
// 0x00C0 (0x02D0 - 0x0210)
class UAstroTooltipWidget : public UAstroUICardWidget
{
public:
	struct FTooltipWidgetDisplayData                   TooltipWidgetDisplayData;                                 // 0x0210(0x0088) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0298(0x0010) MISSED OFFSET
	float                                              ExpandBadgeTime;                                          // 0x02A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CollapseBadgeTime;                                        // 0x02AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExpandDetailsTime;                                        // 0x02B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CollapseDetailsTime;                                      // 0x02B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02B8(0x0008) MISSED OFFSET
	ETooltipState                                      CurrentState;                                             // 0x02C0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x02C1(0x0001) MISSED OFFSET
	ETooltipAnimation                                  CurrentAnimation;                                         // 0x02C2(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x02C3(0x0005) MISSED OFFSET
	float                                              AnimationProgressRatio;                                   // 0x02C8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x02CC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroTooltipWidget");
		return ptr;
	}


	void UpdateTooltipDataForInteractionPromptsWithoutChangingLayout(const struct FTooltipWidgetDisplayData& NewTooltipWidgetDisplayData);
	void UpdateTooltipAnimation();
	void OnTextContentChanged();
	void OnStateChanged();
	void OnAnimationChanged();
	bool STATIC_HasValidInteractionPromptInArray(TArray<struct FInteractionPromptEntryData> InteractionPromptData);
	bool HasBadge();
};


// Class Astro.AstroUIAudioDatabase
// 0x0050 (0x0080 - 0x0030)
class UAstroUIAudioDatabase : public UDataAsset
{
public:
	TMap<EAstroUIAudioEventKey, struct FString>        UIAudioEventMap;                                          // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUIAudioDatabase");
		return ptr;
	}

};


// Class Astro.AstroUIStatics
// 0x0000 (0x0028 - 0x0028)
class UAstroUIStatics : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUIStatics");
		return ptr;
	}


	struct FSlateBrush STATIC_SlateBrushWithNewSlateColor(const struct FSlateBrush& SlateBrush, const struct FSlateColor& SlateColor);
	struct FSlateBrush STATIC_SlateBrushWithNewColor(const struct FSlateBrush& SlateBrush, const struct FLinearColor& LinearColor);
	void STATIC_SetImageBrushSlateColor(class UImage* Image, const struct FSlateColor& BrushColor);
	void STATIC_SetImageBrushSize(class UImage* Image, const struct FVector2D& NewSize);
	void STATIC_SetImageBrushImage(class UImage* Image, class UObject* ImageResource);
	void STATIC_SetImageBrushColor(class UImage* Image, const struct FLinearColor& BrushColor);
	void STATIC_SetBorderBrushSlateColor(class UBorder* Border, const struct FSlateColor& Color);
	void STATIC_SetBorderBrushImage(class UBorder* Border, class UObject* ImageResource);
	void STATIC_SetBorderBrushDrawAs(class UBorder* Border, TEnumAsByte<ESlateBrushDrawType> DrawAsType);
	void STATIC_SetAllUserFocus(class UWidget* WidgetToFocus);
	class UAstroUIStylingDatabase* STATIC_GetAstroUIStylingDatabase();
	struct FString STATIC_GetAstroUIAudioEvent(EAstroUIAudioEventKey AudioEventKey);
	class UAstroPopupBadgeDatabase* STATIC_GetAstroPopupBadgeDatabase();
	float STATIC_GetAnimationDuration(class UWidgetAnimation* InAnimation);
	void STATIC_DisplayPopupBadgeForItemPing(class AActor* OwningActor, class UClass* ItemType);
	void STATIC_DisplayPopupBadge(class AActor* OwningActor, const struct FAstroPopupBadgeAuthoringData& AuthoringData);
	void STATIC_ClearAllUserFocus();
};


// Class Astro.AstroUIStylingDatabase
// 0x02F0 (0x0320 - 0x0030)
class UAstroUIStylingDatabase : public UDataAsset
{
public:
	EAstroColor                                        ColorGameMenuTitle;                                       // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuSubsectionHeader;                            // 0x0031(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryTextUnfocused;                          // 0x0032(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryTextFocused;                            // 0x0033(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryInteractiveElementFocused;              // 0x0034(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryInteractiveElementUnfocused;            // 0x0035(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryFocusedBG;                              // 0x0036(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuEntryDisabled;                               // 0x0037(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuTabBarBG;                                    // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuPanelBG;                                     // 0x0039(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuTabBarSubPaneSeparator;                      // 0x003A(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuScrollBarHandleColor;                        // 0x003B(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAstroColor                                        ColorGameMenuScrollBarBGColor;                            // 0x003C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FColorPaletteGameMenuTabBarButton           ColorPaletteGameMenuTabBarGeneric;                        // 0x003D(0x0006) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FColorPaletteGameMenuTabBarButton           ColorPaletteGameMenuTabBarButtonBack;                     // 0x0043(0x0006) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FColorPaletteGameMenuTabBarButton           ColorPaletteGameMenuTabBarButtonQuit;                     // 0x0049(0x0006) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x004F(0x0001) MISSED OFFSET
	struct FSlateFontInfo                              FontGameMenuTitle;                                        // 0x0050(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateFontInfo                              FontGameMenuSubsectionHeader;                             // 0x00A8(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateFontInfo                              FontGameMenuEntryBold;                                    // 0x0100(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FSlateFontInfo                              FontGameMenuEntryNormal;                                  // 0x0158(0x0058) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	struct FAstroGameMenuAuthoringDefinition           HostMidGameMenu;                                          // 0x01B0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAstroGameMenuAuthoringDefinition           ClientMidGameMenu;                                        // 0x01D0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAstroGameMenuAuthoringDefinition           HostTitleScreenMenu;                                      // 0x01F0(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAstroGameMenuAuthoringDefinition           HostTitleScreenMenuConsole;                               // 0x0210(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAstroGameMenuAuthoringDefinition           ClientTitleScreenMenu;                                    // 0x0230(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FAstroGameMenuAuthoringDefinition           ClientTitleScreenMenuConsole;                             // 0x0250(0x0020) (Edit, BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      AstropediaTabBarButtonClass;                              // 0x0270(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      CreativeModeTabBarButtonClass;                            // 0x0278(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FMargin                                     StandardMenuEntryWidgetMargin;                            // 0x0280(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       FriendJoinAttemptInvalidSessionMsg;                       // 0x0290(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CosmeticUnlockSucceededMsg;                               // 0x02A8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CosmeticUnlockFailedGenericMsg;                           // 0x02C0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CosmeticUnlockFailedTimeoutMsg;                           // 0x02D8(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CosmeticUnlockFailedCodeInvalidMsg;                       // 0x02F0(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       CosmeticUnlockFailedCodeAlreadyUsedMsg;                   // 0x0308(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUIStylingDatabase");
		return ptr;
	}

};


// Class Astro.AstroUnlockNotificationManager
// 0x0028 (0x0050 - 0x0028)
class UAstroUnlockNotificationManager : public UObject
{
public:
	TArray<class UAstroNotificationUnlockWidget*>      LivingUnlockNotifications;                                // 0x0028(0x0010) (ExportObject, ZeroConstructor)
	TArray<struct FAstroNotificationUnlockAuthoringData> QueueOfUnlockNotifsToSpawn;                               // 0x0038(0x0010) (ZeroConstructor)
	struct FTimerHandle                                SpawnTimerHandle;                                         // 0x0048(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUnlockNotificationManager");
		return ptr;
	}


	void HandleNotificationSpawnTimerTick();
};


// Class Astro.AstroUnpackAction
// 0x0008 (0x00C0 - 0x00B8)
class UAstroUnpackAction : public UAstroPackagingAction
{
public:
	class UDeployableItemPackageComponent*             DeployableItemComponent;                                  // 0x00B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroUnpackAction");
		return ptr;
	}


	void SetDeployableItem(class UDeployableItemPackageComponent* DeployableItemPackageComponent);
};


// Class Astro.AstroGameMenuTutorialSlideDeckDatabase
// 0x00A0 (0x00D0 - 0x0030)
class UAstroGameMenuTutorialSlideDeckDatabase : public UDataAsset
{
public:
	TMap<EAstroGameMenuTutoriaSlideCardKey, struct FAstroGameMenuTutorialSlide> TutorialSlideCards;                                       // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TMap<EAstroGameMenuTutorialSlideDeckKey, struct FAstroGameMenuTutorialSlideDeck> TutorialSlideDecks;                                       // 0x0080(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroGameMenuTutorialSlideDeckDatabase");
		return ptr;
	}

};


// Class Astro.PhysicalItem
// 0x02B8 (0x0660 - 0x03A8)
class APhysicalItem : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnItemUnpacked;                                           // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlacedInSlot;                                           // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSpawnedInSlot;                                          // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEmplacedInSlot;                                         // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnemplacedFromSlot;                                     // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFullyEmplaced;                                          // 0x03F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReleasedFromSlot;                                       // 0x0408(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDroppedInWorld;                                         // 0x0418(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPickedUpFromWorld;                                      // 0x0428(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartInWorld;                                           // 0x0438(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMoved;                                                  // 0x0448(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMotionStateChanged;                                     // 0x0458(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSetCardinalDirection;                                   // 0x0468(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReplicationDataChanged;                                 // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UItemComponent*                              ItemComponent;                                            // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UActorEntityLinkComponent*                   EntityLinkComponent;                                      // 0x0490(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, IsPlainOldData)
	class UTerrainPhysicsComponent*                    terrainComponent;                                         // 0x0498(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         PlaceholderPrimitive;                                     // 0x04A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x04A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWorldGravity*                               GravityComponent;                                         // 0x04B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClickableComponent*                         ClickableComponent;                                       // 0x04B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USlotsComponent*                             SlotsComponent;                                           // 0x04C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           TooltipComponent;                                         // 0x04C8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UProceduralStateComponent*                   ProceduralState;                                          // 0x04D0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FEmplacementData                            EmplacementData;                                          // 0x04D8(0x0018) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FSlotReference                              CurrentSlot;                                              // 0x04F0(0x0010) (BlueprintVisible, BlueprintReadOnly)
	struct FSlotReference                              PreviousSlot;                                             // 0x0500(0x0010) (BlueprintVisible, BlueprintReadOnly)
	struct FText                                       ItemName;                                                 // 0x0510(0x0018) (Edit)
	bool                                               SlotQueryAllowBodyPlacement;                              // 0x0528(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0529(0x0007) MISSED OFFSET
	struct FTransform                                  OddTierBodyOffset;                                        // 0x0530(0x0030) (Edit, IsPlainOldData)
	bool                                               OffsetOddTiers;                                           // 0x0560(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0561(0x0003) MISSED OFFSET
	struct FVector                                     HoverAxis;                                                // 0x0564(0x000C) (Edit, IsPlainOldData)
	float                                              HoverHeight;                                              // 0x0570(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IndicatorUseAnimInstance;                                 // 0x0574(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               WeldAsChild;                                              // 0x0575(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseHoverForward;                                          // 0x0576(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0577(0x0001) MISSED OFFSET
	struct FVector                                     HoverForward;                                             // 0x0578(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	bool                                               IgnoreBodySlotForHover;                                   // 0x0584(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0585(0x0003) MISSED OFFSET
	float                                              PrinterHeight;                                            // 0x0588(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ToolMoveTier;                                             // 0x058C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlacementSnapToGroundHeight;                              // 0x0590(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsMovable;                                                // 0x0594(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               AlwaysMovePhysical;                                       // 0x0595(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0596(0x0002) MISSED OFFSET
	float                                              ItemWorldScale;                                           // 0x0598(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SlotScale;                                                // 0x059C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    AuxUseOverride;                                           // 0x05A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ActuatorUseOverride;                                      // 0x05B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class APawn*                                       MostRecentNetOwner;                                       // 0x05C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsUnslottable;                                            // 0x05C8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x05C9(0x0007) MISSED OFFSET
	struct FEmplacementData                            PreviousEmplacementData;                                  // 0x05D0(0x0018) (Transient)
	struct FPhysicalItemReplicatedState                ReplicatedState;                                          // 0x05E8(0x0030) (Net)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0618(0x0008) MISSED OFFSET
	struct FPhysicalItemReplicatedState                PreviousReplicatedState;                                  // 0x0620(0x0030) (Transient)
	class UPhysicalMaterial*                           DefaultPhysicalMaterial;                                  // 0x0650(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x0658(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicalItem");
		return ptr;
	}


	void StartItemInWorld();
	void StartInWorld();
	bool ShouldPickUp(class UPrimitiveComponent* PrimComponent);
	void SetWorldPhysics();
	void SetPuppetPhysics();
	void SetPhysicsState(EPhysicalItemMotionState State, class USceneComponent* AttachParent, const struct FName& SocketName, bool weld);
	void SetNonSimulatingPhysics();
	void SetIndicatorPhysics();
	void SetAttachPhysics(class USceneComponent* Component, const struct FName& SocketName, bool DeWeld);
	void ServerTakePossession(class APawn* controllingPawn, bool PhysicalMovement, bool PartOfSwap);
	void ServerSlotSetItem(const struct FSlotReference& ItemSlot, int SubslotIndex, const struct FSlotReference& sourceTransitionSlot, bool useSourceTransform, bool FromTool, bool SlottedDuringInitialization, bool PartOfSwap);
	void ServerSlotReleaseItem(bool NewOwner, bool FromTool, float RandomForce, bool PartOfSwap);
	void ServerSlotEmplaceItem(const struct FSlotReference& Slot, int SubslotIndex, bool SnapTo, bool weld);
	void ServerSetSlotCardinalDirection(unsigned char Direction);
	void ServerReleasePossession(class UPrimitiveComponent* HitComponent, bool terrainComponent, const struct FVector& HitLocation, const struct FVector_NetQuantizeNormal& HitNormal);
	void ServerMove(const struct FVector_NetQuantize100& clientLoc, float Scale, uint32_t clientRot, unsigned char clientRoll);
	void ReleasedFromSlot(bool FromTool, bool NewOwner);
	struct FTransform PlacementTransform(const struct FHitResult& Hit);
	void PlacedInSlot(const struct FSlotReference& Slot, bool FromTool, bool SlottedDuringInitialization);
	void PickUpFromWorld(bool PhysicalMovement);
	void PickedUpFromWorld();
	void OnRep_ItemState();
	void OnRep_EmplacementData();
	void MulticastSetFullyEmplaced(const struct FSlotReference& Slot, int SubslotIndex);
	void MulticastReleasedFromSlot(bool FromTool, bool NewOwner);
	void MulticastPickedUpFromWorld(bool PhysicalMovement);
	void MulticastDroppedInWorld(class UPrimitiveComponent* Component, bool terrainComponent, const struct FVector& Point, const struct FVector& Normal);
	bool Movable(int ToolTier);
	bool IsLarge();
	int GetSubSlotIndex();
	class UClass* GetStoredSubItemTypeClass();
	class UItemType* GetStoredSubItemTypeCDO();
	float GetPrinterHeight();
	int GetPickupToolTier();
	class APhysicalItem* GetPickupItemDefault();
	EPhysicalItemMotionState GetMotionState();
	class UClass* GetLiteralItemTypeClass();
	class UItemType* GetLiteralItemTypeCDO();
	float STATIC_GetItemTypeDefaultScale(class UClass* Type);
	struct FText GetItemName();
	class UWorldGravity* GetGravity();
	class UClass* GetFunctionalItemTypeClass();
	class UItemType* GetFunctionalItemTypeCDO();
	class UChildSlotComponent* GetBodySlotLegacy();
	struct FSlotReference GetBodySlot();
	struct FTransform GetBaseLocation();
	void DroppedInWorld(class UPrimitiveComponent* Component, bool terrainComponent, const struct FVector& Point, const struct FVector& Normal);
	void DropInWorld(class UPrimitiveComponent* Component, bool terrainComponent, const struct FVector& Point, const struct FVector& Normal);
	bool CanNeverBeSlotted();
};


// Class Astro.AtmosphericCondenserBase
// 0x0110 (0x0770 - 0x0660)
class AAtmosphericCondenserBase : public APhysicalItem
{
public:
	struct FScriptMulticastDelegate                    OnViewDataChanged;                                        // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    AuthorityOnItemCondensed;                                 // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FAtmosphericCondenserReplicationData        ReplicationData;                                          // 0x0680(0x0038) (BlueprintVisible, BlueprintReadOnly, Net)
	struct FAtmosphericCondenserReplicationData        PrevReplicationData;                                      // 0x06B8(0x0038) (BlueprintVisible, BlueprintReadOnly)
	struct FName                                       OutputSlotName;                                           // 0x06F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseProductionRate;                                       // 0x06F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAtmosphericCondenserState                         CondenserState;                                           // 0x06FC(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x06FD(0x0003) MISSED OFFSET
	class UClass*                                      CurrentAtmosphericResourceType;                           // 0x0700(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              CurrentHarvestedAtmosphereAmount;                         // 0x0708(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x070C(0x0004) MISSED OFFSET
	class AAstroPlanet*                                CurrentPlanet;                                            // 0x0710(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x38];                                      // 0x0718(0x0038) MISSED OFFSET
	TArray<struct FSlotReference>                      OutputSlotArray;                                          // 0x0750(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0760(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AtmosphericCondenserBase");
		return ptr;
	}


	void OnReplicationDataChanged();
	float GetEffectiveProductionDuration();
	void AuthoritySetOuputResourceIndex(int NewSelectedOutputResourceIndex);
	void AuthorityIncrementOuputResourceIndex();
	void AuthorityDecrementOuputResourceIndex();
	void AuthorityAttemptToToggleProduction();
};


// Class Astro.AugmentComponent
// 0x0100 (0x01F0 - 0x00F0)
class UAugmentComponent : public UActorComponent
{
public:
	TMap<EAugmentProperty, float>                      AugmentPropertyMap;                                       // 0x00F0(0x0050) (Edit, ZeroConstructor)
	bool                                               AugmentIsEquipped;                                        // 0x0140(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAugmentEquipped;                                        // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAugmentUnequipped;                                      // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               AugmentIsActive;                                          // 0x0168(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAugmentActivated;                                       // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAugmentDeactivated;                                     // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAugmentEnabled;                                         // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAugmentDisabled;                                        // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               AugmentIsEnabled;                                         // 0x01B0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnAugmentPropertyChanged;                                 // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData03[0x18];                                      // 0x01C8(0x0018) MISSED OFFSET
	struct FTimerHandle                                ReactivationTimer;                                        // 0x01E0(0x0008)
	unsigned char                                      UnknownData04[0x8];                                       // 0x01E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AugmentComponent");
		return ptr;
	}


	void UnblockReactivation();
	void SetPowerDrawEnabled(bool drawEnabled);
	void SetAugmentEquipped(bool equipped);
	bool SetAugmentEnabled(bool IsEnabled);
	void SetAugmentActive(bool active);
	void PhysicalItemUnslotted(bool NewOwner);
	void OnReplicated_AugmentEquipped();
	void OnReplicated_AugmentEnabled();
	void OnReplicated_AugmentActive();
	void AugmentUnequipped();
	void AugmentEquipped();
	void AugmentEnabled();
	void AugmentDisabled();
	void AugmentDeactivated();
	void AugmentActivated();
};


// Class Astro.AutoCrane
// 0x01B0 (0x0810 - 0x0660)
class AAutoCrane : public APhysicalItem
{
public:
	class UCapsuleComponent*                           PickupCollider;                                           // 0x0660(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCapsuleComponent*                           DropoffCollider;                                          // 0x0668(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             CraneRotationComponent;                                   // 0x0670(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               TransferItem;                                             // 0x0678(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	float                                              BaseRotationTime;                                         // 0x0680(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ItemSlottingTime;                                         // 0x0684(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnClientCraneStateChanged;                                // 0x0688(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnClientTransferProgressChanged;                          // 0x0698(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnTransferItemSet;                                        // 0x06A8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnTransferItemReleased;                                   // 0x06B8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnTransferItemFullyEmplaced;                              // 0x06C8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnTransferItemMotionStateChanged;                         // 0x06D8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnCranePlacedInSlot;                                      // 0x06E8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnCraneReleasedFromSlot;                                  // 0x06F8(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnCranePowerChanged;                                      // 0x0708(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnCraneInputUse;                                          // 0x0718(0x0010) (ZeroConstructor, InstancedReference)
	struct FSlotReference                              TransferSlotRef;                                          // 0x0728(0x0010) (Transient)
	class UPowerComponent*                             PowerComponent;                                           // 0x0738(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x58];                                      // 0x0740(0x0058) MISSED OFFSET
	struct FComponentReference                         PickupColliderReference;                                  // 0x0798(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         DropoffColliderReference;                                 // 0x07B0(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         CraneRotationComponentReference;                          // 0x07C8(0x0018) (Edit, DisableEditOnInstance)
	struct FName                                       TransferSlotName;                                         // 0x07E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FilterSlotName;                                           // 0x07E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlotReference                              FilterSlotRef;                                            // 0x07F0(0x0010) (Transient)
	float                                              TransferProgress;                                         // 0x0800(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              PowerRatio;                                               // 0x0804(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	EAutoCraneTransferStage                            TransferStage;                                            // 0x0808(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      bIsTurnedOn : 1;                                          // 0x0809(0x0001) (Net, SaveGame)
	unsigned char                                      UnknownData01[0x6];                                       // 0x080A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AutoCrane");
		return ptr;
	}


	void OnRep_TransferProgress();
	void OnRep_CraneState();
	void HandleOnSetItem(class APhysicalItem* Item);
	void HandleOnReleaseItem(class APhysicalItem* Item);
	void HandleOnReleasedFromSlot(bool NewOwner);
	void HandleOnPlacedInSlot();
	void HandleOnMotionStateChanged();
	void HandleOnHasPowerAvailableChanged(bool HasAvailablePower);
	void HandleOnFullyEmplaced();
	void HandleOnFilterSlotChanged(class APhysicalItem* Item);
	void HandleChassisSlotEvent(class APhysicalItem* Item);
};


// Class Astro.AutoCraneManager
// 0x01E8 (0x0210 - 0x0028)
class UAutoCraneManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET
	TArray<struct FAutoCraneState>                     CraneStates;                                              // 0x0088(0x0010) (ZeroConstructor)
	TArray<struct FAutoCraneOverlapTestRequest>        ShapeCastRequests;                                        // 0x0098(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x00A8(0x0010) MISSED OFFSET
	TArray<class AActor*>                              ProcessedActorCache;                                      // 0x00B8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x130];                                     // 0x00C8(0x0130) MISSED OFFSET
	class APlayController*                             PlayControllerCache;                                      // 0x01F8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAstroCharacter*                             AstroCharacterCache;                                      // 0x0200(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0208(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AutoCraneManager");
		return ptr;
	}


	void OnTransferItemSet(class AAutoCrane* Crane);
	void OnTransferItemReleased(class AAutoCrane* Crane);
	void OnTransferItemMotionStateChanged(class AAutoCrane* Crane);
	void OnTransferItemFullyEmplaced(class AAutoCrane* Crane);
	void OnLocalSolarBodyChanged(class ASolarBody* newBody);
	void OnCraneReleasedFromSlot(class AAutoCrane* Crane);
	void OnCranePowerChanged(class AAutoCrane* Crane);
	void OnCranePlacedInSlot(class AAutoCrane* Crane);
	void OnCraneInputUse(class AAutoCrane* Crane);
	void OnClientTransferProgressChanged(class AAutoCrane* Crane);
	void OnClientCraneStateChanged(class AAutoCrane* Crane);
};


// Class Astro.CameraModifierComponent
// 0x0038 (0x0128 - 0x00F0)
class UCameraModifierComponent : public UActorComponent
{
public:
	unsigned char                                      bEnabled : 1;                                             // 0x00F0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	unsigned char                                      Priority;                                                 // 0x00F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	float                                              ShutoffLatency;                                           // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDeactivateOnCameraInput : 1;                             // 0x00FC(0x0001) (Edit)
	unsigned char                                      bDeactivateOnCollision : 1;                               // 0x00FC(0x0001) (Edit)
	unsigned char                                      bActiveOnlyWithCameraInput : 1;                           // 0x00FC(0x0001) (Edit)
	unsigned char                                      bDeactivateOnClicks : 1;                                  // 0x00FC(0x0001) (Edit)
	unsigned char                                      bReactivateOnlyOnMovement : 1;                            // 0x00FC(0x0001) (Edit)
	unsigned char                                      bScaleWithZoomInput : 1;                                  // 0x00FC(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00FD(0x0003) MISSED OFFSET
	float                                              MaxZoomScale;                                             // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxZoomClamp;                                             // 0x0104(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinZoomScale;                                             // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinZoomClamp;                                             // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LerpSpeed;                                                // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PostActivationEasePeriod;                                 // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0118(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CameraModifierComponent");
		return ptr;
	}

};


// Class Astro.AxisOffsetConstraintModifier
// 0x0028 (0x0150 - 0x0128)
class UAxisOffsetConstraintModifier : public UCameraModifierComponent
{
public:
	unsigned char                                      bConstrainForward : 1;                                    // 0x0128(0x0001) (Edit)
	unsigned char                                      bConstrainUp : 1;                                         // 0x0128(0x0001) (Edit)
	unsigned char                                      bConstrainRight : 1;                                      // 0x0128(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              ForwardMax;                                               // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForwardMin;                                               // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForwardCorrectionSpeed;                                   // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpMax;                                                    // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpMin;                                                    // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpCorrectionSpeed;                                        // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightMax;                                                 // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightMin;                                                 // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightCorrectionSpeed;                                     // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AxisOffsetConstraintModifier");
		return ptr;
	}

};


// Class Astro.Backpack
// 0x0088 (0x0430 - 0x03A8)
class ABackpack : public AActor
{
public:
	TArray<struct FSlotReference>                      AuxResourceAndDeformToolSlots;                            // 0x03A8(0x0010) (BlueprintVisible, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x03B8(0x0010) MISSED OFFSET
	class ADroneBase*                                  CreativeDrone;                                            // 0x03C8(0x0008) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	class UCrackableActorComponent*                    CatalogCrackable;                                         // 0x03D0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UCrackableActorComponent*                    CatalogCrackableCreative;                                 // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class ADeformTool*                                 CachedDeformTool;                                         // 0x03E0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CatalogActor;                                             // 0x03E8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CatalogActorPrev;                                         // 0x03F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CatalogCreativeActor;                                     // 0x03F8(0x0008) (Net, ZeroConstructor, Transient, IsPlainOldData)
	class AActor*                                      CatalogCreativeActorPrev;                                 // 0x0400(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FBackpackOxygenTankProperties               DefaultOxygenTankProperties;                              // 0x0408(0x0010) (Edit)
	struct FBackpackOxygenTankOverride                 OxygenTankPropertiesOverride;                             // 0x0418(0x0018) (Net, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Backpack");
		return ptr;
	}


	void ToggleOpen();
	void SetOpen(bool IsOpen);
	void SetCatalog(class UChildActorComponent* Catalog, class UChildActorComponent* catalogCreative);
	void OnRightAuxReleased();
	void OnRightAuxPressed();
	void OnRep_Catalog();
	void OnOxygenTankPropertiesChanged();
	void OnLeftAuxReleased();
	void OnLeftAuxPressed();
	void OnItemInSlotChanged(class APhysicalItem* Item);
	void OnDeformToolEquippedStateChanged(bool equipped);
	void OnCreativeModeEnabledChanged(bool bIsCreativeModeEnabled);
	void OnCatalogCrackedChanged(class UCrackableActorComponent* CrackableActorComponent, bool cracked);
	void OnCancel();
	bool GetUnbundleOriginFromAuxSlot(const struct FSlotReference& AuxSlot, struct FVector* OutUnbundleOrigin);
	class USceneComponent* GetRightAuxSlotUnbundleItemCastOrigin();
	struct FBackpackOxygenTankProperties GetOxygenTankProperties();
	bool GetOpen();
	class USceneComponent* GetLeftAuxSlotUnbundleItemCastOrigin();
	class AActor* GetInactiveChildCatalog();
	class AActor* GetChildCatalog();
	void AuthorityRemoveOxygenTankPropertiesOverride();
	void AuthorityApplyOxygenTankPropertiesOverride(const struct FBackpackOxygenTankProperties& OverrideProperties);
};


// Class Astro.BeaconBase
// 0x00B0 (0x0458 - 0x03A8)
class ABeaconBase : public AActor
{
public:
	class USceneComponent*                             HoverPointComponent;                                      // 0x03A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	float                                              PlanetDistance;                                           // 0x03B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinViewDistance;                                          // 0x03B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxViewDistance;                                          // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BeaconHeight;                                             // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlumbLineOffset;                                          // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03C4(0x0004) MISSED OFFSET
	struct FComponentReference                         HoverPointReference;                                      // 0x03C8(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         IconComponentReference;                                   // 0x03E0(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         IndicatorLineComponentReference;                          // 0x03F8(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         IconRootReference;                                        // 0x0410(0x0018) (Edit, DisableEditOnInstance)
	class USceneComponent*                             IconComponent;                                            // 0x0428(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             IndicatorLineComponent;                                   // 0x0430(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             IconRootComponent;                                        // 0x0438(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class USceneComponent*>                     IconChildren;                                             // 0x0440(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      bBeaconVisible : 1;                                       // 0x0450(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0451(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BeaconBase");
		return ptr;
	}

};


// Class Astro.BeaconManager
// 0x00A8 (0x00D0 - 0x0028)
class UBeaconManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET
	TArray<class ABeaconBase*>                         ActiveBeacons;                                            // 0x0088(0x0010) (ZeroConstructor, Transient)
	TArray<class ABeaconBase*>                         HiddenBeacons;                                            // 0x0098(0x0010) (ZeroConstructor, Transient)
	TArray<class ABeaconBase*>                         UpdateQueue;                                              // 0x00A8(0x0010) (ZeroConstructor, Transient)
	class AAstroGameState*                             GameStateCache;                                           // 0x00B8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class APlayController*                             PlayControllerCache;                                      // 0x00C0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAstroCharacter*                             AstroCharacterCache;                                      // 0x00C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BeaconManager");
		return ptr;
	}


	void OnLocalSolarBodyChanged(class ASolarBody* newBody);
};


// Class Astro.BiomeActor
// 0x0000 (0x03A8 - 0x03A8)
class ABiomeActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeActor");
		return ptr;
	}

};


// Class Astro.BiomeModifier
// 0x0020 (0x16A0 - 0x1680)
class UBiomeModifier : public UAdditiveModifier
{
public:
	TArray<class UClass*>                              RandomBiomes;                                             // 0x1680(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x1690(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeModifier");
		return ptr;
	}

};


// Class Astro.BiomeCapsModifier
// 0x0030 (0x16D0 - 0x16A0)
class UBiomeCapsModifier : public UBiomeModifier
{
public:
	float                                              CapRatio;                                                 // 0x16A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CapTransition;                                            // 0x16A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CapDirection;                                             // 0x16A8(0x000C) (Edit, IsPlainOldData)
	bool                                               Flip;                                                     // 0x16B4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1B];                                      // 0x16B5(0x001B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeCapsModifier");
		return ptr;
	}

};


// Class Astro.BiomeHazards
// 0x0010 (0x02C0 - 0x02B0)
class UBiomeHazards : public USceneComponent
{
public:
	TArray<struct FHazardInfo>                         HazardTypes;                                              // 0x02B0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeHazards");
		return ptr;
	}

};


// Class Astro.BiomeNoiseModifier
// 0x0030 (0x16D0 - 0x16A0)
class UBiomeNoiseModifier : public UBiomeModifier
{
public:
	float                                              NoiseScale;                                               // 0x16A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseRatio;                                               // 0x16A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NoiseTransition;                                          // 0x16A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x16AC(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeNoiseModifier");
		return ptr;
	}

};


// Class Astro.BiomeSamplerComponent
// 0x0038 (0x0128 - 0x00F0)
class UBiomeSamplerComponent : public UActorComponent
{
public:
	float                                              TickFrequency;                                            // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnBiomeSampleUpdated;                                     // 0x00F8(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0108(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BiomeSamplerComponent");
		return ptr;
	}

};


// Class Astro.AstroSlateFocusWidgetContainer
// 0x0010 (0x0220 - 0x0210)
class UAstroSlateFocusWidgetContainer : public UUserWidgetBlueprintDesignable
{
public:
	class UAstroSlateFocusWidget*                      ChildWidgetWithFocusHighlight;                            // 0x0210(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0218(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroSlateFocusWidgetContainer");
		return ptr;
	}


	void RestoreLastFocus();
	void ChildWidgetFocusHighlightChanged(class UAstroSlateFocusWidget* FocusWidget);
};


// Class Astro.SlotOrganizationRule
// 0x0048 (0x0070 - 0x0028)
class USlotOrganizationRule : public UObject
{
public:
	struct FName                                       RuleName;                                                 // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               ManagedSlots;                                             // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	int                                                Priority;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EIndicatorTooltipType                              IndicatorType;                                            // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              UnwantedItemEjectionForce;                                // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bPushUnwantedItems : 1;                                   // 0x004C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bEjectUnwantedItems : 1;                                  // 0x004C(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsEnabled : 1;                                           // 0x004C(0x0001) (Edit, Net, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	TArray<struct FSlotReference>                      ManagedSlotRefs;                                          // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0060(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotOrganizationRule");
		return ptr;
	}


	void SetEnabled(bool Enabled);
};


// Class Astro.BlueprintableSlotOrganizationRule
// 0x0000 (0x0070 - 0x0070)
class UBlueprintableSlotOrganizationRule : public USlotOrganizationRule
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BlueprintableSlotOrganizationRule");
		return ptr;
	}


	TArray<class APhysicalItem*> AuthorityGetWantedItems_Blueprint(TArray<class APhysicalItem*> availableItems);
	TArray<class APhysicalItem*> AuthorityGetUnwantedItemsInManagedSlots_Blueprint();
	TArray<class UClass*> AuthorityGetDesiredIndicators_Blueprint();
};


// Class Astro.BodySlotComponent
// 0x0058 (0x0148 - 0x00F0)
class UBodySlotComponent : public UActorComponent
{
public:
	float                                              HoverHeight;                                              // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlace;                                                  // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnRelease;                                                // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDropInWorld;                                            // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartInWorld;                                           // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPickUpFromWorld;                                        // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BodySlotComponent");
		return ptr;
	}


	void StartInWorld();
};


// Class Astro.BreadboardPlatformComponent
// 0x0048 (0x0138 - 0x00F0)
class UBreadboardPlatformComponent : public UActorComponent
{
public:
	class UPrimitiveComponent*                         LockdownSpikes;                                           // 0x00F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCurveFloat*                                 AnimationCurve;                                           // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockdownAnimationDuration;                                // 0x0100(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LockdownAnimationTravelDistance;                          // 0x0104(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               REP_LockdownEnabled;                                      // 0x0108(0x0001) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1F];                                      // 0x0109(0x001F) MISSED OFFSET
	class USlotsComponent*                             AuthoritySlotsComponent;                                  // 0x0128(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               OwningItem;                                               // 0x0130(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BreadboardPlatformComponent");
		return ptr;
	}


	void OnRep_LockdownEnabledChanged();
	void CheckCables(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
};


// Class Astro.BreadboardPrinterComponent
// 0x02B0 (0x03A0 - 0x00F0)
class UBreadboardPrinterComponent : public UActorComponent
{
public:
	float                                              PrintShaderThickness;                                     // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanPrintToSelfPlatform;                                   // 0x00F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	struct FSlotReference                              GroundOutputSlotRef;                                      // 0x00F8(0x0010) (BlueprintVisible)
	TArray<class UClass*>                              BreadboardRecipes;                                        // 0x0108(0x0010) (Edit, ZeroConstructor)
	TArray<class UClass*>                              ModuleRecipes;                                            // 0x0118(0x0010) (Edit, ZeroConstructor)
	TArray<float>                                      PrintSpeedsByTier;                                        // 0x0128(0x0010) (Edit, ZeroConstructor)
	float                                              PrintSpeedScalar;                                         // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrintSurfaceRadius;                                       // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OutOfRangeDuration;                                       // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AutoShutdownEnabled;                                      // 0x0144(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0145(0x0003) MISSED OFFSET
	float                                              ActivationRange;                                          // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ExtensionLerpThreshold;                                   // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CalculatePrintheadAnimationValues;                        // 0x0150(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0151(0x0003) MISSED OFFSET
	float                                              ExtensionLerpSpeed;                                       // 0x0154(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeightLerpSpeed;                                          // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x015C(0x0004) MISSED OFFSET
	struct FName                                       PrintheadNeutralSocketName;                               // 0x0160(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PrintheadDeployedSocketName;                              // 0x0168(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       PrintheadActualSocketName;                                // 0x0170(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             PrintAreaRoot;                                            // 0x0178(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             GroundOutputSlot;                                         // 0x0180(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USkeletalMeshComponent*                      PrinterMesh;                                              // 0x0188(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            PrintAreaCollider;                                        // 0x0190(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               PrintingOntoItem;                                         // 0x0198(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               RoomToPrint;                                              // 0x0199(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x019A(0x0002) MISSED OFFSET
	float                                              PrintheadHeight_Current;                                  // 0x019C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PrintheadExtension_Current;                               // 0x01A0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FBreadboardPrinterAnimationReplicationData  REP_AnimationData;                                        // 0x01A4(0x0010) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData05[0xC];                                       // 0x01B4(0x000C) MISSED OFFSET
	struct FTransform                                  REP_OutputSlotTransform;                                  // 0x01C0(0x0030) (Net, SaveGame, IsPlainOldData)
	class APhysicalItem*                               OwnerPhysicalItem;                                        // 0x01F0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class UPrinterComponent*                           PrinterComponent;                                         // 0x01F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0200(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClickableComponent*                         ClickableComponent;                                       // 0x0208(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData06[0x58];                                      // 0x0210(0x0058) MISSED OFFSET
	class UClass*                                      SelectedBlueprint;                                        // 0x0268(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bOverlapListInitialized;                                  // 0x0270(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0271(0x0007) MISSED OFFSET
	struct FSlotReference                              SelectedOutputSlot;                                       // 0x0278(0x0010) (SaveGame)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0288(0x0004) MISSED OFFSET
	float                                              InitialPrintSlotOffset;                                   // 0x028C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnAnimationStateChanged;                                  // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData09[0xA8];                                      // 0x02A0(0x00A8) MISSED OFFSET
	EBreadboardRecipeListType                          ActiveRecipeListType;                                     // 0x0348(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x02A0(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	unsigned char                                      UnknownData11[0x4];                                       // 0x034C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData12[0x50];                                      // 0x034C(0x0050) UNKNOWN PROPERTY: SetProperty Astro.BreadboardPrinterComponent.PlatformsInRange

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BreadboardPrinterComponent");
		return ptr;
	}


	void ValidatePackageableItemsInRange();
	void UpdateBreadboardPrinter(float DeltaTime);
	void SetRepackageModeEnabled(bool modeEnabled);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void OnRep_OutputSlotTransform();
	void OnRep_AnimationStateChange();
	void OnPrintAreaOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnPrintAreaOverlapBegin(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	struct FSlotReference GetSlotForItemTier(TArray<struct FSlotReference> slots, class APhysicalItem* itemCDO, bool neededSlotTierCanBeOccupied);
	bool GetSelectionEnabled();
	float GetPrintheadHeight();
	float GetPrintheadExtension();
	bool GetPrinterAvailable();
	bool GetPreviewEnabled();
	bool CheckPrinterDeployed();
};


// Class Astro.ButtonComponent
// 0x00F0 (0x07B0 - 0x06C0)
class UButtonComponent : public UPrimitiveComponent
{
public:
	class USkeletalMesh*                               IconMesh;                                                 // 0x06C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 IconMesh_Static;                                          // 0x06C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UAnimationAsset*                             IconAnimation;                                            // 0x06D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SpinIcon;                                                 // 0x06D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               UseToolTip;                                               // 0x06D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x06DA(0x0006) MISSED OFFSET
	struct FString                                     ToolTipText;                                              // 0x06E0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               DoServerClick;                                            // 0x06F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ClientEnableAllowed;                                      // 0x06F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x06F2(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnButtonClicked;                                          // 0x06F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x48];                                      // 0x0708(0x0048) MISSED OFFSET
	EButtonShape                                       Shape;                                                    // 0x0750(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2F];                                      // 0x0751(0x002F) MISSED OFFSET
	class UPrimitiveComponent*                         shellComponent;                                           // 0x0780(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         collisionComponent;                                       // 0x0788(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         Icon;                                                     // 0x0790(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ToolTipScene;                                             // 0x0798(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTextRenderComponent*                        TextRenderer;                                             // 0x07A0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    ShellMaterial;                                            // 0x07A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ButtonComponent");
		return ptr;
	}


	void SetShellComponent(class UPrimitiveComponent* shellComponent);
	void SetFlashing(bool Flashing);
	void SetCollisionComponent(class UPrimitiveComponent* collisionComponent);
	void SetAllShellMaterials(class UMaterialInterface* Material);
	void OnShellReleased(class UPrimitiveComponent* Component, const struct FKey& ButtonPressed);
	void OnShellClick(class UPrimitiveComponent* Component, const struct FKey& ButtonPressed);
	void OnEndHover(class UPrimitiveComponent* Component);
	void OnClick(class UPrimitiveComponent* Component, const struct FKey& ButtonPressed);
	void OnBeginHover(class UPrimitiveComponent* Component);
	bool IsEnabled();
	void Enable(bool Enabled);
	class UMaterialInstanceDynamic* CreateShellDynamicMaterialInstance(int MaterialIndex, class UMaterialInterface* Material);
};


// Class Astro.ButtonInputManagerComponent
// 0x0058 (0x0148 - 0x00F0)
class UButtonInputManagerComponent : public UActorComponent
{
public:
	TMap<int, class UButtonComponent*>                 Buttons;                                                  // 0x00F0(0x0050) (ExportObject, ZeroConstructor, Transient)
	class UInputComponent*                             InputComponent;                                           // 0x0140(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ButtonInputManagerComponent");
		return ptr;
	}


	void PushInputFocus(class APlayerController* Controller);
	void PopInputFocus(class APlayerController* Controller);
	void Confirm();
	void Cancel();
	void AddButton(class UButtonComponent* Button, TEnumAsByte<EButtonInput> InputType);
};


// Class Astro.ButtonNavigationGridComponent
// 0x0040 (0x0130 - 0x00F0)
class UButtonNavigationGridComponent : public UActorComponent
{
public:
	uint32_t                                           InitialSelectedRow;                                       // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	uint32_t                                           InitialSelectedColumn;                                    // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAutoClickAndBounceBack : 1;                              // 0x00F8(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              AnalogThreshold;                                          // 0x00FC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0100(0x0018) MISSED OFFSET
	TArray<class UButtonComponent*>                    Buttons;                                                  // 0x0118(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UInputComponent*                             InputComponent;                                           // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ButtonNavigationGridComponent");
		return ptr;
	}


	void SetSelectedGridCell(int row, int column);
	void SetSelectedButton(class UButtonComponent* Button);
	void ResetGrid(int rows, int columns);
	void PushInputFocus(class APlayerController* Controller);
	void PopInputFocus(class APlayerController* Controller);
	void NavigateUp();
	void NavigateRight();
	void NavigateLeft();
	void NavigateDown();
	void Confirm();
	void AnalogVertical(float Y);
	void AnalogHorizontal(float X);
	void AddButton(class UButtonComponent* Button, int row, int column);
};


// Class Astro.CableExtenderTutorialComponent
// 0x0168 (0x0258 - 0x00F0)
class UCableExtenderTutorialComponent : public UActorComponent
{
public:
	float                                              CableSocketSearchRadius;                                  // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UClass*                                      SocketIndicatorType;                                      // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ExtenderIndicatorType;                                    // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ExtenderItemType;                                         // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCableExtended;                                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCableReleased;                                          // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCableExtenderTutorialComplete;                          // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USphereComponent*                            CollisionSphere;                                          // 0x0140(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TMap<TWeakObjectPtr<class APhysicalItem>, struct FIndicatorCollection> CurrentIndicators;                                        // 0x0148(0x0050) (ZeroConstructor)
	unsigned char                                      UnknownData01[0xC0];                                      // 0x0198(0x00C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CableExtenderTutorialComponent");
		return ptr;
	}


	void StopTutorial();
	void SetupTutorial();
	void SetExtenderTutorialKey(const struct FName& tutorialKey);
	void OnOverlapEnd(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void OnOverlapBegin(class UPrimitiveComponent* OverlappedComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCableTargetReleased(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCablePulled(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableDestroyed(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableConnected(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void CableReleasedEvent__DelegateSignature();
	void CableExtenderTutorialCompleteEvent__DelegateSignature();
	void CableExtendedEvent__DelegateSignature();
};


// Class Astro.CableTutorialComponent
// 0x01E8 (0x02D8 - 0x00F0)
class UCableTutorialComponent : public UActorComponent
{
public:
	struct FTooltipWidgetDisplayData                   GrabTooltipData;                                          // 0x00F0(0x0088) (Edit, BlueprintVisible)
	struct FTooltipWidgetDisplayData                   AttachTooltipData;                                        // 0x0178(0x0088) (Edit, BlueprintVisible)
	struct FTooltipProximityBadgeVisibilityData        TooltipProximityData;                                     // 0x0200(0x0030) (Edit, BlueprintVisible)
	struct FScriptMulticastDelegate                    OnPushCableSlotTooltip;                                   // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPopCableSlotTooltip;                                    // 0x0240(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCableTutorialComplete;                                  // 0x0250(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               CableTutorialIsComplete;                                  // 0x0260(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0261(0x0007) MISSED OFFSET
	TArray<struct FSlotReference>                      ReceiverCableSlots;                                       // 0x0268(0x0010) (ZeroConstructor)
	TArray<struct FSlotReference>                      ProviderCableSlots;                                       // 0x0278(0x0010) (ZeroConstructor)
	class APhysicalItem*                               receiverItem;                                             // 0x0288(0x0008) (ZeroConstructor, IsPlainOldData)
	class APhysicalItem*                               providerItem;                                             // 0x0290(0x0008) (ZeroConstructor, IsPlainOldData)
	class USlotsComponent*                             ReceiverSlotComponent;                                    // 0x0298(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USlotsComponent*                             ProviderSlotComponent;                                    // 0x02A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x02A8(0x0020) MISSED OFFSET
	class UTooltipComponent*                           CurrentGrabTooltipComponent;                              // 0x02C8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           CurrentAttachTooltipComponent;                            // 0x02D0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CableTutorialComponent");
		return ptr;
	}


	void StopCableTutorial();
	void SetupCableTutorial(class APhysicalItem* receiverItem, class APhysicalItem* providerItem, bool completeIfReceiverAlreadyPowered);
	void PushCableSlotTooltip__DelegateSignature(class UTooltipComponent* TooltipComponent, ECableTutorialStep InteractionStep);
	void PopCableSlotTooltip__DelegateSignature(class UTooltipComponent* TooltipComponent);
	void OnReceiverItemSlotted();
	void OnReceiverItemPickedUp(bool physicalMovementOrNewOwner);
	void OnReceiverItemPadSpawned();
	void OnReceiverItemDropped(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void OnProviderItemSlotted();
	void OnProviderItemPickedUp(bool physicalMovementOrNewOwner);
	void OnProviderItemPadSpawned();
	void OnProviderItemDropped(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void OnCablePulled(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableDestroyed(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableConnected(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
};


// Class Astro.CameraFacingManager
// 0x00A0 (0x00C8 - 0x0028)
class UCameraFacingManager : public UObject
{
public:
	unsigned char                                      UnknownData00[0x90];                                      // 0x0028(0x0090) MISSED OFFSET
	TArray<class USceneComponent*>                     SceneComponents;                                          // 0x00B8(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CameraFacingManager");
		return ptr;
	}

};


// Class Astro.CameraFacingWidgetComponent
// 0x0010 (0x0820 - 0x0810)
class UCameraFacingWidgetComponent : public UWidgetComponent
{
public:
	class USceneComponent*                             WorldPositioningAnchor;                                   // 0x0810(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0818(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CameraFacingWidgetComponent");
		return ptr;
	}

};


// Class Astro.ControlPanel
// 0x00D0 (0x0478 - 0x03A8)
class AControlPanel : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnOwnerChanged;                                           // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USkeletalMeshComponent*                      SkeletalMesh;                                             // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x03C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USpotLightComponent*                         ControlPanelLight;                                        // 0x03C8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UCrackableActorComponent*                    CrackableActorComponent;                                  // 0x03D0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClickableComponent*                         ClickableComponent;                                       // 0x03D8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AActor*                                      ControlledActor;                                          // 0x03E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class UControlPanelCameraContext*                  CameraContext;                                            // 0x03E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03F0(0x0008) MISSED OFFSET
	TMap<struct FName, EControlPanelNavigationDirection> NavigationComponentMap;                                   // 0x03F8(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              FirstNavigationRepeatDelay;                               // 0x0448(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NavigationRepetitionInterval;                             // 0x044C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnalogStickNavigationThreshold;                           // 0x0450(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0454(0x001C) MISSED OFFSET
	unsigned char                                      bAutoOptimizeHierarchy : 1;                               // 0x0470(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0471(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlPanel");
		return ptr;
	}


	void OnRep_ControlledActor();
	void OnOwnerItemPickedUpOrUnslotted(bool bUnused);
	void OnNavigationComponentClicked(class UPrimitiveComponent* navigationComponent, const struct FKey& ButtonPressed);
	void OnNavigateUpRepeat();
	void OnNavigateUpDown(float AxisValue);
	void OnNavigateUpBP(class APlayerController* Controller);
	void OnNavigateUp();
	void OnNavigateRightRepeat();
	void OnNavigateRightBP(class APlayerController* Controller);
	void OnNavigateRight();
	void OnNavigateLeftRight(float AxisValue);
	void OnNavigateLeftRepeat();
	void OnNavigateLeftBP(class APlayerController* Controller);
	void OnNavigateLeft();
	void OnNavigateDownRepeat();
	void OnNavigateDownBP(class APlayerController* Controller);
	void OnNavigateDown();
	void OnCrackableActorComponentExaminableChanged();
	void OnControlledActorSet();
	bool OnConfirmBP(class APlayerController* Controller);
	void OnConfirm();
	bool OnCancelBP(class APlayerController* Controller);
	void OnCancel();
	bool IsLocallyControlled();
	bool GetCracked();
	void FullyCrackedOrClosed(class UCrackableActorComponent* CrackableActorComponent, bool bIsCracked);
	void CrackedChanged(class UCrackableActorComponent* CrackableActorComponent, bool bIsCracked);
};


// Class Astro.CatalogModule
// 0x0090 (0x0508 - 0x0478)
class ACatalogModule : public AControlPanel
{
public:
	struct FScriptMulticastDelegate                    OnActiveCatalogEntryChanged;                              // 0x0478(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UItemCatalog*                                ItemCatalog;                                              // 0x0488(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<class UClass*>                              CatalogEntryDisplayTypes;                                 // 0x0490(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UItemCatalogEntryDisplay*>            CatalogEntryDisplays;                                     // 0x04A0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	int                                                ActiveCatalogEntryDisplayIndex;                           // 0x04B0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x04B4(0x0004) MISSED OFFSET
	class UItemCatalogCategoryDefinition*              ActiveCatalogCategory;                                    // 0x04B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                ActiveCatalogEntryIndex;                                  // 0x04C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaximumCatalogEntryScrollSpeed;                           // 0x04C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemVariantType                                   ActiveItemTypeVariantType;                                // 0x04C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x04C9(0x0003) MISSED OFFSET
	int                                                ActiveVariantItemTypeIndex;                               // 0x04CC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	float                                              MaximumVariantItemTypeScrollSpeed;                        // 0x04D0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x04D4(0x0004) MISSED OFFSET
	class UClass*                                      DefaultSelectedItemType;                                  // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UItemCatalogCategoryDefinition*>      CategoryScrollOrder;                                      // 0x04E0(0x0010) (ZeroConstructor)
	class UTooltipComponent*                           TooltipComponent;                                         // 0x04F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      IsCreativeCatalog : 1;                                    // 0x04F8(0x0001) (Edit, BlueprintVisible, EditConst)
	unsigned char                                      UnknownData03[0x7];                                       // 0x04F9(0x0007) MISSED OFFSET
	class UItemCatalogCategoryDefinition*              AllCatalogItemsCategory;                                  // 0x0500(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CatalogModule");
		return ptr;
	}


	void UnlockedItemsChanged(TArray<class UClass*> NewUnlockedItems);
	bool TrySelectItemType(class UClass* ItemTypeToSelect);
	void SetCategoryScrollList(TArray<class UItemCatalogCategoryDefinition*> categoryList);
	bool SetActiveCatalogCategory(class UItemCatalogCategoryDefinition* CategoryDefinition);
	void ScrollVariants(int NumVariantsToScroll);
	void ScrollToVariant(int VariantIndex, EItemVariantType VariantType);
	void ScrollEntries(int NumEntriesToScroll);
	void ResearchPointBalanceChanged(float NewResearchPointBalance);
	void OnUnlockedItemsChanged(TArray<class UClass*> NewUnlockedItems);
	void OnSelectedItemTypeChanged(class UItemType* selectedItemType, bool bImmediate);
	void OnResearchPointBalanceChanged(float NewResearchPointBalance);
	void OnCreativeModeCatalogUnlockedChanged();
	void OnCategoryRight();
	void OnCategoryLeft();
	void KnownItemsChanged(TArray<class UClass*> newKnownItems);
	ESelectedItemUnlockState GetSelectedItemUnlockState();
	class UItemType* GetSelectedItemType();
	class UClass* GetSelectedItemPickupClass();
	void ApplyPendingDisplayChanges();
};


// Class Astro.AstroCharacterCustomizationGlobals
// 0x00B8 (0x00E8 - 0x0030)
class UAstroCharacterCustomizationGlobals : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.Suits
	unsigned char                                      UnknownData01[0x10];                                      // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.VisorMaterials
	unsigned char                                      UnknownData02[0x10];                                      // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.CharacterPalettes
	unsigned char                                      UnknownData03[0x10];                                      // 0x0060(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.CharacterOverlayPatterns
	unsigned char                                      UnknownData04[0x10];                                      // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.Hats
	unsigned char                                      UnknownData05[0x10];                                      // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.Masks
	unsigned char                                      UnknownData06[0x10];                                      // 0x0090(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroCharacterCustomizationGlobals.PhotoFilters
	struct FAstroCharacterCustomization                DefaultCharacterCustomization;                            // 0x00A0(0x0038) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TArray<class UAstroCharacterPalette*>              DefaultCharacterPalettesByPlayerIndex;                    // 0x00D8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterCustomizationGlobals");
		return ptr;
	}

};


// Class Astro.CameraRigActor
// 0x0708 (0x0AB0 - 0x03A8)
class ACameraRigActor : public AActor
{
public:
	float                                              DefaultFieldOfView;                                       // 0x03A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DefaultAspectRatio;                                       // 0x03AC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CollisionRadius;                                          // 0x03B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CollisionRecoveryInterpSpeed;                             // 0x03B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UsePlanetUp;                                              // 0x03B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreMultitoolDistance;                                  // 0x03B9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x03BA(0x0002) MISSED OFFSET
	float                                              SpringFactor;                                             // 0x03BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DampingRatio;                                             // 0x03C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SubstepCount;                                             // 0x03C4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAdoptTransitionSourceView : 1;                           // 0x03C8(0x0001) (Edit)
	unsigned char                                      bDistanceAutolock : 1;                                    // 0x03C8(0x0001) (Edit)
	unsigned char                                      bHorizontalAutolock : 1;                                  // 0x03C8(0x0001) (Edit)
	unsigned char                                      bVerticalAutolock : 1;                                    // 0x03C8(0x0001) (Edit)
	unsigned char                                      AutoTickDisable : 1;                                      // 0x03C8(0x0001) (Edit)
	unsigned char                                      UnknownData01[0xF];                                       // 0x03C9(0x000F) MISSED OFFSET
	class APlayController*                             OwningController;                                         // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UCameraModifierComponent*>            Modifiers;                                                // 0x03E0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData02[0x610];                                     // 0x03F0(0x0610) MISSED OFFSET
	class AActor*                                      ViewTarget;                                               // 0x0A00(0x0008) (ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             ViewSubTarget;                                            // 0x0A08(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCameraComponent*                            ControlledCamera;                                         // 0x0A10(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x80];                                      // 0x0A18(0x0080) MISSED OFFSET
	class AActor*                                      LastNearestSolarBody;                                     // 0x0A98(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0AA0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CameraRigActor");
		return ptr;
	}


	void OnSetView();
	void OnRemoveView();
	struct FVector GetViewTargetUp(class AActor* Target);
	struct FVector GetViewTargetLocation(class AActor* Target);
	struct FMinimalViewInfo GetViewInfo();
	class AActor* GetTarget();
};


// Class Astro.AstroPlatformSpecificCustomizationContent
// 0x0080 (0x00B0 - 0x0030)
class UAstroPlatformSpecificCustomizationContent : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformSuits
	unsigned char                                      UnknownData01[0x10];                                      // 0x0040(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformVisorMaterials
	unsigned char                                      UnknownData02[0x10];                                      // 0x0050(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformCharacterPalettes
	unsigned char                                      UnknownData03[0x10];                                      // 0x0060(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformCharacterOverlayPatterns
	unsigned char                                      UnknownData04[0x10];                                      // 0x0070(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformHats
	unsigned char                                      UnknownData05[0x10];                                      // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformMasks
	unsigned char                                      UnknownData06[0x10];                                      // 0x0090(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.AstroPlatformSpecificCustomizationContent.PlatformPhotoFilters
	TArray<struct FPlatformSpecificEmoteOverrides>     PlatformSuitEmoteOverrides;                               // 0x00A0(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPlatformSpecificCustomizationContent");
		return ptr;
	}

};


// Class Astro.AstroCustomizationItem
// 0x00C0 (0x00F0 - 0x0030)
class UAstroCustomizationItem : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	ECharacterCustomizationVisibility                  DisplayVisibility;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FText                                       UnlockConditionText;                                      // 0x0050(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      IsNonAchievementUnlock : 1;                               // 0x0068(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x28];                                      // 0x0069(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCustomizationItem.TileBackgroundTexture
	unsigned char                                      UnknownData03[0x28];                                      // 0x0098(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCustomizationItem.TileIconTexture
	unsigned char                                      UnknownData04[0x28];                                      // 0x00C0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCustomizationItem.TileItemTexture
	EMicroTxnStoreTileTypes                            TileType;                                                 // 0x00E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCustomizationItem");
		return ptr;
	}

};


// Class Astro.AstroCustomizationBPL
// 0x0000 (0x0028 - 0x0028)
class UAstroCustomizationBPL : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCustomizationBPL");
		return ptr;
	}


	class UAstroCustomizationItem* STATIC_LoadCustomizationItemFromPath(class UObject* WorldContextObject, const struct FString& ItemPath);
};


// Class Astro.AstroCharacterHat
// 0x0088 (0x0178 - 0x00F0)
class UAstroCharacterHat : public UAstroCustomizationItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCharacterHat.StaticMesh
	class UMaterialInstanceConstant*                   MaterialOverride;                                         // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TMap<class UAstroCharacterSuit*, struct FCharacterHatPerSuitModifiers> SuitSpecificModifiers;                                    // 0x0120(0x0050) (Edit, ZeroConstructor)
	unsigned char                                      AcceptSuitColors : 1;                                     // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      AcceptSuitMaterial : 1;                                   // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	ECharacterHatCategory                              HatCategory;                                              // 0x0171(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0172(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterHat");
		return ptr;
	}


	struct FCharacterHatPerSuitModifiers GetHatModifierForSuit(class UAstroCharacterSuit* Suit, bool allowSuitSpecificOverrides);
	void STATIC_ApplyToMesh(class UStaticMeshComponent* targetMesh, class UAstroCharacterSuit* Suit, class UAstroCharacterHat* hatDef, class UAstroCharacterPalette* Palette);
};


// Class Astro.AstroVisorMaterial
// 0x0068 (0x0158 - 0x00F0)
class UAstroVisorMaterial : public UAstroCustomizationItem
{
public:
	class UMaterialInterface*                          VisorMaterialInstance;                                    // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FLinearColor                                visorColor;                                               // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	TMap<class UAstroCharacterSuit*, class UMaterialInterface*> SuitSpecificMaterialOverrides;                            // 0x0108(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroVisorMaterial");
		return ptr;
	}


	class UMaterialInterface* GetMaterialInstanceForSuit(class UAstroCharacterSuit* Suit);
};


// Class Astro.AstroCharacterOverlayPattern
// 0x0010 (0x0100 - 0x00F0)
class UAstroCharacterOverlayPattern : public UAstroCustomizationItem
{
public:
	float                                              TileFactor;                                               // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UTexture2D*                                  PatternTexture;                                           // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterOverlayPattern");
		return ptr;
	}

};


// Class Astro.AstroCharacterSuit
// 0x0060 (0x0150 - 0x00F0)
class UAstroCharacterSuit : public UAstroCustomizationItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCharacterSuit.SkeletalMesh
	class UClass*                                      AnimationBlueprintType;                                   // 0x0118(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TitleDummyAnimationBlueprintType;                         // 0x0120(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0128(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCharacterSuit.PointMontage

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterSuit");
		return ptr;
	}

};


// Class Astro.ChargeUseComponent
// 0x0038 (0x0128 - 0x00F0)
class UChargeUseComponent : public UActorComponent
{
public:
	float                                              DischargeRate;                                            // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               canUse;                                                   // 0x00F4(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               Usable;                                                   // 0x00F5(0x0001) (Edit, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               Discharging;                                              // 0x00F6(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x00F7(0x0001) MISSED OFFSET
	float                                              DischargeProgress;                                        // 0x00F8(0x0004) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDischarged;                                             // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStateUpdate;                                            // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UPowerComponent*                             PowerComponent;                                           // 0x0120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ChargeUseComponent");
		return ptr;
	}


	void UseCharge();
	void UpdateCanUse();
	void SetUsable(bool newUsable);
	void OnRep_State();
};


// Class Astro.CheatPlinthBase
// 0x0030 (0x0690 - 0x0660)
class ACheatPlinthBase : public APhysicalItem
{
public:
	class UItemList*                                   SpawnableItems;                                           // 0x0660(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SelectionIndex;                                           // 0x0668(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x066C(0x0004) MISSED OFFSET
	class UClass*                                      CurrentlySelectedItemType;                                // 0x0670(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCurrentlySelectedItemChanged;                           // 0x0678(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0688(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CheatPlinthBase");
		return ptr;
	}


	void OnRep_SelectionIndex();
	void IncrementSelectionIndex();
	class UClass* GetCurrentlySelectedItemType();
	void DecrementSelectionIndex();
};


// Class Astro.CustomChildActorComponent
// 0x0000 (0x02E0 - 0x02E0)
class UCustomChildActorComponent : public UChildActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CustomChildActorComponent");
		return ptr;
	}

};


// Class Astro.ChildBiomeComponent
// 0x0010 (0x02F0 - 0x02E0)
class UChildBiomeComponent : public UCustomChildActorComponent
{
public:
	class UClass*                                      ChildBiomeClass;                                          // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x02E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ChildBiomeComponent");
		return ptr;
	}


	class ABiomeActor* GetChildBiome();
};


// Class Astro.ChildPhysicalItemComponent
// 0x0010 (0x02F0 - 0x02E0)
class UChildPhysicalItemComponent : public UCustomChildActorComponent
{
public:
	class UClass*                                      ChildMovableItemClass;                                    // 0x02E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EPhysicalItemTerrainMode                           TerrainMode;                                              // 0x02E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ChildPhysicalItemComponent");
		return ptr;
	}


	class APhysicalItem* GetChildPhysicalItem();
};


// Class Astro.ChildSlotComponent
// 0x0050 (0x0330 - 0x02E0)
class UChildSlotComponent : public UCustomChildActorComponent
{
public:
	class UClass*                                      ChildSlotClass;                                           // 0x02E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      SlottableItemsFiltrationList;                             // 0x02E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESlottableItemsFiltrationListBehavior              SlottableItemsFiltrationListBehavior;                     // 0x02F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               LockSlot;                                                 // 0x02F1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SlotVisible;                                              // 0x02F2(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Unclickable;                                              // 0x02F3(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Breakable;                                                // 0x02F4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ConnectionPullAllowed;                                    // 0x02F5(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HideConnectorOnPull;                                      // 0x02F6(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               GeneratesNoCollision;                                     // 0x02F7(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               WeldItems;                                                // 0x02F8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EAuxSlotType                                       AuxSlotType;                                              // 0x02F9(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ESlotConnectorType                                 ConnectorType;                                            // 0x02FA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	ESlotConfiguration                                 Configuration;                                            // 0x02FB(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsStorage;                                                // 0x02FC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsTruck;                                                  // 0x02FD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AllowBodySlotAttach;                                      // 0x02FE(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x02FF(0x0001) MISSED OFFSET
	class UClass*                                      StartingItemType;                                         // 0x0300(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StartingPhysicalItemType;                                 // 0x0308(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StartingItemList;                                         // 0x0310(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StartingActorList;                                        // 0x0318(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      StartingRewardSelection;                                  // 0x0320(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSpawnStartingPhysicalItemPackaged;                       // 0x0328(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0329(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ChildSlotComponent");
		return ptr;
	}


	void SetChildSlotClass(class UClass* InClass);
	struct FSlotReference MakeReference();
};


// Class Astro.ClickableComponent
// 0x00B8 (0x01A8 - 0x00F0)
class UClickableComponent : public UActorComponent
{
public:
	class USceneComponent*                             PositioningComponent;                                     // 0x00F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              PrimaryIndicatorScale;                                    // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UStaticMesh*                                 PrimaryIndicatorMesh;                                     // 0x0100(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PrimaryHoverHeight;                                       // 0x0108(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SecondaryIndicatorScale;                                  // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 SecondaryIndicatorMesh;                                   // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               BackpackInteraction;                                      // 0x0118(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShowPrimaryIndicator;                                     // 0x0119(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ShowPrimaryIcon;                                          // 0x011A(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CaptureDeformTool;                                        // 0x011B(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               EncapsulateChildren;                                      // 0x011C(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               DisablePrimitiveClicks;                                   // 0x011D(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ReplaceChildren;                                          // 0x011E(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AllowNonOwnerClicks;                                      // 0x011F(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               LocalPrimitiveClicksOnly;                                 // 0x0120(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CaptureViewActor;                                         // 0x0121(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UnencapsulateChildren;                                    // 0x0122(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	bool                                               Unclickable;                                              // 0x0123(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               NoGamepadAutoselect;                                      // 0x0124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Unmovable;                                                // 0x0125(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0126(0x0002) MISSED OFFSET
	float                                              SecondaryInteractionTime;                                 // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bSlowVirtualCursorOnHover : 1;                            // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bExcludeNonInteractPrimitivesFromGamepadAutoFocus : 1;    // 0x012C(0x0001) (Edit)
	unsigned char                                      HasUseInteractionByDefault : 1;                           // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      HasAuxSlotUseByDefault : 1;                               // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      HasActuatorUseByDefault : 1;                              // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      HasUseWhilePlayerDriving : 1;                             // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      HasInfoOnlyTooltipWhilePlayerDriving : 1;                 // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UseActionRequriesHold : 1;                                // 0x012C(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bUseOverridePivotOffset : 1;                              // 0x012D(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData02[0x2];                                       // 0x012E(0x0002) MISSED OFFSET
	struct FVector2D                                   InteractionWidgetPivot;                                   // 0x0130(0x0008) (Edit, BlueprintVisible, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnQueryClickable;                                         // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUseStateChanged;                                        // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUseContextChanged;                                      // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EUseContext                                        DefaultUseContext;                                        // 0x0168(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0169(0x0007) MISSED OFFSET
	struct FUseSuppressionState                        UseSuppressionState;                                      // 0x0170(0x0018) (Net)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0188(0x0010) MISSED OFFSET
	struct FInteractionRedirect                        InteractionRedirect;                                      // 0x0198(0x0010)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ClickableComponent");
		return ptr;
	}


	void SetInteractionRedirectActor(class AActor* Actor, class USceneComponent* PivotComponent);
	void SetActiveUseContext(EUseContext NewUseContext);
	void PushUseSuppression_AuthorityOnly(const struct FName& SuppressionId, EUseType useTypeFlags);
	void PushOrPopUseSuppression_AuthorityOnly(const struct FName& SuppressionId, bool shouldSuppress, EUseType useTypeFlags);
	void PopUseSuppression_AuthorityOnly(const struct FName& SuppressionId);
	void OnRep_UseSuppressionState();
	bool HasInteractionRedirect();
	bool GetUseCapability(EUseType useType);
	bool GetUseAvailability(class APlayerController* Instigator, EUseType useType);
	class USceneComponent* GetPositionComponent();
	class USceneComponent* STATIC_GetActorClickableOrRoot(class AActor* Actor);
	class UClickableComponent* STATIC_GetActorClickableOrDefault(class AActor* Actor);
	EUseContext GetActiveUseContext();
	class UClickableComponent* STATIC_ActorClickable(class AActor* Actor);
};


// Class Astro.ClickableParentProxy
// 0x0008 (0x00F8 - 0x00F0)
class UClickableParentProxy : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ClickableParentProxy");
		return ptr;
	}

};


// Class Astro.ClickQuery
// 0x0138 (0x0160 - 0x0028)
class UClickQuery : public UObject
{
public:
	struct FClickParams                                params;                                                   // 0x0028(0x00A8) (BlueprintVisible)
	struct FClickResult                                Result;                                                   // 0x00D0(0x0080) (BlueprintVisible)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0150(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ClickQuery");
		return ptr;
	}


	void SetResultTertiary(class AActor* Actor, class AActor* ViewActor, EClickBehavior Behavior);
	bool SetResultStorage(class UStorageChassisComponent* storage, const struct FSlotReference& PrimarySlot);
	bool SetResultSlotPrimaryAsConnectionOnly(const struct FSlotReference& Slot);
	bool SetResultSlotPrimary(const struct FSlotReference& Slot, bool Replace);
	void SetResultSecondary(class AActor* Actor, class AActor* ViewActor, EClickBehavior Behavior);
	void SetResultPrimary(class AActor* Actor, class AActor* ViewActor, EClickBehavior Behavior);
	void SetResultComponentPrimary(class UPrimitiveComponent* Component);
	void ResetPrimaryClickResult();
	void ResetClickResultExceptForSecondary(class AActor* Actor);
	void ResetClickResultExceptForHoverComponent();
	void ResetClickResult();
	struct FSlotReference QueryCameraFacingSlotFromArray(class AActor* Actor, TArray<struct FSlotReference> slots);
	bool HavePrimaryResult();
	class AActor* GetSecondaryActor();
	struct FSlotReference GetPrimarySlot();
	class UPrimitiveComponent* GetPrimaryComponent();
	class AActor* GetPrimaryActor();
	class AActor* GetInteractingActor();
	class UPrimitiveComponent* GetHitComponent();
	class AActor* GetHitActor();
	class APlayController* GetController();
	class AActor* GetClickActor();
	class UClickQuery* STATIC_ClickQuery();
};


// Class Astro.CollectibleHandler
// 0x0548 (0x0570 - 0x0028)
class UCollectibleHandler : public UObject
{
public:
	class AActor*                                      RenderActor;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FCollectibleSimItem>                 SimItems;                                                 // 0x0030(0x0010) (ZeroConstructor, Transient)
	TArray<int>                                        SimFlags;                                                 // 0x0040(0x0010) (ZeroConstructor, Transient)
	TArray<struct FCollectibleSimItem>                 RetireQueue;                                              // 0x0050(0x0010) (ZeroConstructor, Transient)
	TMap<class UClass*, class AActor*>                 CachedActors;                                             // 0x0060(0x0050) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData00[0x4C0];                                     // 0x00B0(0x04C0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CollectibleHandler");
		return ptr;
	}

};


// Class Astro.ComponentDelegateWrapper
// 0x0098 (0x00C0 - 0x0028)
class UComponentDelegateWrapper : public UObject
{
public:
	unsigned char                                      UnknownData00[0x98];                                      // 0x0028(0x0098) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ComponentDelegateWrapper");
		return ptr;
	}


	void OnComponentHit(class UPrimitiveComponent* ThisComp, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void OnActorClick(class AActor* Actor, const struct FKey& Key);
};


// Class Astro.ConnectedDistribution
// 0x0090 (0x1700 - 0x1670)
class UConnectedDistribution : public UTerrainPlacementComponent
{
public:
	int                                                Count;                                                    // 0x1670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActorSeparation;                                          // 0x1674(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TestActor;                                                // 0x1678(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FCaveActorSpecifier                         CaveEndCollections;                                       // 0x1680(0x0028) (Edit)
	EWorldOrientation                                  ActorOrientation;                                         // 0x16A8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x16A9(0x0003) MISSED OFFSET
	float                                              CaveIntensity;                                            // 0x16AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Incline;                                                  // 0x16B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WalkVariation;                                            // 0x16B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               FollowHeight;                                             // 0x16B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x16B9(0x0007) MISSED OFFSET
	TArray<struct FCaveActorSpecifier>                 Actors;                                                   // 0x16C0(0x0010) (Edit, ZeroConstructor)
	TArray<class AActor*>                              m_templates;                                              // 0x16D0(0x0010) (ZeroConstructor)
	TArray<class AActor*>                              m_archetypes;                                             // 0x16E0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData02[0x10];                                      // 0x16F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ConnectedDistribution");
		return ptr;
	}

};


// Class Astro.ControlActivatorComponent
// 0x0020 (0x0110 - 0x00F0)
class UControlActivatorComponent : public UActorComponent
{
public:
	class UControlComponent*                           ActiveControl;                                            // 0x00F0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      ControlledToolActor;                                      // 0x00F8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class AActor*                                      PassengerToolActor;                                       // 0x0100(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	bool                                               ChangedControlActor;                                      // 0x0108(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0109(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlActivatorComponent");
		return ptr;
	}


	void OnRep_ControlledToolActor(class AActor* oldActor);
};


// Class Astro.ControlComponent
// 0x01C0 (0x02B0 - 0x00F0)
class UControlComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnMove;                                                   // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 PlayerActivation;                                         // 0x0100(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	class UActivation*                                 UsingActivation;                                          // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	bool                                               IsTool;                                                   // 0x0110(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               PassToolToParent;                                         // 0x0111(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0112(0x0002) MISSED OFFSET
	float                                              ToolMaxDistance;                                          // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAppliesToolTierOverride;                                 // 0x0118(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0119(0x0003) MISSED OFFSET
	int                                                ToolTierOverride;                                         // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EMultitoolMode                                     MultiToolMode;                                            // 0x0120(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OnlyTraceTerrain;                                         // 0x0121(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AttachPing;                                               // 0x0122(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0123(0x0005) MISSED OFFSET
	class USceneComponent*                             WidgetComponent;                                          // 0x0128(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    ControlSwitch;                                            // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    SymbolEvent;                                              // 0x0140(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ToolClickQuery;                                           // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReceiveToolLocation;                                    // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ToolTick;                                                 // 0x0170(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ToolMultitoolLocation;                                    // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    ToolDoInteraction;                                        // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FSlotReference                              OutSlot;                                                  // 0x01A0(0x0010) (BlueprintVisible)
	TArray<struct FSlotReference>                      ChildToolSlots;                                           // 0x01B0(0x0010) (BlueprintVisible, ZeroConstructor)
	class AActor*                                      AttachOwner;                                              // 0x01C0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class UControlSymbol*>                      EnabledControlSymbols;                                    // 0x01C8(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TMap<class UObject*, class UControlSymbolEvents*>  ControlSymbolEvents;                                      // 0x01D8(0x0050) (ZeroConstructor)
	TMap<class UObject*, class UControlComponent*>     CollectedControls;                                        // 0x0228(0x0050) (ExportObject, ZeroConstructor)
	TArray<class AActor*>                              PingingActors;                                            // 0x0278(0x0010) (ZeroConstructor)
	class UControlComponent*                           controlOwner;                                             // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0290(0x0008) MISSED OFFSET
	class APlayerController*                           LastController;                                           // 0x0298(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x10];                                      // 0x02A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlComponent");
		return ptr;
	}


	void SetMoveInputs(class APlayerController* Controller, const struct FVector& Direction);
	void SetControlOwner(class UControlComponent* controlOwner);
	void PingSymbol(class UClass* Symbol);
	void STATIC_PingObjectSymbolAtLocation(class UObject* WorldContextObject, class UControlSymbol* Symbol, const struct FTransform& symbolTransform);
	void PingObjectSymbol(class UControlSymbol* Symbol);
	void OnChildToolSlotRelease(class APhysicalItem* Item);
	void OnChildToolSlotAdd(class APhysicalItem* Item);
	void OnActivateChange(bool Enable);
	bool IsPlayerActivated();
	bool IsActivated();
	class UControlSymbolEvents* GetObjectControlSymbolEvents(class UControlSymbol* Symbol);
	class UControlComponent* GetMovementTarget();
	class UControlSymbolEvents* GetControlSymbolEvents(class UClass* Symbol);
	class UControlComponent* STATIC_GetActorControlComponent(class AActor* Actor);
	class UControlComponent* GetActiveControl();
	void FireSymbolEvent(class UClass* Symbol);
	void FireObjectSymbolEvent(class UControlSymbol* Symbol);
	class UControlSymbolEvents* EnableObjectControlSymbol(class UControlSymbol* Symbol, bool Enable);
	class UControlSymbolEvents* EnableControlSymbol(class UClass* Symbol, bool Enable);
};


// Class Astro.ControlledVehicleMovement
// 0x0040 (0x0130 - 0x00F0)
class UControlledVehicleMovement : public UActorComponent
{
public:
	float                                              MovingValue;                                              // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              TargetMovingValue;                                        // 0x00F4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               DoNotBindInputToControlComponent;                         // 0x00F8(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F9(0x0003) MISSED OFFSET
	float                                              RawThrottleValue;                                         // 0x00FC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0100(0x0004) MISSED OFFSET
	unsigned char                                      bAuthoritativeEnabled : 1;                                // 0x0104(0x0001) (Net, Transient)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0105(0x0003) MISSED OFFSET
	bool                                               bEnabled;                                                 // 0x0108(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	bool                                               bPhysicsEnabledCached;                                    // 0x0109(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x010A(0x0006) MISSED OFFSET
	class UWheeledChassisComponent*                    WheeledChassis;                                           // 0x0110(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UPowerComponent*>                     PowerComponents;                                          // 0x0118(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlledVehicleMovement");
		return ptr;
	}


	void SetControlled(bool IsControlled);
	void SetAuthorityControlled(bool IsControlled);
	void OnUnmanned();
	void OnMove(class APlayerController* Controller, const struct FVector& Direction);
};


// Class Astro.ControlPanelCameraContext
// 0x0000 (0x0048 - 0x0048)
class UControlPanelCameraContext : public UCameraContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlPanelCameraContext");
		return ptr;
	}

};


// Class Astro.ControlPanelButton
// 0x0058 (0x0400 - 0x03A8)
class AControlPanelButton : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnButtonPressed;                                          // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonArmedChanged;                                     // 0x03B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonHoveredChanged;                                   // 0x03C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonCoverHoveredChanged;                              // 0x03D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonEnabledChanged;                                   // 0x03E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bHasCover : 1;                                            // 0x03F8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCloseCoverOnUnHover : 1;                                 // 0x03F8(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bCoverOpenedWhenEnabled : 1;                              // 0x03F8(0x0001) (Edit, DisableEditOnInstance)
	bool                                               bButtonEnabled;                                           // 0x03F9(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bButtonArmed;                                             // 0x03FA(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x03FB(0x0005) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlPanelButton");
		return ptr;
	}


	void SetButtonEnabled(bool Enabled);
	void SetButtonArmed(bool Armed);
	bool GetButtonEnabled();
	bool GetButtonArmed();
	void DoUnHoverButton();
	void DoHoverButton();
	void DoButtonPress();
};


// Class Astro.ControlPanelButtonChildActorComponent
// 0x0030 (0x0310 - 0x02E0)
class UControlPanelButtonChildActorComponent : public UCustomChildActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnButtonPressed;                                          // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnButtonArmedChanged;                                     // 0x02F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UClass*                                      ChildButtonClass;                                         // 0x0300(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AControlPanelButton*                         ButtonActor;                                              // 0x0308(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlPanelButtonChildActorComponent");
		return ptr;
	}


	void SpoofButtonPress();
	void SetEnabled(bool Enabled);
	void RerouteOnPressed();
	void RerouteOnArmedChanged(bool IsArmed);
	bool GetEnabled();
	bool GetArmed();
};


// Class Astro.ControlPanelItemComponent
// 0x0010 (0x0100 - 0x00F0)
class UControlPanelItemComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnControlPanelAvailable;                                  // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlPanelItemComponent");
		return ptr;
	}

};


// Class Astro.ItemSlot
// 0x0088 (0x0430 - 0x03A8)
class AItemSlot : public AActor
{
public:
	ESlotType                                          SlotType;                                                 // 0x03A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03A9(0x0007) MISSED OFFSET
	class UClass*                                      BaseClassType;                                            // 0x03B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              Behaviors;                                                // 0x03B8(0x0010) (Edit, ZeroConstructor)
	class USubslot*                                    Subslot;                                                  // 0x03C8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ConnectionClass;                                          // 0x03D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               SingleConnection;                                         // 0x03D8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ItemBlocksConnection;                                     // 0x03D9(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ConnectionTense;                                          // 0x03DA(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PowerIncomingOnly;                                        // 0x03DB(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               StreamingPowerConnectionsMergePowerNodes;                 // 0x03DC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CanAcceptUnslottableItems;                                // 0x03DD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsTrailerHitch;                                           // 0x03DE(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x03DF(0x0001) MISSED OFFSET
	int                                                SlotTier;                                                 // 0x03E0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SlotTierCount;                                            // 0x03E4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CanHoldItem;                                              // 0x03E8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET
	class UClickableComponent*                         ClickableComponent;                                       // 0x03F0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	bool                                               CanAcceptItems;                                           // 0x03F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x03F9(0x0007) MISSED OFFSET
	struct FString                                     HoverSoundEvent;                                          // 0x0400(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     AttachSoundEvent;                                         // 0x0410(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     DetachSoundEvent;                                         // 0x0420(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemSlot");
		return ptr;
	}


	void OnItemSet(class APhysicalItem* LastItem, class APhysicalItem* NewItem);
	void OnItemReleased(class APhysicalItem* LastItem);
	void OnConnectionDestroyed(class UChildSlotComponent* Other, bool IsSource);
	void OnConnectionBuilt(class ASlotConnection* Connection, bool IsSource);
	void OnBuildingConnection(class ASlotConnection* Connection);
	bool AcceptsItem(class APhysicalItem* Item);
};


// Class Astro.ControlSlot
// 0x0000 (0x0430 - 0x0430)
class AControlSlot : public AItemSlot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlSlot");
		return ptr;
	}

};


// Class Astro.ControlSwitchComponent
// 0x0048 (0x0138 - 0x00F0)
class UControlSwitchComponent : public UActorComponent
{
public:
	TArray<class UChildActorComponent*>                ControlButtons;                                           // 0x00F0(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<struct FSlotReference>                      slots;                                                    // 0x0100(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FSlotReference                              ActiveControlSlot;                                        // 0x0110(0x0010) (BlueprintVisible, BlueprintReadOnly)
	int                                                ActiveControlIndex;                                       // 0x0120(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	TArray<class UComponentDelegateWrapper*>           ClickDelegates;                                           // 0x0128(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlSwitchComponent");
		return ptr;
	}


	void SetControlledSlot(int Index);
	void OnSwitchClicked(class USceneComponent* Component);
};


// Class Astro.ControlSymbol
// 0x0080 (0x00A8 - 0x0028)
class UControlSymbol : public UObject
{
public:
	struct FText                                       Name;                                                     // 0x0028(0x0018) (Edit, BlueprintVisible)
	struct FText                                       AllCapsName;                                              // 0x0040(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	struct FText                                       TooltipSubtitle;                                          // 0x0058(0x0018) (Edit)
	struct FText                                       Description;                                              // 0x0070(0x0018) (Edit, BlueprintVisible)
	class UStaticMesh*                                 IconMesh;                                                 // 0x0088(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ResourceInfoType;                                         // 0x0090(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FString                                     SoundEvent;                                               // 0x0098(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlSymbol");
		return ptr;
	}


	class UStaticMesh* STATIC_GetControlSymbolClassIconMesh(class UClass* Symbol);
	void ApplyToIconActor(class AActor* Actor);
};


// Class Astro.ControlSymbolEvents
// 0x0030 (0x0058 - 0x0028)
class UControlSymbolEvents : public UObject
{
public:
	struct FScriptMulticastDelegate                    Fired;                                                    // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 Activation;                                               // 0x0038(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UControlSymbol*                              Symbol;                                                   // 0x0040(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UControlComponent*                           Control;                                                  // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      Widget;                                                   // 0x0050(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ControlSymbolEvents");
		return ptr;
	}


	void DoFiredFromClick(class UPrimitiveComponent* Component, const struct FKey& Key);
	void DoFired(class UControlSymbol* FiredSymbol);
	void BindPrimitiveClicked(class UPrimitiveComponent* Primitive);
};


// Class Astro.Crackable
// 0x00D0 (0x0380 - 0x02B0)
class UCrackable : public USceneComponent
{
public:
	struct FScriptMulticastDelegate                    OnCracked;                                                // 0x02B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnClosed;                                                 // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFullyCracked;                                           // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFullyClosed;                                            // 0x02E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	ECrackableMethod                                   Method;                                                   // 0x02F0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseSimulatingForOrigin;                                   // 0x02F1(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x02F2(0x0002) MISSED OFFSET
	float                                              CrackingSpeed;                                            // 0x02F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ScreenScaleRatio;                                         // 0x02F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CameraSpaceOffset;                                        // 0x02FC(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	bool                                               ClickToCrack;                                             // 0x0308(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0309(0x0003) MISSED OFFSET
	float                                              HoverHeight;                                              // 0x030C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HideWhenFullyCracked;                                     // 0x0310(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AddCameraTargetOffset;                                    // 0x0311(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0312(0x0002) MISSED OFFSET
	float                                              HideThreshold;                                            // 0x0314(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PivotAngle;                                               // 0x0318(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               cracked;                                                  // 0x031C(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x031D(0x0003) MISSED OFFSET
	float                                              TargetCrackedValue;                                       // 0x0320(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrackedValue;                                             // 0x0324(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CameraCollisionOffset;                                    // 0x0328(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CameraCollisionSize;                                      // 0x032C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bShowCollisionDebug : 1;                                  // 0x0330(0x0001) (Edit)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0331(0x0007) MISSED OFFSET
	class USceneComponent*                             Origin;                                                   // 0x0338(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UPrimitiveComponent*>                 Primitives;                                               // 0x0340(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UCrackable*>                          Children;                                                 // 0x0350(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UChildActorComponent*>                ChildActors;                                              // 0x0360(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData05[0x10];                                      // 0x0370(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Crackable");
		return ptr;
	}


	void ToggleCracked();
	void SetCracked(bool cracked);
	void OnMoved(bool FromTool);
	void OnComponentClicked(class UPrimitiveComponent* Component, const struct FKey& Key);
	void OnClickUnhandled();
	void AddChildActor(class UChildActorComponent* ChildActor);
	void AddChild(class UCrackable* Child);
};


// Class Astro.CrackableActorComponent
// 0x0120 (0x0210 - 0x00F0)
class UCrackableActorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnCrackedChanged;                                         // 0x00F0(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFullyCrackedOrClosed;                                   // 0x0100(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnExaminableChanged;                                      // 0x0110(0x0010) (ZeroConstructor, Transient, InstancedReference, BlueprintAssignable)
	float                                              CrackingSpeed;                                            // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECrackableActorMethod                              Method;                                                   // 0x0124(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	struct FComponentReference                         CrackedOrientationComponent;                              // 0x0128(0x0018) (Edit)
	struct FString                                     OpenSoundEvent;                                           // 0x0140(0x0010) (Edit, ZeroConstructor)
	struct FString                                     CloseSoundEvent;                                          // 0x0150(0x0010) (Edit, ZeroConstructor)
	ECrackableActorNetworkingPolicy                    NetworkingPolicy;                                         // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bEncapsulateClicksWhenClosed : 1;                         // 0x0161(0x0001) (Edit)
	unsigned char                                      bDisableComponentClicksWhenClosed : 1;                    // 0x0161(0x0001) (Edit)
	struct FCrackedReplicationData                     ReplicationData;                                          // 0x0162(0x0001) (Net)
	unsigned char                                      bCracked : 1;                                             // 0x0163(0x0001)
	unsigned char                                      UnknownData01 : 1;                                        // 0x0163(0x0001)
	unsigned char                                      bClickToClose : 1;                                        // 0x0163(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCloseOnUnhandledClick : 1;                               // 0x0163(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      bCloseWhenParentCrackableStateChanges : 1;                // 0x0163(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bExaminable : 1;                                          // 0x0163(0x0001) (Edit)
	unsigned char                                      bCracksOnlyOnExamine : 1;                                 // 0x0163(0x0001) (Edit)
	float                                              ClientScaleWhenCracked;                                   // 0x0164(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScreenScaleRatio;                                         // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CameraSpaceOffset;                                        // 0x016C(0x000C) (Edit, IsPlainOldData)
	float                                              HoverHeight;                                              // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HideThreshold;                                            // 0x017C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PivotAngle;                                               // 0x0180(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xC];                                       // 0x0184(0x000C) MISSED OFFSET
	struct FTransform                                  StartingRelativeTransform;                                // 0x0190(0x0030) (Net, IsPlainOldData)
	unsigned char                                      UnknownData03[0x50];                                      // 0x01C0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CrackableActorComponent");
		return ptr;
	}


	void SetCracked(bool cracked);
	void SetClosedRelativeTransform(const struct FTransform& ClosedRelativeTransform);
	void OnRep_StartingRelativeTransform();
	void OnRep_Cracked();
	void OnParentCrackedChanged(class UCrackableActorComponent* parentCrackableActorComponent, bool bParentCracked);
	void OnClickUnhandled();
	bool IsExaminable();
	bool GetFullyOpen();
	bool GetFullyClosed();
	bool GetCracked();
	struct FTransform GetClosedRelativeTransform();
	bool CracksOnlyOnExamine();
	bool CanClickToClose();
};


// Class Astro.CrackedActivationComponent
// 0x0010 (0x0100 - 0x00F0)
class UCrackedActivationComponent : public UActorComponent
{
public:
	class UActivation*                                 Activation;                                               // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrackedValue;                                             // 0x00F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CrackedActivationComponent");
		return ptr;
	}


	void OnCracked();
	void OnClosed();
	class UCrackedActivationComponent* STATIC_ActorCrackedActivationComponent(class AActor* Actor);
};


// Class Astro.CraftingDependencyMapList
// 0x0010 (0x0040 - 0x0030)
class UCraftingDependencyMapList : public UDataAsset
{
public:
	TArray<struct FCraftingOriginDependencyMap>        Dependencies;                                             // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CraftingDependencyMapList");
		return ptr;
	}

};


// Class Astro.CraftingInputWhitelistOrganizationRule
// 0x0018 (0x0088 - 0x0070)
class UCraftingInputWhitelistOrganizationRule : public USlotOrganizationRule
{
public:
	class UClass*                                      CraftingOutputItemList;                                   // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              Whitelist;                                                // 0x0078(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CraftingInputWhitelistOrganizationRule");
		return ptr;
	}

};


// Class Astro.CreativeModeData
// 0x0158 (0x0180 - 0x0028)
class UCreativeModeData : public UObject
{
public:
	struct FCreativeModeTerrainData                    TerrainData;                                              // 0x0028(0x00A0)
	TArray<class ULodAnchorComponent*>                 LodAnchorComponents;                                      // 0x00C8(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x78];                                      // 0x00D8(0x0078) MISSED OFFSET
	struct FVector                                     PlayerRefPos;                                             // 0x0150(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x015C(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CreativeModeData");
		return ptr;
	}


	struct FString GetTerrainPaintStatus();
};


// Class Astro.CrystalRefineryModuleComponent
// 0x0030 (0x0120 - 0x00F0)
class UCrystalRefineryModuleComponent : public UActorComponent
{
public:
	TArray<struct FSlotReference>                      InputSlots;                                               // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FSlotReference>                      OutputSlots;                                              // 0x0100(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	class UClass*                                      InputItemType;                                            // 0x0110(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      OutputItemType;                                           // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CrystalRefineryModuleComponent");
		return ptr;
	}


	void UpdateIndicators();
	bool CanPerformConversion();
};


// Class Astro.CursorMarginControlModifierComponent
// 0x0028 (0x0150 - 0x0128)
class UCursorMarginControlModifierComponent : public UCameraModifierComponent
{
public:
	ECameraDOF                                         ControlledDOF;                                            // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bInverted : 1;                                            // 0x0129(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	float                                              LeftMargin;                                               // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RightMargin;                                              // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TopMargin;                                                // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BottomMargin;                                             // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxTargetValue;                                           // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinTargetValue;                                           // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECameraControlMask                                 ControlMask;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CursorMarginControlModifierComponent");
		return ptr;
	}

};


// Class Astro.CustomCameraRigComponent
// 0x0030 (0x0120 - 0x00F0)
class UCustomCameraRigComponent : public UActorComponent
{
public:
	TArray<struct FCameraMode>                         CameraModes;                                              // 0x00F0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0100(0x0008) MISSED OFFSET
	class UClass*                                      BehaviorContextClass;                                     // 0x0108(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class ACameraRigActor*                             ActiveRig;                                                // 0x0110(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCameraContext*                              ContextInstance;                                          // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CustomCameraRigComponent");
		return ptr;
	}


	void SetMode(const struct FName& Mode, const struct FViewTargetTransitionParams& params);
	class ACameraRigActor* GetCameraRigForMode(const struct FName& Mode);
	class UCustomCameraRigComponent* STATIC_ActorCustomCameraRig(class AActor* Actor);
};


// Class Astro.CustomGravityVolumeComponent
// 0x0030 (0x02E0 - 0x02B0)
class UCustomGravityVolumeComponent : public USceneComponent
{
public:
	struct FName                                       GravityVolumeComponentName;                               // 0x02B0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityStrength;                                          // 0x02B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02BC(0x0004) MISSED OFFSET
	class UPrimitiveComponent*                         GravityVolume;                                            // 0x02C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x02C8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CustomGravityVolumeComponent");
		return ptr;
	}


	void OnComponentExitedCustomGravityVolume(class UPrimitiveComponent* volumeComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex);
	void OnComponentEnteredCustomGravityVolume(class UPrimitiveComponent* volumeComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
};


// Class Astro.CylindricalGravityVolumeComponent
// 0x0010 (0x02F0 - 0x02E0)
class UCylindricalGravityVolumeComponent : public UCustomGravityVolumeComponent
{
public:
	float                                              CylinderRadius;                                           // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CylinderHeight;                                           // 0x02E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyGravityOutward;                                     // 0x02E8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x02E9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CylindricalGravityVolumeComponent");
		return ptr;
	}

};


// Class Astro.DamageComponent
// 0x0028 (0x0118 - 0x00F0)
class UDamageComponent : public UActorComponent
{
public:
	bool                                               Indestructible;                                           // 0x00F0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    DamageSignal;                                             // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    KillSignal;                                               // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DamageComponent");
		return ptr;
	}


	bool Kill(bool ignoreIndestructible);
	void DealDamage(float Amount);
	class UDamageComponent* STATIC_ActorDamageComponent(class AActor* Actor);
};


// Class Astro.DayNight
// 0x0218 (0x05C0 - 0x03A8)
class ADayNight : public AActor
{
public:
	struct FLinearColor                                SpaceAmbientColor;                                        // 0x03A8(0x0010) (Edit, BlueprintVisible, IsPlainOldData)
	float                                              SpaceAmbientIntensity;                                    // 0x03B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SolarSystemSpeed;                                         // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SkyVisibility;                                            // 0x03C0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              ServerCorrectionTime;                                     // 0x03C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03C8(0x0004) MISSED OFFSET
	struct FLinearColor                                SpaceFakeBounce;                                          // 0x03CC(0x0010) (Edit, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x03DC(0x0004) MISSED OFFSET
	TArray<class ASolarBody*>                          SolarBodies;                                              // 0x03E0(0x0010) (ZeroConstructor, Transient)
	TMap<class ASolarBody*, struct FSolarBodyRelativeTransforms> SolarBodyReleativeTransforms;                             // 0x03F0(0x0050) (ZeroConstructor, Transient)
	class USkyLightComponent*                          SkyLight;                                                 // 0x0440(0x0008) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0448(0x0008) MISSED OFFSET
	double                                             ServerTimeStamp;                                          // 0x0450(0x0008) (Net, ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0458(0x0008) MISSED OFFSET
	struct FTransform                                  InitialTransform;                                         // 0x0460(0x0030) (Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0490(0x0004) MISSED OFFSET
	float                                              TargetSkyVisibility;                                      // 0x0494(0x0004) (ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData05[0x128];                                     // 0x0498(0x0128) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DayNight");
		return ptr;
	}


	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
};


// Class Astro.DecoratorActorList
// 0x0010 (0x0038 - 0x0028)
class UDecoratorActorList : public UObject
{
public:
	TArray<struct FActorSpecifier>                     Actors;                                                   // 0x0028(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DecoratorActorList");
		return ptr;
	}

};


// Class Astro.DecoratorInfoComponent
// 0x0018 (0x0108 - 0x00F0)
class UDecoratorInfoComponent : public UActorComponent
{
public:
	class AAstroPlanet*                                Planet;                                                   // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDecoratorSpawn;                                         // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DecoratorInfoComponent");
		return ptr;
	}

};


// Class Astro.DeformableActor
// 0x0010 (0x03B8 - 0x03A8)
class ADeformableActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET
	class UStaticMeshComponent*                        StaticMeshComponent;                                      // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformableActor");
		return ptr;
	}

};


// Class Astro.DeformableComponent
// 0x0018 (0x0108 - 0x00F0)
class UDeformableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDeformed;                                               // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformableComponent");
		return ptr;
	}

};


// Class Astro.DeformableInterface
// 0x0000 (0x0028 - 0x0028)
class UDeformableInterface : public UInterface
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformableInterface");
		return ptr;
	}

};


// Class Astro.DeformEventReceiver
// 0x0030 (0x0120 - 0x00F0)
class UDeformEventReceiver : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnTerrainEvent;                                           // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnAcceptResource;                                         // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainDeformationDensityDeltaReceived;                 // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformEventReceiver");
		return ptr;
	}


	class UDeformEventReceiver* STATIC_ActorDeformEventReceiver(class AActor* Actor);
};


// Class Astro.DeformSafeZoneComponent
// 0x0020 (0x0110 - 0x00F0)
class UDeformSafeZoneComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	float                                              Radius;                                                   // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0104(0x000C) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformSafeZoneComponent");
		return ptr;
	}

};


// Class Astro.DeformTargetComponent
// 0x0020 (0x0110 - 0x00F0)
class UDeformTargetComponent : public UActorComponent
{
public:
	TArray<struct FSlotReference>                      TargetSlots;                                              // 0x00F0(0x0010) (BlueprintVisible, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnDeform;                                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformTargetComponent");
		return ptr;
	}


	struct FTransform GetDeformTarget(const struct FVector& sourceLocation);
};


// Class Astro.DeformTierZoneComponent
// 0x0030 (0x16A0 - 0x1670)
class UDeformTierZoneComponent : public UTerrainPlacementComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x1670(0x0008) MISSED OFFSET
	float                                              Tier;                                                     // 0x1678(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x167C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DecalMaterial;                                            // 0x1680(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ZoneEnabled;                                              // 0x1688(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x1689(0x0007) MISSED OFFSET
	class UDecalComponent*                             Decal;                                                    // 0x1690(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x8];                                       // 0x1698(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformTierZoneComponent");
		return ptr;
	}


	void SetZoneEnabled(bool Enable);
	void OnDeformEnable(bool Enable);
};


// Class Astro.DeformToolCameraContext
// 0x0010 (0x0058 - 0x0048)
class UDeformToolCameraContext : public UCameraContext
{
public:
	class ADeformTool*                                 DeformTool;                                               // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformToolCameraContext");
		return ptr;
	}

};


// Class Astro.DeformTool
// 0x0420 (0x0A80 - 0x0660)
class ADeformTool : public APhysicalItem
{
public:
	struct FLinearColor                                NeutralTerrainColor;                                      // 0x0660(0x0010) (Edit, IsPlainOldData)
	struct FComponentReference                         DeformEffectReference;                                    // 0x0670(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         BurnoffEffectReference;                                   // 0x0688(0x0018) (Edit, DisableEditOnInstance)
	TArray<struct FName>                               ParticleEmitterNames;                                     // 0x06A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               AudioSurfaceTypeSwitchState;                              // 0x06B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FVector                                     HitLocation;                                              // 0x06C0(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     HitNormal;                                                // 0x06CC(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	class UClass*                                      DeformFXActor;                                            // 0x06D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      TerrainBrushActor;                                        // 0x06E0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDeformToolEquippedStateChanged;                         // 0x06E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSampledTerrainMaterialChanged;                          // 0x06F8(0x0010) (ZeroConstructor, InstancedReference)
	struct FTerrainMaterial                            SampledTerrainMaterial;                                   // 0x0708(0x0058) (BlueprintVisible, BlueprintReadOnly)
	struct FTerrainMaterial                            PaintingTerrainMaterial;                                  // 0x0760(0x0058) (BlueprintVisible, BlueprintReadOnly)
	struct FTerrainMaterial                            TerrainBrushMaterial;                                     // 0x07B8(0x0058) (BlueprintVisible, BlueprintReadOnly)
	EDeformToolSedimentTankReservesState               bSedimentTankReservesState;                               // 0x0810(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0811(0x0007) MISSED OFFSET
	class UActivation*                                 usingTool;                                                // 0x0818(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class APlayController*                             OwningController;                                         // 0x0820(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AAstroCharacter*                             OwningCharacter;                                          // 0x0828(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ATerrainBrush*                               TerrainBrush;                                             // 0x0830(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             FXSpawnComponent;                                         // 0x0838(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDeformEventReceiver*                        EventReceiver;                                            // 0x0840(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0848(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              BaseBrushDeformationScale;                                // 0x0850(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseBrushIndicatorScale;                                  // 0x0854(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseDeformationItensity;                                  // 0x0858(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BaseCreativeDeformationIntensity;                         // 0x085C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CreativeBaseDeformationIntensityMin;                      // 0x0860(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CreativeBaseDeformationIntensityMax;                      // 0x0864(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CreativeBaseBrushDeformationScaleMin;                     // 0x0868(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CreativeBaseBrushDeformationScaleMax;                     // 0x086C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CreativeToolRangeMax;                                     // 0x0870(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CreativeBaseBrushDeformationIntensityAdjustmentIncrement; // 0x0874(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CreativeBaseBrushDeformationScaleAdjustmentIncrement;     // 0x0878(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SphereCastRatio;                                          // 0x087C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LerpRate;                                                 // 0x0880(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PlayerSafeZone;                                           // 0x0884(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ToolRange;                                                // 0x0888(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowPowerMultiplier;                                       // 0x088C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SedimentBaseRate;                                         // 0x0890(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SedimentDeformationRatio;                                 // 0x0894(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SedimentFullySuppliedAmount;                              // 0x0898(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              FXFrequency;                                              // 0x089C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXSubtractVelocity;                                       // 0x08A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXAddVelocity;                                            // 0x08A4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXRadialVelocity;                                         // 0x08A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXSubtractVelocityRandomness;                             // 0x08AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXScale;                                                  // 0x08B0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXScaleRandomness;                                        // 0x08B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXSubtractSpawnHeight;                                    // 0x08B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FXAddSpawnHeight;                                         // 0x08BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MiningValue;                                              // 0x08C0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FReplicatedBrushState                       RepBrushState;                                            // 0x08C4(0x0034) (Net)
	unsigned char                                      UnknownData01[0x34];                                      // 0x08F8(0x0034) MISSED OFFSET
	struct FReplicatedAugmentState                     RepAugmentState;                                          // 0x092C(0x0028) (Net)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0954(0x0004) MISSED OFFSET
	struct FReplicatedCreativeColorPickState           RepCreativeColorPickState;                                // 0x0958(0x0028) (Net)
	struct FTerrainProperties                          RepTerrainSample;                                         // 0x0980(0x0018) (Net)
	unsigned char                                      UnknownData03[0x20];                                      // 0x0998(0x0020) MISSED OFFSET
	TArray<class UAugmentComponent*>                   AttachedAugments;                                         // 0x09B8(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData04[0x50];                                      // 0x09C8(0x0050) MISSED OFFSET
	TArray<class UAugmentComponent*>                   EquippedAugments;                                         // 0x0A18(0x0010) (ExportObject, ZeroConstructor)
	class UParticleSystemComponent*                    DeformEffectComponent;                                    // 0x0A28(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    BurnoffEffectComponent;                                   // 0x0A30(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UDeformToolCameraContext*                    CameraContext;                                            // 0x0A38(0x0008) (ZeroConstructor, IsPlainOldData)
	uint32_t                                           BrushMaterialIndex;                                       // 0x0A40(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TotalSedimentAvailable;                                   // 0x0A44(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              TotalSedimentCapacity;                                    // 0x0A48(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              SedimentDeformationDelta;                                 // 0x0A4C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	float                                              DeformTier;                                               // 0x0A50(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x20];                                      // 0x0A54(0x0020) MISSED OFFSET
	EDeformType                                        Operation;                                                // 0x0A74(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x0A75(0x0001) MISSED OFFSET
	unsigned char                                      bDeformationActive : 1;                                   // 0x0A76(0x0001) (Net)
	unsigned char                                      bDeformationFullPower : 1;                                // 0x0A76(0x0001) (Net)
	unsigned char                                      UnknownData07 : 6;                                        // 0x0A76(0x0001)
	unsigned char                                      UnknownData08 : 4;                                        // 0x0A77(0x0001)
	unsigned char                                      bCreativeModeIgnoreHardness : 1;                          // 0x0A77(0x0001) (Net)
	unsigned char                                      UnknownData09[0x1];                                       // 0x0A78(0x0001) MISSED OFFSET
	unsigned char                                      IsOwnedTool : 1;                                          // 0x0A79(0x0001) (Edit)
	unsigned char                                      ToolActive : 1;                                           // 0x0A79(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      EffectsCanBeActive : 1;                                   // 0x0A79(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      TerrainStreamEffectsActive : 1;                           // 0x0A79(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      AudioBurnOffPlaying : 1;                                  // 0x0A79(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      MinedMineral : 1;                                         // 0x0A79(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData10[0x6];                                       // 0x0A7A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeformTool");
		return ptr;
	}


	bool UpdateTerrainSample(class AAstroPlanet* Planet, const struct FVector& Location);
	void UpdateAugmentModifiedProperties();
	void TryEquipAugment(class UAugmentComponent* augment, EAugmentProperty augmentProperty);
	void ToolClickQuery(class UClickQuery* ClickQuery);
	class UClass* TakeTerrainResource();
	void SetSuspendBrushPositionUpdate(bool doSuspend);
	void SetCreativeToolRange(float NewVal);
	void SetCreativeBaseDeformationScale(float NewVal);
	void SetCreativeBaseDeformationIntensity(float NewVal);
	void ServerSetIsIgnoringTerrainHardnessCreative(bool IgnoreTerrainHardness);
	void ServerSendSampledTerrainUpdate(const struct FVector& Location);
	void ServerSendBrushUpdates(const struct FReplicatedBrushState& repState);
	void ServerRequestNewMaterialWithTerrainProperties(class AAstroPlanet* Planet, const struct FTerrainProperties& TerrainProperties, class UMaterialInterface* CustomMaterial, int creativeModePaintMaterialIndex);
	void ServerEndDeforming();
	void ServerDoDeformTarget(class UDeformTargetComponent* deformTarget);
	void ServerCreativeModeColorPick(const struct FVector& Location);
	void ServerCreativeModeColorChange(const struct FTerrainProperties& properties, const struct FVector& Location, class UMaterialInterface* CustomMaterial, int creativeModePaintMaterialIndex);
	void ServerBeginDeforming();
	void PhysicalItemUnslotted(class APhysicalItem* ItemOwner);
	void PhysicalItemSlotted(class APhysicalItem* ItemOwner);
	void OnReplicated_TerrainSample();
	void OnReplicated_ColorPickState();
	void OnInteraction(const struct FClickResult& Click);
	void OnDeformBegin();
	void OnCreativeModeActiveStateChanged(bool IsEnabled);
	void OnBrushSpawn();
	void OnAttemptedToPickColor();
	bool IsToolDeployed();
	bool InteractActorTick(class AActor* interactActor);
	void IncrementCreativeBaseDeformationIntensity(float Delta);
	void IncrementCreativeBaseBrushDeformationScale(float Delta);
	bool HasTankReservesNecessaryToAdditivelyDeform();
	bool HasSpaceLeftInTanks();
	void HandleTerrainTool(class APlayController* Controller, const struct FHitResult& toolHit, const struct FClickResult& ClickResult, bool startedInteraction, bool isUsingTool, bool justActivated, bool canUse);
	float GetSedimentFlowRate();
	float GetSedimentDeformationDelta();
	float GetSedimentAvailable();
	bool GetPowerLevelInhibitedFromAugment();
	bool GetOwnerBackpackRasied();
	struct FTerrainMaterial GetMaterialFromAugment();
	bool GetIsIgnoringTerrainHardnessCreative();
	bool GetIsDeforming();
	bool GetIsActive();
	bool GetFixedAlignmentFromAugment();
	float GetEffectiveIndicatorScale();
	float GetEffectiveDeformationIntensity();
	float GetEffectiveBrushScale();
	float GetDeformTier();
	struct FVector GetDeformLocation();
	bool GetDeformationIsActive();
	float GetDeformationIntensityModifierFromAugment();
	float GetCreativeToolRange();
	float GetCreativeDeformationIntensityNormalized();
	float GetCreativeBaseDeformationIntensity();
	float GetCreativeBaseBrushDeformationScale();
	float GetBrushSizeModifierFromAugment();
	float GetAugmentedTerrainHardness();
	void DetermineSedimentTankAmount();
	void Deactivated();
	void CycleModeRight();
	void CycleModeLeft();
	void CheckForOrphanedTool();
	void CheckAugmentsHavePower();
	void ChangeInAttachedAugments();
	float AuthorityGetEffectiveHardnessTier();
	void AdjustSedimentTankAmountFromDeformationDelta(float deformationDelta);
	void Activated();
};


// Class Astro.DeployableItemPackageCatalog
// 0x0100 (0x0130 - 0x0030)
class UDeployableItemPackageCatalog : public UDataAsset
{
public:
	TMap<int, class UClass*>                           DefaultPackagesForItemTiers;                              // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<class UClass*, class UClass*>                 OverrideCustomPackagesForItems;                           // 0x0080(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FOverrideCustomPackageItemList>      OverrideItemTypeCustomPackagesForItems;                   // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<class UClass*, class UClass*>                 PackagedItemTypeUpgradeMapping;                           // 0x00E0(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeployableItemPackageCatalog");
		return ptr;
	}

};


// Class Astro.DeployableItemPackageComponent
// 0x00C0 (0x01B0 - 0x00F0)
class UDeployableItemPackageComponent : public UActorComponent
{
public:
	struct FSlotReference                              PackagePreviewIndicatorSlot;                              // 0x00F0(0x0010) (BlueprintVisible)
	struct FScriptMulticastDelegate                    OnDeployComplete;                                         // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployedItemSpawned;                                    // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDeployReadyChanged;                                     // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIndicatorVisibleChanged;                                // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class USceneComponent*                             PackagePreviewIndicatorSlotWrapper;                       // 0x0140(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             PackageVisualsWrapper;                                    // 0x0148(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnAssignPackageMaterial;                                  // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FSlotReference                              CurrentIndicatorSlot;                                     // 0x0160(0x0010)
	class APhysicalItem*                               OwningItem;                                               // 0x0170(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         UnpackIndicatorRoot;                                      // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<class UMaterialInterface*>                  UnpackIndicatorRootOriginalMaterials;                     // 0x0180(0x0010) (ZeroConstructor, Transient)
	bool                                               DoNotAutoDestroyOnUnpack;                                 // 0x0190(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
	struct FTimerHandle                                HideIndicatorTimer;                                       // 0x0198(0x0008)
	unsigned char                                      UnknownData01[0x10];                                      // 0x01A0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeployableItemPackageComponent");
		return ptr;
	}


	void SetupPackagedItem(class UClass* ItemTypeToDeploy);
	void SetupHideIndicatorTimer();
	void SetCrateMaterialInstance(class UTexture* OverlayTexture);
	class UPrimitiveComponent* PreDeployPackagedItem();
	void PackageUnemplacedFromSlot();
	void PackageSetCardinalDirection();
	void PackageReleasedFromSlot(bool NewOwner);
	void PackageReadyEvent__DelegateSignature(bool DeployReady);
	void PackagePlacedInSlot();
	void PackageIndicatorEvent__DelegateSignature(bool IndicatorVisible);
	void PackageEmplacedInSlot();
	void PackagedItemDeployedEvent__DelegateSignature(class APhysicalItem* DeployedItem);
	void OnItemComponentChanged();
	void Moved(bool FromTool);
	void HideIndicator();
	void GeneralSlotEvent(class APhysicalItem* Item);
	void EndCursorOver(class AActor* Actor);
	void DropInWorld(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void DeployPackagedItem();
	void ClearHideIndicatorTimer();
	void BeginCursorOver(class AActor* Actor);
	void AssignMaterialEvent__DelegateSignature(class UMaterialInterface* PackageMaterial);
};


// Class Astro.DeployRetractComponent
// 0x0058 (0x0148 - 0x00F0)
class UDeployRetractComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnDeployedStateChanged;                                   // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPendingDeployedChanged;                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bIsDeployed : 1;                                          // 0x0110(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	unsigned char                                      UnknownData00 : 1;                                        // 0x0110(0x0001)
	unsigned char                                      bPendingDeployed : 1;                                     // 0x0110(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class UAnimMontage*                                DeployMontage;                                            // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                RetractMontage;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 DeployedCollision;                                        // 0x0128(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 RetractedCollision;                                       // 0x0130(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0138(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DeployRetractComponent");
		return ptr;
	}


	void OnRep_PendingDeployed();
	void OnRep_IsDeployed();
	void OnDeployRetractMontageActionEnded(class UAstroAction* montageAction);
	void AuthorityRetract();
	void AuthorityDeploy();
};


// Class Astro.DesignerPlacedSurfaceActorComponent
// 0x0030 (0x1690 - 0x1660)
class UDesignerPlacedSurfaceActorComponent : public UTerrainModifier
{
public:
	TArray<class UClass*>                              ActorTypesToSpawn;                                        // 0x1660(0x0010) (Edit, ZeroConstructor)
	ETerrainPlacementMode                              TerrainMode;                                              // 0x1670(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1671(0x0003) MISSED OFFSET
	int                                                OctreeResOffset;                                          // 0x1674(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FPlacedActorSpawnInfo>               ActorSpawnInfos;                                          // 0x1678(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x1688(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DesignerPlacedSurfaceActorComponent");
		return ptr;
	}

};


// Class Astro.DestroyAboveGroundComponent
// 0x0000 (0x1670 - 0x1670)
class UDestroyAboveGroundComponent : public UTerrainPlacementComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DestroyAboveGroundComponent");
		return ptr;
	}

};


// Class Astro.DestroyAfterComponent
// 0x0030 (0x0120 - 0x00F0)
class UDestroyAfterComponent : public UActorComponent
{
public:
	unsigned char                                      bStartTimerOnBeginPlay : 1;                               // 0x00F0(0x0001) (Edit)
	unsigned char                                      bTimerStarted : 1;                                        // 0x00F0(0x0001) (SaveGame)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              MinLife;                                                  // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxLife;                                                  // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class UParticleSystemComponent*                    DestroyParticles;                                         // 0x0100(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnParticlesStarted;                                       // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0118(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DestroyAfterComponent");
		return ptr;
	}


	void StartTimer();
	void PlayDestroyParticlesAndDelete(class UParticleSystemComponent* particles, float playParticlesAfter, float destroyAfter);
};


// Class Astro.DestructionBundleDefinition
// 0x0010 (0x0040 - 0x0030)
class UDestructionBundleDefinition : public UDataAsset
{
public:
	TArray<struct FDebrisItem>                         DebrisItems;                                              // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DestructionBundleDefinition");
		return ptr;
	}

};


// Class Astro.DestructionDefinitionTable
// 0x00B0 (0x00E0 - 0x0030)
class UDestructionDefinitionTable : public UDataAsset
{
public:
	TMap<int, class UDestructionBundleDefinition*>     Defaults;                                                 // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TMap<class UClass*, class UDestructionBundleDefinition*> Overrides;                                                // 0x0080(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<class UClass*>                              DebrisSpawningBlacklist;                                  // 0x00D0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DestructionDefinitionTable");
		return ptr;
	}

};


// Class Astro.DistanceBoundsModifierComponent
// 0x0010 (0x0138 - 0x0128)
class UDistanceBoundsModifierComponent : public UCameraModifierComponent
{
public:
	float                                              InnerBound;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OuterBound;                                               // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CorrectionSpeed;                                          // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bMaintainHeightOnCorrection : 1;                          // 0x0134(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0135(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DistanceBoundsModifierComponent");
		return ptr;
	}

};


// Class Astro.DistanceLightFaderComponent
// 0x0018 (0x0108 - 0x00F0)
class UDistanceLightFaderComponent : public UActorComponent
{
public:
	float                                              LightIntensity;                                           // 0x00F0(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LightSquaredDist;                                         // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               LightVisible;                                             // 0x00F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	class ULightComponent*                             LightComponent;                                           // 0x0100(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DistanceLightFaderComponent");
		return ptr;
	}


	void UpdateLightFadeWithVisibility(const struct FVector& OtherObjectLocation, bool setVisible);
	void UpdateLightFade(const struct FVector& OtherObjectLocation);
};


// Class Astro.DistanceToPlanetTangentModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UDistanceToPlanetTangentModifierComponent : public UCameraModifierComponent
{
public:
	float                                              TangentOffset;                                            // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LimitDistance;                                            // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DistanceToPlanetTangentModifierComponent");
		return ptr;
	}

};


// Class Astro.DroneBase
// 0x00D0 (0x0730 - 0x0660)
class ADroneBase : public APhysicalItem
{
public:
	class UFlyingDroneMovementComponent*               MovementComponent;                                        // 0x0660(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	struct FSlotReference                              DockingSlotRef;                                           // 0x0668(0x0010)
	EDroneFlightState                                  flightState;                                              // 0x0678(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0679(0x0007) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnFlightStateChanged;                                     // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0690(0x0008) MISSED OFFSET
	struct FName                                       FlightSpeedRTPCName;                                      // 0x0698(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     ZoomInSoundEventName;                                     // 0x06A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ZoomOutSoundEventName;                                    // 0x06B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ZoomedInCameraFOV;                                        // 0x06C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomedOutCameraFOV;                                       // 0x06C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DiscreteCameraZoomIncrement;                              // 0x06C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DiscreteFlightSpeedIncrement;                             // 0x06CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomSFXReplayDelay;                                       // 0x06D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x06D4(0x0004) MISSED OFFSET
	class USceneComponent*                             AudioListener;                                            // 0x06D8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FComponentReference                         AudioListenerReference;                                   // 0x06E0(0x0018) (Edit)
	class UFixedFOVModifierComponent*                  fixedFOVModifier;                                         // 0x06F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x30];                                      // 0x0700(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.DroneBase");
		return ptr;
	}


	void ZoomOut();
	void ZoomIn();
	void TakePhoto();
	void SetRiseInputInactive();
	void SetRiseInputActive();
	void ServerSetFlightState(EDroneFlightState NewFlightState);
	void OnRep_FlightState();
	void NudgeFlightSpeedSlower();
	void NudgeFlightSpeedFaster();
	bool IsLocallyControlled();
	class ASolarBody* GetLocalSolarBody();
	float GetCurrentFOV();
	void AuthorityRecallDrone();
	void AuthorityLaunchDrone(class APlayController* OwningController);
	void AuthorityEmergencyRecallDrone();
};


// Class Astro.AstroEmoteDefinition
// 0x0088 (0x0178 - 0x00F0)
class UAstroEmoteDefinition : public UAstroCustomizationItem
{
public:
	EEmoteType                                         EmoteType;                                                // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UClass*                                      EmoteActionTypeOverride;                                  // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x28];                                      // 0x0100(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroEmoteDefinition.DefaultMontage
	unsigned char                                      UnknownData02[0x50];                                      // 0x0128(0x0050) UNKNOWN PROPERTY: MapProperty Astro.AstroEmoteDefinition.SuitSpecificMontages

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroEmoteDefinition");
		return ptr;
	}

};


// Class Astro.EmoteTable
// 0x0028 (0x0058 - 0x0030)
class UEmoteTable : public UDataAsset
{
public:
	class UClass*                                      DefaultEmoteActionType;                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UAstroEmoteDefinition*>               DefaultEmoteSet;                                          // 0x0038(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0048(0x0010) UNKNOWN PROPERTY: ArrayProperty Astro.EmoteTable.Emotes

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.EmoteTable");
		return ptr;
	}

};


// Class Astro.EmptyLobbyGameMode
// 0x0000 (0x0438 - 0x0438)
class AEmptyLobbyGameMode : public AGameModeBase
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.EmptyLobbyGameMode");
		return ptr;
	}

};


// Class Astro.Examinable
// 0x0000 (0x0380 - 0x0380)
class UExaminable : public UCrackable
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Examinable");
		return ptr;
	}


	bool ValidateWithinExamineRange();
};


// Class Astro.ExoRequestModuleBase
// 0x0070 (0x06D0 - 0x0660)
class AExoRequestModuleBase : public APhysicalItem
{
public:
	struct FName                                       TestClassName;                                            // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FText                                       DeliveryNotificationText;                                 // 0x0668(0x0018) (Edit, DisableEditOnInstance)
	int                                                CurrentScore;                                             // 0x0680(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	int                                                LaunchByteCost;                                           // 0x0684(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemDriveProgress;                                        // 0x0688(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EventProgressBarMax;                                      // 0x068C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                EventProgressBarMin;                                      // 0x0690(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EExoRequestStatus                                  RequestStatus;                                            // 0x0694(0x0001) (BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0695(0x0003) MISSED OFFSET
	TArray<struct FExoRequestReward>                   Rewards;                                                  // 0x0698(0x0010) (BlueprintVisible, ZeroConstructor)
	class UItemDriveComponent*                         ActiveItemDrive;                                          // 0x06A8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      ShipActor;                                                // 0x06B0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	class UTradeShipComponent*                         TradeShipComponent;                                       // 0x06B8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTradeShipDockComponent_ItemDrive*           TradeShipDockComponentItemDrive;                          // 0x06C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      bCanClaimPendingRewardForFree : 1;                        // 0x06C8(0x0001) (BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x06C9(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ExoRequestModuleBase");
		return ptr;
	}


	void UpdateScore();
	void UpdateRewardData();
	void UpdateProgressBar();
	void UpdateModuleState();
	void UpdateEventIcon();
	void UpdateActiveEvent();
	void OnRep_ExoRequestModuleData();
	bool IsEventActive();
	bool HasUnclaimedPhysicalItemRewards(class APlayController* PlayController);
	class UTexture* GetEventInputIcon();
	void AuthoritySetShipAttachedToDock(bool IsAttached);
	void AuthorityDeliverItems();
	void ActivatedThroughControlPanel(class APlayController* ClickingPlayer);
};


// Class Astro.ExplodableNonPhysicalItemComponent
// 0x0008 (0x00F8 - 0x00F0)
class UExplodableNonPhysicalItemComponent : public UActorComponent
{
public:
	int                                                ToolMoveTier;                                             // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ExplodableNonPhysicalItemComponent");
		return ptr;
	}

};


// Class Astro.ExplosiveEffectsConfig
// 0x0020 (0x0050 - 0x0030)
class UExplosiveEffectsConfig : public UDataAsset
{
public:
	struct FString                                     ExplosionAudioEvent;                                      // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FExplosiveEffectsConfigPair>         EffectByPowerLevel;                                       // 0x0040(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ExplosiveEffectsConfig");
		return ptr;
	}

};


// Class Astro.ExplosiveComponent
// 0x00A8 (0x0198 - 0x00F0)
class UExplosiveComponent : public UActorComponent
{
public:
	float                                              Power;                                                    // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AutoResourceGenerationPercentage;                         // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CombineExplosionsRadiusRatio;                             // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExplosionRadiusCraterScale;                               // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PowerToRadiusScale;                                       // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	class UClass*                                      DamageTypeClass;                                          // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      IsEnabled : 1;                                            // 0x0110(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class UExplosiveEffectsConfig*                     EffectsConfig;                                            // 0x0118(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x60];                                      // 0x0120(0x0060) MISSED OFFSET
	float                                              CombinedPower;                                            // 0x0180(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CombinedRadius;                                           // 0x0184(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     CombinedLocation;                                         // 0x0188(0x000C) (BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0194(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ExplosiveComponent");
		return ptr;
	}


	void SetDetonationTimerPaused(bool bIsPaused);
	void SetDetonationTimer(float DeltaTime);
	void MulticastWreckageDestroyAudio(const struct FTransform& xform, class UObject* contextObject);
	bool ExplosiveDestroyActor(class AActor* ToDestroy);
	void DoExplosionDeformation(const struct FVector& Location, float Radius);
	void DoBlastDamage(const struct FVector& Location, float Radius, float Intensity);
	void Detonate();
	void DamageActor(class AActor* Actor, const struct FVector& Direction, float Intensity);
	void CancelDetonationTimer();
};


// Class Astro.ExternalBodySlot
// 0x0010 (0x0100 - 0x00F0)
class UExternalBodySlot : public UActorComponent
{
public:
	struct FSlotReference                              BodySlot;                                                 // 0x00F0(0x0010) (BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ExternalBodySlot");
		return ptr;
	}

};


// Class Astro.FaceCameraComponent
// 0x0010 (0x02C0 - 0x02B0)
class UFaceCameraComponent : public USceneComponent
{
public:
	bool                                               MaintainUp;                                               // 0x02B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x02B1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FaceCameraComponent");
		return ptr;
	}

};


// Class Astro.FixedDistanceModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedDistanceModifierComponent : public UCameraModifierComponent
{
public:
	float                                              Distance;                                                 // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedDistanceModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedFOVModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedFOVModifierComponent : public UCameraModifierComponent
{
public:
	float                                              FOV;                                                      // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedFOVModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedGravityVolumeComponent
// 0x0010 (0x02F0 - 0x02E0)
class UFixedGravityVolumeComponent : public UCustomGravityVolumeComponent
{
public:
	float                                              BoxExtent;                                                // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyGravityUpward;                                      // 0x02E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x02E5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedGravityVolumeComponent");
		return ptr;
	}

};


// Class Astro.FixedHorizontalOffsetModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedHorizontalOffsetModifierComponent : public UCameraModifierComponent
{
public:
	float                                              UpperLimit;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimit;                                               // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedHorizontalOffsetModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedPitchModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedPitchModifierComponent : public UCameraModifierComponent
{
public:
	float                                              UpperLimit;                                               // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimit;                                               // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedPitchModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedRollModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedRollModifierComponent : public UCameraModifierComponent
{
public:
	float                                              Roll;                                                     // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedRollModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedTargetOffsetModifierComponent
// 0x0018 (0x0140 - 0x0128)
class UFixedTargetOffsetModifierComponent : public UCameraModifierComponent
{
public:
	struct FVector                                     RelativeLocation;                                         // 0x0128(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0134(0x000C) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedTargetOffsetModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedVerticalOffsetModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFixedVerticalOffsetModifierComponent : public UCameraModifierComponent
{
public:
	float                                              UpperLimit;                                               // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimit;                                               // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedVerticalOffsetModifierComponent");
		return ptr;
	}

};


// Class Astro.FixedYawModifierComponent
// 0x0010 (0x0138 - 0x0128)
class UFixedYawModifierComponent : public UCameraModifierComponent
{
public:
	float                                              UpperLimit;                                               // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimit;                                               // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              TargetSpeed;                                              // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      RelativeToTarget : 1;                                     // 0x0134(0x0001) (Edit)
	unsigned char                                      bScaleSpeedWithSpeed : 1;                                 // 0x0134(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0135(0x0003) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FixedYawModifierComponent");
		return ptr;
	}

};


// Class Astro.FlyingDroneAnimInstance
// 0x0010 (0x03E0 - 0x03D0)
class UFlyingDroneAnimInstance : public UAnimInstance
{
public:
	float                                              SpeedStrafeLerpStrength;                                  // 0x03D0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class UFlyingDroneMovementComponent*               MovementComponent;                                        // 0x03D8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FlyingDroneAnimInstance");
		return ptr;
	}

};


// Class Astro.FlyingDroneMovementComponent
// 0x0190 (0x0280 - 0x00F0)
class UFlyingDroneMovementComponent : public UActorComponent
{
public:
	struct FVector                                     Velocity;                                                 // 0x00F0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3C];                                      // 0x00FC(0x003C) MISSED OFFSET
	float                                              MaxAcceleration;                                          // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinCreativeModeFlightSpeedScalar;                         // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxCreativeModeFlightSpeedScalar;                         // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CreativeModeFlightSpeedScalar;                            // 0x0144(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              DepenetrationStrength;                                    // 0x0148(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector_NetQuantizeNormal                   ClientMovementInputVector;                                // 0x014C(0x000C) (Net)
	class UPrimitiveComponent*                         UpdatedComponent;                                         // 0x0158(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, DuplicateTransient, IsPlainOldData)
	class ADroneBase*                                  DroneOwner;                                               // 0x0160(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0168(0x0018) MISSED OFFSET
	float                                              RotationSpeed;                                            // 0x0180(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2C];                                      // 0x0184(0x002C) MISSED OFFSET
	float                                              GravitySourceInterpolationTime;                           // 0x01B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x94];                                      // 0x01B4(0x0094) MISSED OFFSET
	struct FVector                                     CurrentGravity;                                           // 0x0248(0x000C) (IsPlainOldData)
	struct FVector                                     LastControlInputVector;                                   // 0x0254(0x000C) (Transient, IsPlainOldData)
	struct FVector                                     ControlInputVector;                                       // 0x0260(0x000C) (Transient, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x026C(0x0004) MISSED OFFSET
	class UCameraComponent*                            PlayerCamera;                                             // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0278(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FlyingDroneMovementComponent");
		return ptr;
	}


	void SetCreativeModeFlightSpeedScalarNormalized(float NormalizedCreativeModeFlightSpeedScalar);
	void ServerUpdateClientMovementInputVector(const struct FVector_NetQuantizeNormal& ClientMovementInput);
	float GetCreativeModeFlightSpeedScalarNormalized();
};


// Class Astro.FollowBehindModifierComponent
// 0x0010 (0x0138 - 0x0128)
class UFollowBehindModifierComponent : public UCameraModifierComponent
{
public:
	unsigned char                                      bScaleSpeedWithDistance : 1;                              // 0x0128(0x0001) (Edit)
	unsigned char                                      bScaleSpeedWithSpeed : 1;                                 // 0x0128(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              NormalScaleDistance;                                      // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaximumTargetSpeed;                                       // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FollowBehindModifierComponent");
		return ptr;
	}

};


// Class Astro.FollowComponent
// 0x0070 (0x0160 - 0x00F0)
class UFollowComponent : public UActorComponent
{
public:
	class USceneComponent*                             FollowComponent;                                          // 0x00F0(0x0008) (Edit, BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               TrackFollowVelocity;                                      // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F9(0x0007) MISSED OFFSET
	class USceneComponent*                             ScaleComponent;                                           // 0x0100(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              TargetScale;                                              // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ForceMultiplier;                                          // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ForceDampening;                                           // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ArriveRadius;                                             // 0x0114(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MinLife;                                                  // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxLife;                                                  // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnArrived;                                                // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0130(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FollowComponent");
		return ptr;
	}


	void SetFollowComponent(class USceneComponent* Component);
	class UFollowComponent* STATIC_AddActorFollowComponent(class AActor* Actor);
};


// Class Astro.FrameTargetModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UFrameTargetModifierComponent : public UCameraModifierComponent
{
public:
	float                                              HeightOffset;                                             // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FrameTargetModifierComponent");
		return ptr;
	}

};


// Class Astro.FreeControlModifierComponent
// 0x0018 (0x0140 - 0x0128)
class UFreeControlModifierComponent : public UCameraModifierComponent
{
public:
	float                                              TranslateSpeed;                                           // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxBoostMultiplier;                                       // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PitchRate;                                                // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawRate;                                                  // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadRotateMultiplier;                                  // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FreeControlModifierComponent");
		return ptr;
	}

};


// Class Astro.FuelConsumerComponent
// 0x0098 (0x0188 - 0x00F0)
class UFuelConsumerComponent : public UActorComponent
{
public:
	float                                              LowFuelThreshold;                                         // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FuelPerPortion;                                           // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x00F8(0x0020) MISSED OFFSET
	struct FName                                       FuelSlotName;                                             // 0x0118(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlotReference                              FuelSlotRef;                                              // 0x0120(0x0010) (Transient)
	EFuelSource                                        FuelSource;                                               // 0x0130(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	class UClass*                                      FuelType;                                                 // 0x0138(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ConsumptionRate;                                          // 0x0140(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NetworkSyncFuelTimer;                                     // 0x0144(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USlotsComponent*                             SlotsComponent;                                           // 0x0148(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               ItemOwner;                                                // 0x0150(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class AAstroCharacter*                             AstroCharacter;                                           // 0x0158(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FSlotReference>                      DestinationSlots;                                         // 0x0160(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0170(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.FuelConsumerComponent");
		return ptr;
	}


	void OnItemSlotted(class APhysicalItem* Item);
	void OnItemRemoved(class APhysicalItem* Item);
	void OnItemAmountChanged();
};


// Class Astro.GameSettingsDataStatics
// 0x0000 (0x0028 - 0x0028)
class UGameSettingsDataStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GameSettingsDataStatics");
		return ptr;
	}


	struct FGameSettingsGraphicsOptions STATIC_GetGraphicsOptions();
	struct FGameSettingsDisplayOptions STATIC_GetDisplayOptions();
	struct FGameSettingsControlsOptions STATIC_GetControlsOptions();
	struct FGameSettingsAudioOptions STATIC_GetAudioOptions();
};


// Class Astro.GateObject
// 0x0030 (0x03D8 - 0x03A8)
class AGateObject : public AActor
{
public:
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TeleporterPositioningComponent;                           // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UActorGateObjectComponent*                   GateObjectComponent;                                      // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UActorEntityLinkComponent*                   EntityLinkComponent;                                      // 0x03C0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class ASolarBody*                                  LocalSolarBody;                                           // 0x03C8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x03D0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObject");
		return ptr;
	}


	void OnSolarSystemInitialized(class USolarSystem* SolarSystem);
	void OnLocalPlayerChangedLocalSolarBody(class ASolarBody* playerLocalSolarBody);
};


// Class Astro.GateChamber
// 0x0008 (0x03E0 - 0x03D8)
class AGateChamber : public AGateObject
{
public:
	class URaycastTerrainSurfaceComponent*             RaycastTerrainSurfaceComponent;                           // 0x03D8(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateChamber");
		return ptr;
	}

};


// Class Astro.GateEngine
// 0x0000 (0x03D8 - 0x03D8)
class AGateEngine : public AGateObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateEngine");
		return ptr;
	}

};


// Class Astro.GateObjectEventListener
// 0x0000 (0x0048 - 0x0048)
class UGateObjectEventListener : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObjectEventListener");
		return ptr;
	}


	void OnPlayerCharacterInProximityDestroyed(class AActor* playerCharacter);
};


// Class Astro.GateObjectComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UGateObjectComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObjectComponentContainer");
		return ptr;
	}


	struct FGateObjectComponent STATIC_GetGateObjectComponent(const struct FAstroDatumRef& GateObjectComponentRef, bool* bOutSuccess);
	struct FGateObjectComponent STATIC_FindGateObjectComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.GateObjectControlPanel
// 0x0138 (0x05B0 - 0x0478)
class AGateObjectControlPanel : public AControlPanel
{
public:
	struct FVector2D                                   NodeTooltipAnchorOffset;                                  // 0x0478(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FText                                       TooltipOwnerNodeTitle;                                    // 0x0480(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       TooltipActiveNodeTitle;                                   // 0x0498(0x0018) (Edit, DisableEditOnInstance)
	struct FText                                       TooltipInactiveNodeTitle;                                 // 0x04B0(0x0018) (Edit, DisableEditOnInstance)
	struct FLinearColor                                TooltipBadgeColor;                                        // 0x04C8(0x0010) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          DefaultInertIndicatorMaterial;                            // 0x04D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          DefaultActiveIndicatorMaterial;                           // 0x04E0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIndicatorMeshDefinition                    PlayerMeshDefinition;                                     // 0x04E8(0x0018) (Edit, DisableEditOnInstance)
	float                                              CenteredNodeRotationOffset;                               // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChamberIndicatorOffsetDistance;                           // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SolarSystemViewRadius;                                    // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StationControlNodeOffsetInPlanetView;                     // 0x050C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     StationControlNodeOffsetInSolarView;                      // 0x0518(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    SolarViewRootRotationOffset;                              // 0x0524(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleInterpolationDuration;                               // 0x0530(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EGateObjectControlPanelContext                     CurrentContext;                                           // 0x0534(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0535(0x0003) MISSED OFFSET
	TArray<struct FGateObjectControlNode>              ControlNodes;                                             // 0x0538(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                SelectedControlNodeIndex;                                 // 0x0548(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                CurrentLocationControlNodeIndex;                          // 0x054C(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             CrackedRoot;                                              // 0x0550(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ControlNodeRoot;                                          // 0x0558(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           TooltipComponent;                                         // 0x0560(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SunIndicatorComponent;                                    // 0x0568(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x40];                                      // 0x0570(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObjectControlPanel");
		return ptr;
	}


	void SetContext(EGateObjectControlPanelContext newContext);
	void SelectControlNode(int controlNodeIndex);
	void OnSolarSystemInitialized(class USolarSystem* SolarSystem);
	void OnSelectedControlNodeGateObjectActivated();
	void OnSelectedControlNodeChanged();
	void OnRep_CurrentLocationControlNodeIndex();
	void OnGateStationSpawned();
	void OnGateObjectActivated(const struct FGateObjectReference& ActivatedGateObjectRef);
	void OnControlNodeEndCursorOver(class UPrimitiveComponent* hoveredControlNodeMesh);
	void OnControlNodeClicked(class UPrimitiveComponent* clickedControlNodeMesh, const struct FKey& ButtonPressed);
	void OnControlNodeCenteringInterpolationFinished();
	void OnControlNodeBeginCursorOver(class UPrimitiveComponent* hoveredControlNodeMesh);
	bool IsControlNodeGateObjectActivated(int controlNodeIndex);
	void HandleControlNodeEndHover(const struct FGateObjectControlNode& hoveredControlNode);
	void HandleControlNodeClick(const struct FGateObjectControlNode& clickedControlNode);
	void HandleControlNodeBeginHover(const struct FGateObjectControlNode& hoveredControlNode);
	void CenterControlNodeInView(int controlNodeIndex, float InterpolationTime);
};


// Class Astro.GateObjectIndicatorDefinition
// 0x0058 (0x0088 - 0x0030)
class UGateObjectIndicatorDefinition : public UDataAsset
{
public:
	struct FText                                       TooltipSubtitle;                                          // 0x0030(0x0018) (Edit, DisableEditOnInstance)
	class UObject*                                     TooltipBadge;                                             // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UObject*                                     TooltipBadgeBackground;                                   // 0x0050(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIndicatorMeshDefinition                    IndicatorMeshDefinition;                                  // 0x0058(0x0018) (Edit, DisableEditOnInstance)
	class UMaterialInterface*                          InertIndicatorMaterial;                                   // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          ActiveIndicatorMaterial;                                  // 0x0078(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PlayerIndicatorSocketName;                                // 0x0080(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObjectIndicatorDefinition");
		return ptr;
	}

};


// Class Astro.PlanetGateObjectIndicatorDefinitions
// 0x0030 (0x0060 - 0x0030)
class UPlanetGateObjectIndicatorDefinitions : public UDataAsset
{
public:
	class UGateObjectIndicatorDefinition*              ChamberIndicatorDefinition;                               // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGateObjectIndicatorDefinition*              EngineIndicatorDefinition;                                // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGateObjectIndicatorDefinition*              PlanetIndicatorDefinition;                                // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIndicatorMeshDefinition                    PlanetMeshDefinition;                                     // 0x0048(0x0018) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlanetGateObjectIndicatorDefinitions");
		return ptr;
	}

};


// Class Astro.StationGateObjectIndicatorDefinitions
// 0x0028 (0x0058 - 0x0030)
class UStationGateObjectIndicatorDefinitions : public UDataAsset
{
public:
	class UGateObjectIndicatorDefinition*              SolarStationIndicatorDefinition;                          // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UGateObjectIndicatorDefinition*              EngineStationIndicatorDefinition;                         // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FIndicatorMeshDefinition                    SunMeshDefinition;                                        // 0x0040(0x0018) (Edit, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StationGateObjectIndicatorDefinitions");
		return ptr;
	}

};


// Class Astro.GateObjectSystem
// 0x0000 (0x0030 - 0x0030)
class UGateObjectSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateObjectSystem");
		return ptr;
	}


	bool STATIC_BP_TryActivateGateObject(class AActor* gateObjectActor);
	void STATIC_BP_SetGateObjectCanBeActivated(class AActor* gateObjectActor, bool bCanBeActivated);
};


// Class Astro.GatesGameMode
// 0x0068 (0x0670 - 0x0608)
class AGatesGameMode : public AAstroGameMode
{
public:
	unsigned char                                      UnknownData00[0x68];                                      // 0x0608(0x0068) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GatesGameMode");
		return ptr;
	}


	class AGateStation* TryGetGateStationActor();
	class AGateEngine* TryGetGateEngineActor(class AAstroPlanet* enginePlanet);
	class AGateChamber* TryGetGateChamberActor(class AAstroPlanet* chamberPlanet, int ChamberCoordinateIndex);
	void StationSpawned();
	void StationActivated();
	void OnStationSpawned();
	void OnStationActivated(const struct FAstroDatumRef& stationEntityRef);
	void OnEngineActivated(const struct FAstroDatumRef& engineEntityRef);
	void OnChamberActivated(const struct FAstroDatumRef& chamberEntityRef);
	void InitializeForSolarSystem(class USolarSystem* SolarSystem);
	void EngineActivated(class AAstroPlanet* enginePlanet);
	void ChamberActivated(class AAstroPlanet* chamberPlanet);
};


// Class Astro.GatesGameState
// 0x0048 (0x0880 - 0x0838)
class AGatesGameState : public AAstroGameState
{
public:
	struct FScriptMulticastDelegate                    OnGateObjectActivated;                                    // 0x0838(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FGatesGameStateReplicationData              ReplicationData;                                          // 0x0848(0x0018) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0860(0x0018) MISSED OFFSET
	int                                                TotalActivatedChambers;                                   // 0x0878(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                TotalActivatedEngines;                                    // 0x087C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GatesGameState");
		return ptr;
	}


	void OnReplicationDataReceived();
};


// Class Astro.GateStation
// 0x0060 (0x0560 - 0x0500)
class AGateStation : public ASolarBody
{
public:
	class UStaticMeshComponent*                        StationMesh;                                              // 0x0500(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TeleporterPositioningComponent;                           // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClickableComponent*                         ClickableComponent;                                       // 0x0510(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           TooltipComponent;                                         // 0x0518(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            ClickCollisionSphere;                                     // 0x0520(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ProxyMesh;                                                // 0x0528(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ProxyRoot;                                                // 0x0530(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              ProxyMeshScale;                                           // 0x0538(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OrbitalRotationOffset;                                    // 0x053C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UActorGateObjectComponent*                   GateObjectComponent;                                      // 0x0548(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UActorEntityLinkComponent*                   EntityLinkComponent;                                      // 0x0550(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStationGateObjectIndicatorDefinitions*      StationIndicatorDefinitions;                              // 0x0558(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GateStation");
		return ptr;
	}


	void OnClickedInSolarView(class AActor* TouchedActor, const struct FKey& ButtonPressed);
	void InitializeLandingZones();
};


// Class Astro.GlobalHeightModifier
// 0x00C0 (0x1720 - 0x1660)
class UGlobalHeightModifier : public UTerrainModifier
{
public:
	float                                              Thickness;                                                // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeightOffset;                                             // 0x1664(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeightMapScale;                                           // 0x1668(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x166C(0x0004) MISSED OFFSET
	struct FTerrainMaterial                            Material;                                                 // 0x1670(0x0058) (Edit)
	float                                              MapPlateauUpper;                                          // 0x16C8(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MapPlateauLower;                                          // 0x16CC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MapHeight;                                                // 0x16D0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x16D4(0x0004) MISSED OFFSET
	class UTexture2D*                                  HeightMap;                                                // 0x16D8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTerrainHeightLayer>                 MapLayers;                                                // 0x16E0(0x0010) (Edit, ZeroConstructor)
	unsigned char                                      UnknownData02[0x8];                                       // 0x16F0(0x0008) MISSED OFFSET
	TArray<unsigned char>                              HeightMapData;                                            // 0x16F8(0x0010) (ZeroConstructor)
	uint16_t                                           HeightMapHeight;                                          // 0x1708(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           HeightMapWidth;                                           // 0x170A(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x14];                                      // 0x170C(0x0014) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GlobalHeightModifier");
		return ptr;
	}

};


// Class Astro.GrantAchievementUnlockBehaviorDefinition
// 0x0008 (0x0048 - 0x0040)
class UGrantAchievementUnlockBehaviorDefinition : public UAstroEntityComponentSubobjectDefinition
{
public:
	EAstroAchievementKeys                              Achievement;                                              // 0x0040(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GrantAchievementUnlockBehaviorDefinition");
		return ptr;
	}

};


// Class Astro.UnlockBehavior
// 0x0000 (0x0048 - 0x0048)
class UUnlockBehavior : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UnlockBehavior");
		return ptr;
	}


	void RespondToLockedStateChanged(const struct FAstroDatumRef& changedLockableComponent, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.GrantAchievementUnlockBehavior
// 0x0008 (0x0050 - 0x0048)
class UGrantAchievementUnlockBehavior : public UUnlockBehavior
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GrantAchievementUnlockBehavior");
		return ptr;
	}


	void RespondToLockedStateChanged(const struct FAstroDatumRef& changedLockableComponent, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.ResearchBonusBehavior
// 0x0000 (0x0028 - 0x0028)
class UResearchBonusBehavior : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchBonusBehavior");
		return ptr;
	}

};


// Class Astro.GrantAdditionalPointsBonus
// 0x0008 (0x0030 - 0x0028)
class UGrantAdditionalPointsBonus : public UResearchBonusBehavior
{
public:
	float                                              AdditionalPointsGranted;                                  // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GrantAdditionalPointsBonus");
		return ptr;
	}

};


// Class Astro.HangingSlotComponent
// 0x0030 (0x0120 - 0x00F0)
class UHangingSlotComponent : public UActorComponent
{
public:
	struct FSlotReference                              HangingSlot;                                              // 0x00F0(0x0010) (BlueprintVisible, SaveGame)
	struct FSlotReference                              ResourceSlot;                                             // 0x0100(0x0010) (BlueprintVisible)
	float                                              HangingSlotDistance;                                      // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsReadyActor;                                             // 0x0114(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	class URingCameraTargeter*                         RingTargeter;                                             // 0x0118(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HangingSlotComponent");
		return ptr;
	}


	void PositionConnection(class ASlotConnection* Connection, class APlayController* Controller, struct FVector* outNormal, struct FVector* OutLocation);
	void ConnectAndTargetSlot(const struct FSlotReference& Slot);
	void ConnectAndTarget(class ASlotConnection* Connection);
};


// Class Astro.HarvestableComponentEventListener
// 0x0000 (0x0048 - 0x0048)
class UHarvestableComponentEventListener : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HarvestableComponentEventListener");
		return ptr;
	}


	void OnSecondaryHarvestableItemReleased(class APhysicalItem* Item);
	void OnPrimaryHarvestableItemReleased(class APhysicalItem* Item);
	void OnHarvestableUprooted();
	void OnHarvestableBuried();
};


// Class Astro.HarvestableComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UHarvestableComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HarvestableComponentContainer");
		return ptr;
	}


	struct FHarvestableComponent STATIC_GetHarvestableComponent(const struct FAstroDatumRef& HarvestableComponentRef, bool* bOutSuccess);
	struct FHarvestableComponent STATIC_FindHarvestableComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.HarvestableSystem
// 0x0000 (0x0030 - 0x0030)
class UHarvestableSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HarvestableSystem");
		return ptr;
	}

};


// Class Astro.HazardActor
// 0x0008 (0x03B0 - 0x03A8)
class AHazardActor : public AActor
{
public:
	float                                              RandomizedSpawnVariance;                                  // 0x03A8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlayerDistance;                                           // 0x03AC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HazardActor");
		return ptr;
	}


	void OnSpawn(class AActor* Target);
};


// Class Astro.HazardSpawner
// 0x0050 (0x0140 - 0x00F0)
class UHazardSpawner : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x00F0(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HazardSpawner");
		return ptr;
	}

};


// Class Astro.HazardTargetingData
// 0x0010 (0x0038 - 0x0028)
class UHazardTargetingData : public UObject
{
public:
	TArray<class AActor*>                              Targets;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HazardTargetingData");
		return ptr;
	}

};


// Class Astro.HazardTargetingService
// 0x0008 (0x0078 - 0x0070)
class UHazardTargetingService : public UBTService
{
public:
	bool                                               RequireLineOfSight;                                       // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               NearestTargetOnly;                                        // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0072(0x0002) MISSED OFFSET
	float                                              MaximumTargetDistance;                                    // 0x0074(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HazardTargetingService");
		return ptr;
	}

};


// Class Astro.HeightDistributionModifier
// 0x00F0 (0x1750 - 0x1660)
class UHeightDistributionModifier : public UTerrainModifier
{
public:
	float                                              Density;                                                  // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x1664(0x0004) MISSED OFFSET
	TArray<struct FVector>                             ExplicitInstances;                                        // 0x1668(0x0010) (Edit, ZeroConstructor)
	float                                              Width;                                                    // 0x1678(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x167C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Depth;                                                    // 0x1680(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FlattenIntensity;                                         // 0x1684(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Plateau;                                                  // 0x1688(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               SmoothMap;                                                // 0x168C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x168D(0x0003) MISSED OFFSET
	struct FTerrainMaterial                            Material;                                                 // 0x1690(0x0058) (Edit)
	float                                              MapHeight;                                                // 0x16E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MapPlateauUpper;                                          // 0x16EC(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MapPlateauLower;                                          // 0x16F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x16F4(0x0004) MISSED OFFSET
	class UTexture2D*                                  HeightMap;                                                // 0x16F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FTerrainHeightLayer>                 MapLayers;                                                // 0x1700(0x0010) (Edit, ZeroConstructor)
	struct FSpatialPartitionChannels                   Channels;                                                 // 0x1710(0x0018) (Edit)
	int                                                version;                                                  // 0x1728(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xC];                                       // 0x172C(0x000C) MISSED OFFSET
	TArray<unsigned char>                              HeightMapData;                                            // 0x1738(0x0010) (ZeroConstructor)
	uint16_t                                           HeightMapWidth;                                           // 0x1748(0x0002) (ZeroConstructor, IsPlainOldData)
	uint16_t                                           HeightMapHeight;                                          // 0x174A(0x0002) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x174C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HeightDistributionModifier");
		return ptr;
	}

};


// Class Astro.HollowCoreModifier
// 0x0010 (0x1670 - 0x1660)
class UHollowCoreModifier : public UTerrainModifier
{
public:
	float                                              CoreRadius;                                               // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmoothingZoneSize;                                        // 0x1664(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x1668(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HollowCoreModifier");
		return ptr;
	}

};


// Class Astro.HornComponent
// 0x0058 (0x0148 - 0x00F0)
class UHornComponent : public UActorComponent
{
public:
	EHornType                                          HornType;                                                 // 0x00F0(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F0(0x0003) FIX WRONG TYPE SIZE OF PREVIOUS PROPERTY
	float                                              MinActivationDuration;                                    // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnOneOffSoundPlayed;                                      // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOneOffSoundCompleted;                                   // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoopSoundStarted;                                       // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLoopSoundStopped;                                       // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0138(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HornComponent");
		return ptr;
	}


	void OneOffSoundPlayed();
	void OneOffSoundCompleted();
	void LoopSoundStopped();
	void LoopSoundStarted();
};


// Class Astro.HoverComponent
// 0x0010 (0x0100 - 0x00F0)
class UHoverComponent : public UActorComponent
{
public:
	float                                              SpinSpeed;                                                // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RotateAxis;                                               // 0x00F4(0x000C) (BlueprintVisible, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HoverComponent");
		return ptr;
	}

};


// Class Astro.HoverDelayComponent
// 0x0038 (0x0128 - 0x00F0)
class UHoverDelayComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    HoverBegin;                                               // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    HoverEnd;                                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              HoverBeginDelay;                                          // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HoverEndDelay;                                            // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FTimerHandle                                HoverTimer;                                               // 0x0118(0x0008)
	bool                                               Hovering;                                                 // 0x0120(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0121(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.HoverDelayComponent");
		return ptr;
	}


	void OnTimerEnd();
	void OnHoverEnd(class AActor* Actor);
	void OnHoverBegin(class AActor* Actor);
};


// Class Astro.IconRigNative
// 0x0058 (0x0400 - 0x03A8)
class AIconRigNative : public AActor
{
public:
	class UStaticMeshComponent*                        PrimaryMesh;                                              // 0x03A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        SecondaryMesh;                                            // 0x03B0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        TertiaryMesh;                                             // 0x03B8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SecondaryIconLocation;                                    // 0x03C0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             SecondaryDecal;                                           // 0x03C8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDecalComponent*                             TerrainFunctionDecal;                                     // 0x03D0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DecalMaterialFunction;                                    // 0x03D8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UMaterialInstanceDynamic*                    DecalMaterialSecondary;                                   // 0x03E0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             IconsLocation;                                            // 0x03E8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             AstroIcon;                                                // 0x03F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             BackpackIcon;                                             // 0x03F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.IconRigNative");
		return ptr;
	}


	void DoTeriaryIcons(bool astroVisible, bool backpackVisible, bool astroSeated);
};


// Class Astro.InputKeyToIconMapping
// 0x00F0 (0x0120 - 0x0030)
class UInputKeyToIconMapping : public UDataAsset
{
public:
	TMap<struct FKey, struct FInputKeyToIconMappingEntry> KeyToIconMappingXbox;                                     // 0x0030(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<struct FKey, struct FInputKeyToIconMappingEntry> KeyToIconMappingPS4;                                      // 0x0080(0x0050) (Edit, BlueprintVisible, ZeroConstructor)
	TMap<struct FKey, struct FInputKeyToIconMappingEntry> KeyToIconMappingKeyboardMouse;                            // 0x00D0(0x0050) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.InputKeyToIconMapping");
		return ptr;
	}

};


// Class Astro.AstroDiscreteInputDefinitionDatabase
// 0x0050 (0x0080 - 0x0030)
class UAstroDiscreteInputDefinitionDatabase : public UDataAsset
{
public:
	TMap<EAstroDiscreteInputOptionPlayerFacing, struct FAstroDiscreteInputDefinition> DiscreteInputDefinitions;                                 // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroDiscreteInputDefinitionDatabase");
		return ptr;
	}

};


// Class Astro.ItemCatalog
// 0x0060 (0x0088 - 0x0028)
class UItemCatalog : public UObject
{
public:
	TMap<class UItemCatalogCategoryDefinition*, struct FItemCatalogCategory> Catalog;                                                  // 0x0028(0x0050) (ZeroConstructor)
	unsigned char                                      bIsCreativeCatalog : 1;                                   // 0x0078(0x0001)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0079(0x0007) MISSED OFFSET
	class UItemCatalogCategoryDefinition*              AllCatalogItemsCategory;                                  // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCatalog");
		return ptr;
	}

};


// Class Astro.ItemCatalogCategoryDefinition
// 0x0018 (0x0048 - 0x0030)
class UItemCatalogCategoryDefinition : public UDataAsset
{
public:
	struct FText                                       CategoryName;                                             // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCatalogCategoryDefinition");
		return ptr;
	}

};


// Class Astro.ItemCatalogData
// 0x0038 (0x0068 - 0x0030)
class UItemCatalogData : public UDataAsset
{
public:
	unsigned char                                      bIsCreativeModeOnly : 1;                                  // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCreativeSpawnPackaged : 1;                               // 0x0030(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                UnlockCost;                                               // 0x0034(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsBaseItem : 1;                                          // 0x0038(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class UItemCatalogCategoryDefinition*              Category;                                                 // 0x0040(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CategorySequenceNumber;                                   // 0x0048(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	class UClass*                                      BaseItemType;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EItemVariantType                                   VariantType;                                              // 0x0058(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                VariationSequenceNumber;                                  // 0x005C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 CatalogMesh;                                              // 0x0060(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCatalogData");
		return ptr;
	}

};


// Class Astro.ItemCatalogEntryDisplay
// 0x0060 (0x0088 - 0x0028)
class UItemCatalogEntryDisplay : public UObject
{
public:
	unsigned char                                      UnknownData00[0x60];                                      // 0x0028(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCatalogEntryDisplay");
		return ptr;
	}


	void K2_SetVisible(bool bIsVisible);
};


// Class Astro.ItemCatalogEntrySpindleDisplay
// 0x00B8 (0x0140 - 0x0088)
class UItemCatalogEntrySpindleDisplay : public UItemCatalogEntryDisplay
{
public:
	struct FScriptMulticastDelegate                    OnItemIconMeshClicked;                                    // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               bItemIconMeshesAreClickable;                              // 0x0098(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	class UMaterialInterface*                          UnavailableItemIconMaterial;                              // 0x00A0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          AvailableItemIconMaterial;                                // 0x00A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          UnlockedItemIconMaterial;                                 // 0x00B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UStaticMeshComponent*>                ItemIconMeshComponents;                                   // 0x00B8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	class UMeshComponent*                              ItemIconMeshParent;                                       // 0x00C8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TArray<struct FName>                               ItemIconMeshSockets;                                      // 0x00D0(0x0010) (ZeroConstructor, Transient)
	struct FItemCatalogEntry                           CatalogEntry;                                             // 0x00E0(0x0058) (BlueprintVisible, BlueprintReadOnly)
	int                                                SelectedItemContinuousIndex;                              // 0x0138(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x013C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCatalogEntrySpindleDisplay");
		return ptr;
	}


	void SetItemIconMeshComponents(class UMeshComponent* newItemIconMeshParent, TArray<class UStaticMeshComponent*> newItemIconMeshComponents);
	void ItemIconMeshClicked(class UPrimitiveComponent* clickedComponent, const struct FKey& ButtonPressed);
	int ContinuousIndexToItemIconMeshIndex(int continuousIndex);
};


// Class Astro.ItemComponent
// 0x0088 (0x0178 - 0x00F0)
class UItemComponent : public UActorComponent
{
public:
	float                                              StartingAmount;                                           // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               Discrete;                                                 // 0x00F4(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F5(0x0003) MISSED OFFSET
	float                                              Capacity;                                                 // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnChanged;                                                // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDrained;                                                // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    PostDrained;                                              // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFilled;                                                 // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLiteralItemTypeChangedAuthority;                        // 0x0140(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnStoredSubItemTypeChangedAuthority;                      // 0x0150(0x0010) (ZeroConstructor, InstancedReference)
	class UClass*                                      ItemType;                                                 // 0x0160(0x0008) (Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	class UClass*                                      storedSubItemType;                                        // 0x0168(0x0008) (Edit, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	int                                                Amount;                                                   // 0x0170(0x0004) (Edit, Net, ZeroConstructor, DisableEditOnTemplate, EditConst, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0174(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemComponent");
		return ptr;
	}


	int TakeItemRateDelta(float Rate, float DeltaTime);
	int TakeItemRate(float Rate);
	int TakeItem(int TakeAmount);
	void SetItemUsingFullness(class UClass* ItemType, float fullness, bool suppressItemDrainedFillChangeEventBroadcast);
	void SetItem(class UClass* ItemType, int Amount, bool suppressItemDrainedFillChangeEventBroadcast);
	float SetAmountUsingFullness(float newFullness, bool suppressItemDrainedFillChangeEventBroadcast);
	int SetAmount(int NewAmount, bool suppressItemDrainedFillChangeEventBroadcast);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void OnRep();
	bool IsFull();
	bool IsEmptyContainer();
	bool IsEmpty();
	bool IsContainer();
	bool HaveItem(class UClass* Type);
	bool HasStoredItem();
	class UClass* GetStoredSubItemTypeClass();
	class UItemType* GetStoredSubItemTypeCDO();
	float GetRecipeAmount();
	class UClass* GetLiteralItemTypeClass();
	class UItemType* GetLiteralItemTypeCDO();
	int GetInstanceCount(int maxNumInstances);
	class UClass* GetFunctionalItemTypeClass();
	class UItemType* GetFunctionalItemTypeCDO();
	float GetFullness();
	int GetAmount();
	class UItemComponent* STATIC_GetActorItemComponent(class AActor* Actor);
	void ForceChangePrimaryItemTypeAndStoredSubItemTypeWithAmount(class UClass* primaryItemType, class UClass* storedSubItemType, int Amount, bool suppressItemDrainedFillChangeEventBroadcast);
	void ClearContainer();
	int AddItemRateDelta(class UClass* Type, float Rate, float DeltaTime);
	int AddItemRate(class UClass* Type, float Rate);
	int AddItem(class UClass* Type, int AddAmount, bool Actual);
	bool AcceptsChangeInAmountForItemType(class UClass* itemTypeForChange, bool changeIsPositive);
};


// Class Astro.ItemConversionFormula
// 0x0000 (0x0028 - 0x0028)
class UItemConversionFormula : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemConversionFormula");
		return ptr;
	}

};


// Class Astro.ItemConversionSystem
// 0x0000 (0x0030 - 0x0030)
class UItemConversionSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemConversionSystem");
		return ptr;
	}

};


// Class Astro.ItemConverterComponentEventListener
// 0x0000 (0x0048 - 0x0048)
class UItemConverterComponentEventListener : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemConverterComponentEventListener");
		return ptr;
	}


	void OnItemStateChangedInExternalResourceSlot(class APhysicalItem* Item);
	void OnItemSetInInputSlot(class APhysicalItem* Item);
	void OnItemReleasedFromOutputSlot(class APhysicalItem* Item);
	void OnItemReleasedFromInputSlot(class APhysicalItem* Item);
	void OnItemDestroyedInInputSlot(class APhysicalItem* Item);
};


// Class Astro.ItemConverterComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UItemConverterComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemConverterComponentContainer");
		return ptr;
	}


	struct FItemConverterComponent STATIC_GetItemConverterComponent(const struct FAstroDatumRef& ItemConverterComponentRef, bool* bOutSuccess);
	struct FItemConverterComponent STATIC_FindItemConverterComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.ItemCraftingFormula
// 0x0000 (0x0028 - 0x0028)
class UItemCraftingFormula : public UItemConversionFormula
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemCraftingFormula");
		return ptr;
	}

};


// Class Astro.ItemDriveComponent
// 0x01A0 (0x0290 - 0x00F0)
class UItemDriveComponent : public UActorComponent
{
public:
	float                                              SendEventEvery;                                           // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnPlayFabTitleDataRefreshed;                              // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPlayFabStatisticRefreshed;                              // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TMap<class UClass*, int>                           ItemValues;                                               // 0x0118(0x0050) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FItemDriveReward>                    Rewards;                                                  // 0x0168(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FAstroPlayFabEventData                      ActiveEvent;                                              // 0x0178(0x0078) (BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      ExoRequestRocketClass;                                    // 0x01F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTradeShipDatabase*                          TradeShipDatabase;                                        // 0x01F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PredictedItemDriveProgress;                               // 0x0200(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	int                                                OfficialItemDriveProgress;                                // 0x0204(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	TArray<struct FPendingInGameItemRewards>           UnclaimedPhysicalItemRewards;                             // 0x0208(0x0010) (Net, ZeroConstructor, SaveGame)
	struct FProgressPredictionData                     PredictedProgress;                                        // 0x0218(0x0008) (Net, IsPlainOldData)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0220(0x0020) MISSED OFFSET
	TMap<class UClass*, int>                           ItemEventSendCache;                                       // 0x0240(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemDriveComponent");
		return ptr;
	}


	void OnRep_UnclaimedPhysicalItemRewards();
	void OnRep_PredictedProgress();
	void HandlePlayerEventSent(bool success, const struct FString& EventName, int eventId);
	void HandlePlayerEventResponse(bool success, const struct FString& EventName, int eventId);
	int GetItemValue(class UClass* ItemType);
	struct FText GetEventDisplayName();
	struct FText GetEventDisplayDescription();
	void AuthorityDisplayDeliveryNotification(const struct FText& Message, class UTexture* badge);
	int AuthorityAddItemsInSlotsToSendCache(TArray<struct FSlotReference> slots);
};


// Class Astro.ItemList
// 0x0010 (0x0040 - 0x0030)
class UItemList : public UDataAsset
{
public:
	TArray<class UClass*>                              ItemTypes;                                                // 0x0030(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemList");
		return ptr;
	}

};


// Class Astro.ItemListWeighted
// 0x0010 (0x0038 - 0x0028)
class UItemListWeighted : public UObject
{
public:
	TArray<struct FItemSpecifier>                      ItemTypes;                                                // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemListWeighted");
		return ptr;
	}


	class UClass* PickItem();
	class UItemListWeighted* STATIC_ItemSpawnListDefault(class UClass* Type);
};


// Class Astro.ItemPad
// 0x0040 (0x02F0 - 0x02B0)
class UItemPad : public USceneComponent
{
public:
	bool                                               AutoSpawn;                                                // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ManuallyReplicatePadTransform;                            // 0x02B1(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x02B2(0x0006) MISSED OFFSET
	class UClass*                                      PadClass;                                                 // 0x02B8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnSpawnPad;                                               // 0x02C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDestroyPad;                                             // 0x02D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class AItemPadActor*                               Pad;                                                      // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x02E8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemPad");
		return ptr;
	}


	void StartInWorld();
	void SpawnPad(bool withTool, class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void ReleaseFromSlot(bool NewOwner);
	void PlaceInSlot();
	void PickUpFromWorld(bool PhysicalMovement);
	void OnRep_Pad();
	void MotionStateChanged();
	void EmplaceInSlot();
	void DropInWorld(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	class UItemPad* STATIC_ActorItemPad(class AActor* Actor);
};


// Class Astro.ItemPadActor
// 0x0010 (0x03B8 - 0x03A8)
class AItemPadActor : public AActor
{
public:
	class USceneComponent*                             BaseLocation;                                             // 0x03A8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UItemPad*                                    OwnerComponent;                                           // 0x03B0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, SaveGame, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemPadActor");
		return ptr;
	}


	bool ShouldDestroyOnPickup();
	void OnSpawn(bool withTool, class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void OnOwnerDestroyed(class AActor* deletingOwner);
};


// Class Astro.ScrapConversionTable
// 0x0050 (0x0080 - 0x0030)
class UScrapConversionTable : public UDataAsset
{
public:
	TMap<class UClass*, float>                         ScrapConversionTable;                                     // 0x0030(0x0050) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ScrapConversionTable");
		return ptr;
	}

};


// Class Astro.ItemScrappingFormula
// 0x0000 (0x0028 - 0x0028)
class UItemScrappingFormula : public UItemConversionFormula
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemScrappingFormula");
		return ptr;
	}

};


// Class Astro.ItemStatics
// 0x0000 (0x0028 - 0x0028)
class UItemStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemStatics");
		return ptr;
	}


	bool STATIC_WillCraftItem(TArray<struct FSlotReference> InputSlots, const struct FSlotReference& outputSlot, TArray<class UClass*> ItemTypes);
	int STATIC_TryCraftItemDelta(TArray<struct FSlotReference> InputSlots, const struct FSlotReference& outputSlot, TArray<class UClass*> ItemTypes, float Rate, float DeltaTime);
	int STATIC_TryCraftItem(TArray<struct FSlotReference> InputSlots, const struct FSlotReference& outputSlot, TArray<class UClass*> ItemTypes, float Rate);
	class APhysicalItem* STATIC_SpawnDeployablePackagedItem(class UObject* WorldContextObject, class UClass* PhysicalItemClassPackagedItemWillContain, const struct FTransform& SpawnTransform);
	int STATIC_SmallItemAmountDelta();
	bool STATIC_ResourcePassesFiltrationList(class UClass* ItemToTest, class UClass* FiltrationList, ESlottableItemsFiltrationListBehavior FiltrationBehavior);
	bool STATIC_RemoveItemFromBundleAndPlaceOnGroundNearby(class APhysicalItem* BundledItem, const struct FVector& OffsetForGroundUnbundling, bool bPretendAsIfInAuxSlot);
	float STATIC_RecipeFromAmount(int Amount);
	class UItemType* STATIC_PhysicalItemTypeCDO(class UClass* PhysicalItemClass);
	bool STATIC_PhysicalItemResetItemStartingAmountAndCapacityToClassDefaults(class APhysicalItem* PhysicalItem);
	class UClass* STATIC_PhysicalItemGetDefaultLiteralItemTypeClass(class UClass* PhysicalItemClass);
	class APhysicalItem* STATIC_PhysicalItemDefault(class UClass* PhysicalItemClass);
	struct FRecipe STATIC_MakeItemRecipeFromSlots(TArray<struct FSlotReference> itemSlots);
	struct FRecipe STATIC_MakeItemRecipe(TArray<class UClass*> ItemTypes);
	int STATIC_ItemUnitAmount();
	bool STATIC_IsStoredSubItemType(class UClass* ItemType);
	bool STATIC_IsScannableStatusValid(const struct FScannableStatus& Status);
	bool STATIC_IsRecipeValid(const struct FRecipe& Recipe);
	bool STATIC_IsPackageableItemType(class UClass* ItemType);
	bool STATIC_IsItemPartOfRecipe(const struct FRecipe& Recipe, class UClass* ItemType);
	bool STATIC_IsDeployablePackageItemType(class UClass* ItemType);
	bool STATIC_IsContainerItemType(class UClass* ItemType);
	struct FText STATIC_GetUseContextVerb(EUseContext Context);
	class UClass* STATIC_GetPackageTypeForItem(class APhysicalItem* ItemToPackage);
	struct FText STATIC_GetExamineVerb();
	struct FText STATIC_GetCraftingSourcesTooltipDescription(class UClass* Item);
	class UClass* STATIC_FindRecipeTarget(const struct FRecipe& Recipe, TArray<class UClass*> ItemTypes);
	void STATIC_DestroyItemAndAllSlottedItemsRecursively(class APhysicalItem* ItemToDestroy);
	int STATIC_ConvertDeformationDeltaToSedimentAmount(float deformationDelta, float SedimentDeformationRatio);
	bool STATIC_CanSwapHeldItemWithSlottedItem(class APhysicalItem* HeldItem, class APhysicalItem* SlottedItem);
	bool STATIC_CanHeldItemInteractWithTargetItem(class APhysicalItem* HeldItem, class APhysicalItem* hitItem);
	int STATIC_AmountFromRecipe(float Amount);
	int STATIC_AmountFromRate(float Rate, float DeltaSeconds);
};


// Class Astro.ItemTradeValueTable
// 0x0050 (0x0080 - 0x0030)
class UItemTradeValueTable : public UDataAsset
{
public:
	TMap<class UClass*, float>                         ItemTradeValueTable;                                      // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemTradeValueTable");
		return ptr;
	}

};


// Class Astro.ItemType
// 0x00B8 (0x0160 - 0x00A8)
class UItemType : public UControlSymbol
{
public:
	unsigned char                                      bDestroyOnAddDeformation : 1;                             // 0x00A8(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00A9(0x0003) MISSED OFFSET
	unsigned char                                      Indestructible : 1;                                       // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      IsVolatile : 1;                                           // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      IsPower : 1;                                              // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      IsOxygen : 1;                                             // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      CreativeSpawnEmpty : 1;                                   // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UseSquareIconBackground : 1;                              // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bCanBeScrapped : 1;                                       // 0x00AC(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      bApplyTintToHarvestActors : 1;                            // 0x00AC(0x0001) (Edit)
	unsigned char                                      bIsUnrepackageable : 1;                                   // 0x00AD(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	EItemStorageBehavior                               InternalStorageBehavior;                                  // 0x00AE(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00AF(0x0001) MISSED OFFSET
	struct FName                                       ItemRepackageAudioSwitch;                                 // 0x00B0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<class UClass*>                              ContainerSubtypeWhitelist;                                // 0x00B8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FLinearColor                                MaterialColor;                                            // 0x00C8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              TerrainCollectionMultiplier;                              // 0x00D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	class UStaticMesh*                                 TerrainCollectionMesh;                                    // 0x00E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 TerrainVolumeMesh;                                        // 0x00E8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      PickupActor;                                              // 0x00F0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultContainerType;                                     // 0x00F8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      UnbundleType;                                             // 0x0100(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      BundleType;                                               // 0x0108(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DefaultContainerIndicatorType;                            // 0x0110(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FRecipe                                     ConstructionRecipe;                                       // 0x0118(0x0010) (Edit)
	bool                                               bHasAltConstructionRecipe;                                // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0129(0x0007) MISSED OFFSET
	struct FRecipe                                     AltConstructionRecipe;                                    // 0x0130(0x0010) (Edit)
	class UItemCatalogData*                            CatalogData;                                              // 0x0140(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UResearchSubjectDefinition*                  ResearchSubjectDefinition;                                // 0x0148(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, IsPlainOldData)
	class UTexture*                                    CrateOverlayTexture;                                      // 0x0150(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  WidgetIcon;                                               // 0x0158(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemType");
		return ptr;
	}


	struct FRecipe GetConstructionRecipe();
};


// Class Astro.JetpackItem
// 0x0070 (0x06D0 - 0x0660)
class AJetpackItem : public APhysicalItem
{
public:
	class UFuelConsumerComponent*                      FuelConsumerComponent;                                    // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UJetpackMovementOverrideComponent*           JetpackMovementOverride;                                  // 0x0668(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class AAstroCharacter*                             AstroCharacter;                                           // 0x0670(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ABackpack*                                   Backpack;                                                 // 0x0678(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	struct FVector                                     NozzleDirection;                                          // 0x0680(0x000C) (Net, IsPlainOldData)
	float                                              FuelPortionAmount;                                        // 0x068C(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0690(0x0004) MISSED OFFSET
	float                                              JumpActivationTime;                                       // 0x0694(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FGuid                                       Guid;                                                     // 0x0698(0x0010) (Net, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x22];                                      // 0x06A8(0x0022) MISSED OFFSET
	ERemainingFuelState                                RemainingFuelStateReplicated;                             // 0x06CA(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x06CB(0x0002) MISSED OFFSET
	unsigned char                                      bJetpackActive : 1;                                       // 0x06CD(0x0001) (Net)
	unsigned char                                      UnknownData03[0x2];                                       // 0x06CE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.JetpackItem");
		return ptr;
	}


	void SendStateTelemetry();
	void SendPostRateLimitTelemetry();
	void OnUpdateNozzleDirection(const struct FVector& NewNozzleDirection);
	void OnSlottedItemsChanged();
	void OnRep_RemainingFuelState();
	void OnRep_NozzleDirection();
	void OnRep_JetpackActive();
	void OnRep_FuelPortionAmount();
	void OnPortionDepleted();
	void OnPortionChanged(float portionUsed);
	void OnMovementOverrideTick(float DeltaTime);
	void OnLanded(TEnumAsByte<EPhysicalSurface> GroundSurface);
	void OnJumpStopped();
	void OnJumpStarted();
	void OnJumpingTick(float DeltaTime);
	void OnJetpackStowed();
	void OnJetpackDeployed(const struct FVector& NeutralPosition, bool bMirrored);
	void OnJetpackActived(bool Activated);
	void OnItemSelectionChanged(class APhysicalItem* Item);
	void OnItemDrained();
	void OnFuelRecipeAmountChanged(float Amount);
	void OnFuelIsLow(bool bIsLow);
	void OnEndOperation();
	void OnCreativeFreeFuelChanged(bool State);
	void OnClientActionReleased();
	void OnClientActionPressed();
	void OnBackpackCracked();
	void OnAuthorityOverrideRemoved();
	void OnAuthorityOverrideAdded();
	void OnAttemptedActivationNoFuel();
	void OnAllFuelDepleted();
	void HandleRemovedFromSlot(bool NewOwner);
	void HandlePlacedInSlot();
	void HandleOnSpawnedInSlot();
	void HandleFullyEmplaced();
};


// Class Astro.JetpackMovementOverrideComponent
// 0x00D8 (0x0210 - 0x0138)
class UJetpackMovementOverrideComponent : public UAstroCharacterMovementOverrideComponent
{
public:
	struct FVector                                     ThrustDirection;                                          // 0x0138(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              AllJetpacksThrustVertical;                                // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SingleJetpackThrustVertical;                              // 0x0148(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AllJetpacksThrustForward;                                 // 0x014C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SingleJetpackThrustForward;                               // 0x0150(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AllJetpacksVerticalSpeedScalar;                           // 0x0154(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SingleJetpackVerticalSpeedScalar;                         // 0x0158(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AllJetpacksForwardSpeedScalar;                            // 0x015C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SingleJetpackForwardSpeedScalar;                          // 0x0160(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MaxJetpackCount;                                          // 0x0164(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThrustDirectionChangeRate;                                // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MaxForwardAccelerationPercent;                            // 0x016C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CustomGravityScaler;                                      // 0x0170(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x90];                                      // 0x0174(0x0090) MISSED OFFSET
	unsigned char                                      UseCustomGravityScalar : 1;                               // 0x0204(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0205(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.JetpackMovementOverrideComponent");
		return ptr;
	}

};


// Class Astro.JourneyOffsetComponent
// 0x0008 (0x0130 - 0x0128)
class UJourneyOffsetComponent : public UCameraModifierComponent
{
public:
	float                                              OffsetAmount;                                             // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.JourneyOffsetComponent");
		return ptr;
	}

};


// Class Astro.LandingPadComponent
// 0x0050 (0x0300 - 0x02B0)
class ULandingPadComponent : public USceneComponent
{
public:
	class UClass*                                      PlanetMarkerType;                                         // 0x02B0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumOperationalTilt;                                   // 0x02B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02BC(0x0004) MISSED OFFSET
	float                                              SkyObstructionTestRadius;                                 // 0x02C0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	struct FName                                       LandingPadSlotName;                                       // 0x02C8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlotReference                              LandingPadSlotRef;                                        // 0x02D0(0x0010) (BlueprintVisible, BlueprintReadOnly, Transient)
	class AActor*                                      PlanetMarker;                                             // 0x02E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	class APhysicalItem*                               OwnerItem;                                                // 0x02E8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      bDeployed : 1;                                            // 0x02F0(0x0001) (SaveGame)
	unsigned char                                      bSkipOrientationValidation : 1;                           // 0x02F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bAutomaticDeployment : 1;                                 // 0x02F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bSkyObstructed : 1;                                       // 0x02F0(0x0001) (SaveGame)
	unsigned char                                      UnknownData02[0xF];                                       // 0x02F1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LandingPadComponent");
		return ptr;
	}


	void OnOwnerItemMotionStateChanged();
	void OnItemSetInLandingPadSlot(class APhysicalItem* Item);
	void OnItemRemovedFromLandingPadSlot(class APhysicalItem* Item);
	bool IsOccupied();
	bool CanDeploy();
	bool CanCheckObstruction();
	void AuthorityTeardownLandingPad();
	bool AuthorityDeployLandingPad();
};


// Class Astro.LevelingBlockComponent
// 0x0050 (0x0140 - 0x00F0)
class ULevelingBlockComponent : public UActorComponent
{
public:
	float                                              StampSize;                                                // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        PreviewMesh;                                              // 0x00F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USlotBehaviorTerrain*                        BehaviorTerrain;                                          // 0x0100(0x0008) (ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    particles;                                                // 0x0108(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x24];                                      // 0x0110(0x0024) MISSED OFFSET
	unsigned char                                      VisibilityPlaced : 1;                                     // 0x0134(0x0001) (Net)
	unsigned char                                      UnknownData02[0xB];                                       // 0x0135(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LevelingBlockComponent");
		return ptr;
	}


	void SetPreviewVisibility(bool IsVisible, ELevelingBlockVizSource sourceId);
	void OnReplicated_VisibilitySourceMask();
	void MulticastStartLeveling();
	void MulticastPlayOrStopFX(bool bPlayParticles, bool PlaySound, bool isSuccess, bool playRespawnSound);
	void CancelOperation(bool forceStopParticles);
	void AddTrueFlatStump();
};


// Class Astro.LocalizationCultureOptions
// 0x0050 (0x0080 - 0x0030)
class ULocalizationCultureOptions : public UDataAsset
{
public:
	TMap<struct FString, struct FString>               DisplayLanguageToCultureMapping;                          // 0x0030(0x0050) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LocalizationCultureOptions");
		return ptr;
	}

};


// Class Astro.LockEventListener
// 0x0000 (0x0048 - 0x0048)
class ULockEventListener : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockEventListener");
		return ptr;
	}


	void OnLockLockedStateChanged(const struct FAstroDatumRef& lockRef, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.LockableComponentContainer
// 0x0030 (0x0070 - 0x0040)
class ULockableComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockableComponentContainer");
		return ptr;
	}


	struct FLockableComponent STATIC_GetLockableComponent(const struct FAstroDatumRef& lockableComponentRef, bool* bOutSuccess);
	struct FLockableComponent STATIC_FindLockableComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.LockingMechanismEventListener
// 0x0000 (0x0048 - 0x0048)
class ULockingMechanismEventListener : public UAstroEntityComponentSubobject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockingMechanismEventListener");
		return ptr;
	}


	void OnLockingMechanismOpenStateChanged(class ULockingMechanism* changedLockingMechanism, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.LockComponentContainer
// 0x0030 (0x0070 - 0x0040)
class ULockComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockComponentContainer");
		return ptr;
	}


	struct FLockComponent STATIC_GetLockComponent(const struct FAstroDatumRef& lockComponentRef, bool* bOutSuccess);
	struct FLockComponent STATIC_FindLockComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.LockingMechanismDefinition
// 0x0010 (0x0050 - 0x0040)
class ULockingMechanismDefinition : public UAstroEntityComponentSubobjectDefinition
{
public:
	unsigned char                                      bCanBeClosedAfterOpening : 1;                             // 0x0040(0x0001) (Edit)
	unsigned char                                      bAutoClosesAfterOpening : 1;                              // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0041(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockingMechanismDefinition");
		return ptr;
	}

};


// Class Astro.LockingMechanism
// 0x0018 (0x0060 - 0x0048)
class ULockingMechanism : public UAstroEntityComponentSubobject
{
public:
	struct FScriptMulticastDelegate                    OnOpenStateChanged;                                       // 0x0048(0x0010) (ZeroConstructor, InstancedReference)
	unsigned char                                      bIsOpen : 1;                                              // 0x0058(0x0001) (SaveGame)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0059(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockingMechanism");
		return ptr;
	}


	bool IsOpen();
};


// Class Astro.LockingMechanismView
// 0x0028 (0x0050 - 0x0028)
class ULockingMechanismView : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnOpenChanged;                                            // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bIsOpen : 1;                                              // 0x0038(0x0001) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	class ULockingMechanism*                           LinkedLockingMechanism;                                   // 0x0040(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class ULockingMechanismDefinition*                 Definition;                                               // 0x0048(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LockingMechanismView");
		return ptr;
	}


	void OnRep_IsOpen();
	void OnOpenStateChanged(class ULockingMechanism* LockingMechanism, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.LodAnchorComponent
// 0x0020 (0x0110 - 0x00F0)
class ULodAnchorComponent : public UActorComponent
{
public:
	struct FComponentReference                         BeaconReference;                                          // 0x00F0(0x0018) (Edit, DisableEditOnInstance)
	ELodAnchorState                                    IsAnchored;                                               // 0x0108(0x0001) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bIsActivated : 1;                                         // 0x0109(0x0001) (SaveGame)
	unsigned char                                      UnknownData00[0x6];                                       // 0x010A(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.LodAnchorComponent");
		return ptr;
	}


	bool UpdateInternal(const struct FVector& NewPosition);
	void ToggleActivated();
	void ShowPreviz(bool show);
	void SetBeaconVisibility(bool Enabled);
	void SetActivated(bool makeActive, bool forceUpdate);
	void ServerChangeActivated(bool makeActive, bool forceUpdate);
	void OnReplicated_IsAnchored();
	void HandleDeformed(const struct FDeformationParams& params);
};


// Class Astro.MediumBattery
// 0x0040 (0x06A0 - 0x0660)
class AMediumBattery : public APhysicalItem
{
public:
	class UMaterialInstanceDynamic*                    RingMaterial;                                             // 0x0660(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0668(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             RingMeshComponent;                                        // 0x0670(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FComponentReference                         RingMeshReference;                                        // 0x0678(0x0018) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0690(0x000C) MISSED OFFSET
	float                                              CurrentChargePercent;                                     // 0x069C(0x0004) (Net, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.MediumBattery");
		return ptr;
	}


	void OnRep();
	void OnChargeLevelChangedEvent(float NewCharge, float ChargeDelta);
};


// Class Astro.MeshDistributionBaseComponent
// 0x0040 (0x16B0 - 0x1670)
class UMeshDistributionBaseComponent : public UTerrainPlacementComponent
{
public:
	float                                              Radius;                                                   // 0x1670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleFromCenterDistance;                                  // 0x1674(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1675(0x0003) MISSED OFFSET
	class UStaticMesh*                                 Mesh;                                                     // 0x1678(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x1680(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ItemCollectionMultiplier;                                 // 0x1684(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LodMultiplier;                                            // 0x1688(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MeshScaleMin;                                             // 0x168C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MeshScaleMax;                                             // 0x1690(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               UseParentMaterial;                                        // 0x1694(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x1695(0x0003) MISSED OFFSET
	class UClass*                                      ActorOverride;                                            // 0x1698(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      DestroySpawnActor;                                        // 0x16A0(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              OverrideTerrainCollisionRadius;                           // 0x16A8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Collision;                                                // 0x16AC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               TerrainOverlap;                                           // 0x16AD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x16AE(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.MeshDistributionBaseComponent");
		return ptr;
	}

};


// Class Astro.MultiActivation
// 0x0008 (0x0078 - 0x0070)
class UMultiActivation : public UActivation
{
public:
	int                                                m_activationCount;                                        // 0x0070(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.MultiActivation");
		return ptr;
	}

};


// Class Astro.MultitoolCameraContext
// 0x0010 (0x0058 - 0x0048)
class UMultitoolCameraContext : public UCameraContext
{
public:
	class UMultiTool*                                  MultiTool;                                                // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.MultitoolCameraContext");
		return ptr;
	}

};


// Class Astro.MultiTool
// 0x0258 (0x0348 - 0x00F0)
class UMultiTool : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	class UClass*                                      PlayerPointSymbol;                                        // 0x0100(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LerpSpeed;                                                // 0x0108(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ActionReadyRatio;                                         // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadCursorSpeed;                                       // 0x0110(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SmallItemMaxDistance;                                     // 0x0114(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FocusMinDistance;                                         // 0x0118(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              IndicatorScale;                                           // 0x011C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TraceDistance;                                            // 0x0120(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlanetTraceDistance;                                      // 0x0124(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PlanetSelectDistance;                                     // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	class UClass*                                      IndicatorClass;                                           // 0x0130(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                BaseToolTier;                                             // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxDistance;                                              // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MaxInteractionWidgetDistance;                             // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               DisplayInteractionWidgetsWhenUsingCursor;                 // 0x0144(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0145(0x0003) MISSED OFFSET
	float                                              SelectionRotateSpeed;                                     // 0x0148(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SelectionRotateAcceleration;                              // 0x014C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DrivingInteractionTooltipExpansionSpeedMultiplier;        // 0x0150(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0154(0x0004) MISSED OFFSET
	class AActor*                                      Indicator;                                                // 0x0158(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ActionReadySelectionAmount;                               // 0x0160(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0164(0x0004) MISSED OFFSET
	class AActor*                                      CursorOverCursorNotifyActor;                              // 0x0168(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      CursorOverCursorNotifySecondaryActor;                     // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         CursorOverCursorNotifyComponent;                          // 0x0178(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               ShowCursor;                                               // 0x0180(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x17];                                      // 0x0181(0x0017) MISSED OFFSET
	class UMultitoolCameraContext*                     CameraContext;                                            // 0x0198(0x0008) (ZeroConstructor, IsPlainOldData)
	class UInputComponent*                             ObjectSelectedInputComponent;                             // 0x01A0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             InteractionWidgetInputComponent;                          // 0x01A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             PlayerDrivingInputComponent;                              // 0x01B0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInputComponent*                             FocusedTooltipInputComponent;                             // 0x01B8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UControlActivatorComponent*                  CharacterControlActivator;                                // 0x01C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               m_currentSelection;                                       // 0x01C8(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	class APhysicalItem*                               PreviousRepSelection;                                     // 0x01D0(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector                                     m_secondaryStartLocation;                                 // 0x01D8(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x01E4(0x0004) MISSED OFFSET
	struct FClickResult                                m_secondaryClick;                                         // 0x01E8(0x0080)
	class UActivation*                                 ToolActive;                                               // 0x0268(0x0008) (ZeroConstructor, IsPlainOldData)
	class UPrimitiveComponent*                         CurrentSelectionComponent;                                // 0x0270(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      CurrentDrivingActor;                                      // 0x0278(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class UCrackableActorComponent*>            CurrentCrackedComponents;                                 // 0x0280(0x0010) (ExportObject, ZeroConstructor)
	TArray<struct FInteractionTarget>                  InteractionOverrideStack;                                 // 0x0290(0x0010) (ZeroConstructor)
	class UTooltipComponent*                           CurrentFocusedTooltip;                                    // 0x02A0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           DrivingTooltip;                                           // 0x02A8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               SwapItemNewItem;                                          // 0x02B0(0x0008) (ZeroConstructor, IsPlainOldData)
	class APhysicalItem*                               SwapItemCurrentlyHeld;                                    // 0x02B8(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x58];                                      // 0x02C0(0x0058) MISSED OFFSET
	struct FSlotClickResult                            LastClickSlot;                                            // 0x0318(0x0018)
	struct FSlotReference                              LastHoverSlot;                                            // 0x0330(0x0010)
	unsigned char                                      UnknownData08[0x8];                                       // 0x0340(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.MultiTool");
		return ptr;
	}


	bool TryToggleActorCracked(class AActor* targetActor, bool bIsClickInteraction);
	void StowDeformTool();
	void ServerTraceForSlotConnection(class APlayController* Controller, class ASlotConnection* SlotConnection, const struct FVector& TraceStart, const struct FVector& traceDirection);
	void ServerSwapItem(class APhysicalItem* ItemInSlot, class APhysicalItem* CurrentlyHeldItem, bool bIsTerrainComponent, class UPrimitiveComponent* HitComponent, const struct FVector& HitLocation, const struct FVector_NetQuantizeNormal& HitNormal);
	void ServerSlotItem(class APhysicalItem* Actor, const struct FSlotReference& Slot, int SubslotIndex);
	void ServerSelectItem(class APhysicalItem* Item, bool bPartOfSwap);
	void ServerSelectionDuplicate(class APhysicalItem* Item);
	void ServerSelectionDelete(class APhysicalItem* Item);
	void ServerQuickClick(class APhysicalItem* Item);
	void ServerMakeSlotConnection(class ASlotConnection* Actor, class UPrimitiveComponent* hitPrimitive, const struct FVector& HitLocation, const struct FVector_NetQuantizeNormal& HitNormal, const struct FSlotReference& Slot);
	void ServerEmplaceInSlot(class APhysicalItem* Item, const struct FSlotReference& Slot, int SubslotIndex, bool PhysicalMovement);
	void ServerDropItem(class APhysicalItem* Item, class UPrimitiveComponent* HitComponent, bool terrainComponent, const struct FVector& HitLocation, const struct FVector_NetQuantizeNormal& HitNormal);
	void ServerCrackCrackableActorComponent(class UCrackableActorComponent* crackedCrackableActorComponent);
	void ServerCloseCrackableActorComponent(class UCrackableActorComponent* closedCrackableActorComponent, bool bIsClickInteraction);
	void ServerClearSlotEmplacement(class APhysicalItem* Item);
	void RouteWidgetUseUnhandled(TEnumAsByte<EInputEvent> InputType);
	void RouteInteractionWidgetUseRepeat();
	void RouteInteractionWidgetUseRelease();
	void RouteInteractionWidgetUsePress();
	void RouteInteractionDrivingUseRelease();
	void RouteInteractionDrivingUsePress();
	void RouteInteractionDrivingAux2Release();
	void RouteInteractionDrivingAux2Press();
	void RouteInteractionDrivingAux1Release();
	void RouteInteractionDrivingAux1Press();
	void RouteInteractionCatalogActivated();
	void RouteFocusedTooltipInteractionActivated(const struct FName& ActionName);
	void RouteFocusedTooltipInputUnhandled(TEnumAsByte<EInputEvent> InputType, const struct FName& ActionName);
	void RouteDrivingUseInteraction();
	void RouteDrivingTooltipInteractionActivated(const struct FName& ActionName);
	void RouteDrivingTooltipInputUnhandled(TEnumAsByte<EInputEvent> InputType, const struct FName& ActionName);
	void PushInteractionOverride(class AActor* Actor, class USceneComponent* PivotComponent, class UClickableComponent* clickable);
	void PopInteractionOverride(class AActor* Actor);
	void OnTooltipWantsFocusChange(class UTooltipComponent* TooltipComponent, bool WantsFocus);
	void OnSelectionQuickUse();
	void OnSelectionDuplicate();
	void OnSelectionDelete();
	void OnRep_CurrentSelection();
	void OnPlayerDeathBegin();
	void OnItemReplicationDataChanged(class APhysicalItem* Item);
	void OnInitializeComponent();
	void OnFocusedTooltipActorDestroyed(class AActor* DestroyedActor);
	void OnCrackedCrackableActorComponentCrackedChanged(class UCrackableActorComponent* CrackableActorComponent, bool bIsCracked);
	void MouseDownPickupItem(class APhysicalItem* Item, class UPrimitiveComponent* Component, bool snapToCursor);
	bool IsHoldingItem();
	class AActor* GetCatalogActor();
	void DropItem();
	void DoSecondaryInteraction();
	bool DidInteractionEndThisFrame();
	bool CursorControlActive();
	void CloseAllOpenCrackables();
	void ClientSwapHeldItemDropped();
	void ClientSwapFinished();
	void ClientDenyCrackCrackableActorComponent(class UCrackableActorComponent* crackedCrackableActorComponent);
};


// Class Astro.OrbitalNavigationComponent
// 0x02C0 (0x03B0 - 0x00F0)
class UOrbitalNavigationComponent : public UActorComponent
{
public:
	unsigned char                                      bPreventRespawnWhileDriving : 1;                          // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              LaunchLength;                                             // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              OrbitSpeed;                                               // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FTransform                                  LandingOffset;                                            // 0x0100(0x0030) (Edit, IsPlainOldData)
	bool                                               UseLaunchUpVector;                                        // 0x0130(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0131(0x0003) MISSED OFFSET
	float                                              OrbitDistance;                                            // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EasePower;                                                // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LerpPower;                                                // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FOrbitalReplicatedData                      ReplicatedData;                                           // 0x0140(0x00E0) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	bool                                               PhysicsDisabled;                                          // 0x0220(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	class UObject*                                     SelectedTarget;                                           // 0x0228(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MajorForceVector;                                         // 0x0230(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              LaunchTime;                                               // 0x023C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               planetSelection;                                          // 0x0240(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               shouldLaunchUpdate;                                       // 0x0241(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0242(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnLaunchEnd;                                              // 0x0248(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLaunch;                                                 // 0x0258(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUpdateCanLaunch;                                        // 0x0268(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              SourceTime;                                               // 0x0278(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              TargetTime;                                               // 0x027C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              CurrentTime;                                              // 0x0280(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0284(0x0004) MISSED OFFSET
	class UStorageChassisComponent*                    storage;                                                  // 0x0288(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPlanetSelectionChanged;                                 // 0x0290(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              InterplanetaryTravelRange;                                // 0x02A0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FReplicatedOrbitalTimeData                  TimeData;                                                 // 0x02A4(0x0010) (Net)
	unsigned char                                      UnknownData06[0xC];                                       // 0x02B4(0x000C) MISSED OFFSET
	struct FOrbitalReplicatedData                      LastData;                                                 // 0x02C0(0x00E0)
	class ASolarBody*                                  SourceSolarBody;                                          // 0x03A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData07[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.OrbitalNavigationComponent");
		return ptr;
	}


	void SetPlanetSelection(bool Enable);
	void SetActiveLaunchLength(float newLaunchLength);
	void PerformLaunch(class UObject* Target);
	void OnStorageAttachmentsChanged(bool Entered);
	void OnSolarBodyClick(class ASolarBody* SolarBody);
	void OnRep_ReplicatedTimeData();
	void OnRep_ReplicatedData();
	void OnLandClick(class AActor* Actor);
	bool LocalPlayerOnBoard();
	class ASolarBody* GetTargetOrbitingBody();
	float GetLaunchTime();
	bool GetLaunched();
	bool GetLanding();
	bool GetLanded();
	bool GetCanLaunch();
	struct FVector GetCameraUpVector();
	void AuthoritySnapToTarget(class UObject* Target);
	void AuthoritySetInterplanetaryTravelRangeMultiplier(float rangeMultiplier);
	class UOrbitalNavigationComponent* STATIC_ActorOrbitalNavigationComponent(class AActor* Actor);
};


// Class Astro.OrbitControlModifierComponent
// 0x0028 (0x0150 - 0x0128)
class UOrbitControlModifierComponent : public UCameraModifierComponent
{
public:
	bool                                               UsePlanetUp;                                              // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               AffectRotation;                                           // 0x0129(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	float                                              PitchRate;                                                // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              YawRate;                                                  // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadRotateMultiplier;                                  // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MouseSmoothingFactor;                                     // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadSmoothingFactor;                                   // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LookatHeightOffset;                                       // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0144(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.OrbitControlModifierComponent");
		return ptr;
	}

};


// Class Astro.OrientPlanetUpComponent
// 0x0010 (0x1680 - 0x1670)
class UOrientPlanetUpComponent : public UTerrainPlacementComponent
{
public:
	float                                              RandomOrientation;                                        // 0x1670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x1674(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.OrientPlanetUpComponent");
		return ptr;
	}

};


// Class Astro.OutputOrganizationRule
// 0x0010 (0x0080 - 0x0070)
class UOutputOrganizationRule : public USlotOrganizationRule
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0070(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.OutputOrganizationRule");
		return ptr;
	}

};


// Class Astro.OxygenatorComponent
// 0x0030 (0x0120 - 0x00F0)
class UOxygenatorComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSupplyingOxygenChanged;                                 // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOxygenatorEndPlay;                                      // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bRequiresPower : 1;                                       // 0x0110(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bSuppliesOxygenToContainedCharactersOnly : 1;             // 0x0110(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      bIsSupplyingOxygen : 1;                                   // 0x0110(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, Transient)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	class APhysicalItem*                               OwnerItem;                                                // 0x0118(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.OxygenatorComponent");
		return ptr;
	}


	void OnRep_IsSupplyingOxygen();
	void OnOwnerNotFullyPowered();
	void OnOwnerItemRemovedFromSlot(bool bNewOwner);
	void OnOwnerItemPlacedInSlot();
	void OnOwnerFullyPowered();
};


// Class Astro.PackageActor
// 0x0010 (0x0670 - 0x0660)
class APackageActor : public APhysicalItem
{
public:
	class UAstroActionComponent*                       ActionComponent;                                          // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0668(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PackageActor");
		return ptr;
	}


	void Authority_Unpack();
};


// Class Astro.ParentSelectionNoIndicator
// 0x0008 (0x00F8 - 0x00F0)
class UParentSelectionNoIndicator : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ParentSelectionNoIndicator");
		return ptr;
	}

};


// Class Astro.ParentTerrainPlacementComponent
// 0x0000 (0x1670 - 0x1670)
class UParentTerrainPlacementComponent : public UTerrainPlacementComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ParentTerrainPlacementComponent");
		return ptr;
	}

};


// Class Astro.ParticleModuleAstroBase
// 0x0010 (0x0040 - 0x0030)
class UParticleModuleAstroBase : public UParticleModule
{
public:
	unsigned char                                      bApplyOwnerScale : 1;                                     // 0x0030(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	TWeakObjectPtr<class ASolarBody>                   CurrentSolarBody;                                         // 0x0034(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ParticleModuleAstroBase");
		return ptr;
	}

};


// Class Astro.ParticleModuleAstroGravity
// 0x0078 (0x00B8 - 0x0040)
class UParticleModuleAstroGravity : public UParticleModuleAstroBase
{
public:
	unsigned char                                      bPerturbGravity : 1;                                      // 0x0040(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FRawDistributionFloat                       PerturbAngleDegrees;                                      // 0x0048(0x0038) (Edit)
	struct FRawDistributionFloat                       GravityScale;                                             // 0x0080(0x0038) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ParticleModuleAstroGravity");
		return ptr;
	}

};


// Class Astro.PersistentLocalPlayerData
// 0x0318 (0x0340 - 0x0028)
class UPersistentLocalPlayerData : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnDirtied;                                                // 0x0028(0x0010) (ZeroConstructor, Transient, InstancedReference)
	bool                                               bHasCompletedTutorial;                                    // 0x0038(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bHasSkippedTutorial;                                      // 0x0039(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               bHasSeenIntroCutscene;                                    // 0x003A(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x003B(0x0005) MISSED OFFSET
	struct FAstroPlayFabClientData                     OfflinePlayFabClientData;                                 // 0x0040(0x02F0) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	TArray<uint32_t>                                   EarnedItemDrivePhysicalRewardHashes;                      // 0x0330(0x0010) (ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PersistentLocalPlayerData");
		return ptr;
	}


	void NotifySkippedTutorial();
	void NotifySeenIntroCutscene();
	void NotifyCompletedTutorial();
};


// Class Astro.PersistentLocalPlayerDataSave
// 0x0120 (0x0148 - 0x0028)
class UPersistentLocalPlayerDataSave : public USaveGame
{
public:
	unsigned char                                      UnknownData00[0x120];                                     // 0x0028(0x0120) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PersistentLocalPlayerDataSave");
		return ptr;
	}

};


// Class Astro.PersistentTerrainModification
// 0x0018 (0x0040 - 0x0028)
class UPersistentTerrainModification : public UObject
{
public:
	class AAstroPlanet*                                m_planet;                                                 // 0x0028(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0030(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PersistentTerrainModification");
		return ptr;
	}


	void SetSpherical(const struct FVector& Location, float Radius, float Intensity);
};


// Class Astro.PersistRootComponent
// 0x0000 (0x00F0 - 0x00F0)
class UPersistRootComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PersistRootComponent");
		return ptr;
	}

};


// Class Astro.AstroPhotoFilter
// 0x0028 (0x0058 - 0x0030)
class UAstroPhotoFilter : public UDataAsset
{
public:
	struct FText                                       DisplayName;                                              // 0x0030(0x0018) (Edit, BlueprintVisible, BlueprintReadOnly)
	ECharacterCustomizationVisibility                  DisplayVisibility;                                        // 0x0048(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	class UClass*                                      FilterWidget;                                             // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroPhotoFilter");
		return ptr;
	}

};


// Class Astro.PhysicalItemSpawnList
// 0x0010 (0x0038 - 0x0028)
class UPhysicalItemSpawnList : public UObject
{
public:
	TArray<struct FPhysicalItemSpecifier>              ActorTypes;                                               // 0x0028(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicalItemSpawnList");
		return ptr;
	}


	class UClass* PickActor();
	class UPhysicalItemSpawnList* STATIC_PhysicalItemSpawnListDefault(class UClass* Type);
};


// Class Astro.PhysicalResource
// 0x0010 (0x0670 - 0x0660)
class APhysicalResource : public APhysicalItem
{
public:
	bool                                               DestroyOnDrain;                                           // 0x0660(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x0661(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicalResource");
		return ptr;
	}


	void SetView();
	void PostDrained();
	void OnDrained();
	bool IsFull();
	bool IsEmpty();
	float GetFullness();
};


// Class Astro.PhysicsComponent
// 0x0040 (0x0130 - 0x00F0)
class UPhysicsComponent : public UActorComponent
{
public:
	TArray<class UPrimitiveComponent*>                 PhysicsComponents;                                        // 0x00F0(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UPrimitiveComponent*>                 TraceComponents;                                          // 0x0100(0x0010) (ExportObject, ZeroConstructor)
	class UPrimitiveComponent*                         RootPrimitiveComponent;                                   // 0x0110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWorldGravity*                               GravityComponent;                                         // 0x0118(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FPhysicsState                               PhysicsState;                                             // 0x0120(0x0010) (Net)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicsComponent");
		return ptr;
	}


	void SetTraceEnabled(bool Enabled);
	void SetPhysicsEnabled(bool Enabled);
	void SetCollisionEnabled(bool Enabled);
	void OnRep_PhysicsState();
	class UPhysicsComponent* STATIC_GetActorPhysicsComponent(class AActor* Actor);
};


// Class Astro.PhysicsMovementComponent
// 0x01E0 (0x02D0 - 0x00F0)
class UPhysicsMovementComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F0(0x0004) MISSED OFFSET
	float                                              MaxSteerAngle;                                            // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RotationForce;                                            // 0x00F8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              HeadingStabilization;                                     // 0x00FC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SteeringInterpolationSpeed;                               // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SteeringCorrectionResetThresholdAngle;                    // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CrossFriction;                                            // 0x0108(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MinMovementStrength;                                      // 0x010C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              MovementStrength;                                         // 0x0110(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Upright;                                                  // 0x0114(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0115(0x0003) MISSED OFFSET
	float                                              MaxSpeed;                                                 // 0x0118(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrakingForceScalar;                                       // 0x011C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              RotationDrag;                                             // 0x0120(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ForceOffset;                                              // 0x0124(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Groundedness;                                             // 0x0128(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     SteeringDirection;                                        // 0x012C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     SteeredWheelsDirection;                                   // 0x0138(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0144(0x0004) MISSED OFFSET
	class USceneComponent*                             ForceLocation;                                            // 0x0148(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     ForceLocationRelative;                                    // 0x0150(0x000C) (Edit, IsPlainOldData)
	struct FVector                                     ForceLocationReverseRelative;                             // 0x015C(0x000C) (Edit, IsPlainOldData)
	float                                              ReverseThreshold;                                         // 0x0168(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResistanceHillBoost;                                      // 0x016C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TowBoostViaSlot;                                          // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxBoostedTowCount;                                       // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OverallFrictionForceScalar;                               // 0x0178(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParkingBreakVelocityThreshold;                            // 0x017C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinResistanceDampner;                                     // 0x0180(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxResistanceDampner;                                     // 0x0184(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxResistanceLevel;                                       // 0x0188(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeedSteeringAngleScalar;                              // 0x018C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DrillingSteerAngleReduction;                              // 0x0190(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSpeedForAnyAirControl;                             // 0x0194(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumSpeedForFullAutoStabilization;                     // 0x0198(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumGroundednessForAnyAirControl;                      // 0x019C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumGroundednessForFullAutoStabilization;              // 0x01A0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumGravityAlignmentAngleAnyAutoStabilization;         // 0x01A4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumGravityAlignmentAngleForFullAutoStabilization;     // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoStabilizationInterpolationRate;                       // 0x01AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PrimaryManualAirControlRate;                              // 0x01B0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SecondaryManualAirControlRate;                            // 0x01B4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ManualAirControlInterpolationRate;                        // 0x01B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EAirControlSecondaryType                           ManualAirControlSecondaryType;                            // 0x01BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	ERoverID                                           RoverTierForTelemetry;                                    // 0x01BD(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x01BE(0x0002) MISSED OFFSET
	class UStorageChassisComponent*                    StorageComponent;                                         // 0x01C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnParkingBrakeChanged;                                    // 0x01C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnBrakesChanged;                                          // 0x01D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResistanceLevelChanged;                                 // 0x01E8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FPhysicsMovementReplicatedInput             ReplicatedInput;                                          // 0x01F8(0x0010) (Net)
	unsigned char                                      UnknownData04[0x68];                                      // 0x0208(0x0068) MISSED OFFSET
	class APlayerController*                           CurrentOperatingController;                               // 0x0270(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData05[0x8];                                       // 0x0278(0x0008) MISSED OFFSET
	int                                                REP_ResistanceLevel;                                      // 0x0280(0x0004) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4C];                                      // 0x0284(0x004C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicsMovementComponent");
		return ptr;
	}


	void ServerUpdateClientMovementInput(const struct FPhysicsMovementReplicatedInput& ClientSteeringInput);
	void ResistanceChangeEvent__DelegateSignature(int REP_ResistanceLevel);
	void ParkingBrakeEvent__DelegateSignature(bool ParkingBrakeEngaged);
	void Move(class APlayerController* Controller, const struct FVector2D& Value, float Multiplier);
	void ApplyResistanceLevel();
};


// Class Astro.PhysicsMovementPawn
// 0x0000 (0x0408 - 0x0408)
class APhysicsMovementPawn : public APawn
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PhysicsMovementPawn");
		return ptr;
	}

};


// Class Astro.PitchControlModifierComponent
// 0x0028 (0x0150 - 0x0128)
class UPitchControlModifierComponent : public UCameraModifierComponent
{
public:
	float                                              Speed;                                                    // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadMultiplier;                                        // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MouseSmoothingFactor;                                     // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadSmoothingFactor;                                   // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadDeadZone;                                          // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpperLimit;                                               // 0x013C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimit;                                               // 0x0140(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SpongeRange;                                              // 0x0144(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECameraControlMask                                 ControlMask;                                              // 0x0148(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0149(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PitchControlModifierComponent");
		return ptr;
	}

};


// Class Astro.PlanetEffect
// 0x0030 (0x0120 - 0x00F0)
class UPlanetEffect : public UActorComponent
{
public:
	float                                              SphereRadius;                                             // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	TArray<class AActor*>                              OverlappingPlayers;                                       // 0x00F8(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0108(0x0001) MISSED OFFSET
	unsigned char                                      bSimLocal : 1;                                            // 0x0109(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x6];                                       // 0x010A(0x0006) MISSED OFFSET
	TArray<class UActorComponent*>                     ManagedComponents;                                        // 0x0110(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlanetEffect");
		return ptr;
	}


	void STATIC_SetActorIgnoreForAI(class AActor* Actor, bool bSetIgnore);
	void AddManagedComponent(class UActorComponent* Component);
};


// Class Astro.PlanetProxyActor
// 0x0008 (0x03B0 - 0x03A8)
class APlanetProxyActor : public AActor
{
public:
	class AAstroPlanet*                                Planet;                                                   // 0x03A8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlanetProxyActor");
		return ptr;
	}


	void OnSpawn();
	void OnLocalPlayerPlanetSelectionEnd();
	void OnLocalPlayerPlanetSelectionBegin(class ASolarBody* playerHomeBody);
};


// Class Astro.ItemDriveRequestComponent
// 0x0018 (0x0108 - 0x00F0)
class UItemDriveRequestComponent : public UActorComponent
{
public:
	struct FGuid                                       ItemGUID;                                                 // 0x00F0(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, EditConst, SaveGame, IsPlainOldData)
	unsigned char                                      GuidInitialized : 1;                                      // 0x0100(0x0001) (SaveGame)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0101(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ItemDriveRequestComponent");
		return ptr;
	}

};


// Class Astro.GameMenuPopoutCameraContext
// 0x0008 (0x0050 - 0x0048)
class UGameMenuPopoutCameraContext : public UCameraContext
{
public:
	class APlayController*                             Controller;                                               // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.GameMenuPopoutCameraContext");
		return ptr;
	}

};


// Class Astro.BackpackCameraContext
// 0x0008 (0x0050 - 0x0048)
class UBackpackCameraContext : public UCameraContext
{
public:
	class APlayController*                             Controller;                                               // 0x0048(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.BackpackCameraContext");
		return ptr;
	}

};


// Class Astro.PlayerProximityTickComponent
// 0x0048 (0x0138 - 0x00F0)
class UPlayerProximityTickComponent : public UActorComponent
{
public:
	float                                              InitialSphereRadius;                                      // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnDisableTick;                                            // 0x00F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bManageActorTick : 1;                                     // 0x0108(0x0001) (Edit)
	unsigned char                                      bCanIgnoreCreativeModeHazardInvisibility : 1;             // 0x0108(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	TArray<class AActor*>                              OverlappingPlayers;                                       // 0x0110(0x0010) (ZeroConstructor)
	class UShapeComponent*                             ProximityShape;                                           // 0x0120(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UActorComponent*>                     ManagedComponents;                                        // 0x0128(0x0010) (ExportObject, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlayerProximityTickComponent");
		return ptr;
	}


	void SetProximitySphere(float Radius);
	void SetProximityShape(class UShapeComponent* inProximityShape);
	void PlayerProximityTickDisableTickEvent__DelegateSignature();
	void OnTrackedPlayerDestroyed(class AActor* DestroyedActor);
	TArray<class AActor*> GetOverlappingPlayers();
	class UPlayerProximityTickComponent* STATIC_GetActorPlayerProximityTickComponent(class AActor* Actor);
	TArray<class AActor*> STATIC_GetActorOverlappingPlayers(class AActor* Actor);
	void EndOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex);
	void BeginOverlap(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& OverlapInfo);
	void AddManagedComponents(TArray<class UActorComponent*> Components);
	void AddManagedComponent(class UActorComponent* Component);
};


// Class Astro.PlayerToolComponent
// 0x0060 (0x0150 - 0x00F0)
class UPlayerToolComponent : public UActorComponent
{
public:
	struct FTransform                                  TableTransform;                                           // 0x00F0(0x0030) (Edit, IsPlainOldData)
	struct FName                                       AttachBoneName;                                           // 0x0120(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UnencapsulateChildrenWhileActive;                         // 0x0128(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HeldTool;                                                 // 0x0129(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x012A(0x0006) MISSED OFFSET
	class USceneComponent*                             AttachLocationComponent;                                  // 0x0130(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TableComponent;                                           // 0x0138(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              CrackedValue;                                             // 0x0140(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      m_activated : 1;                                          // 0x0144(0x0001) (Net)
	unsigned char                                      UnknownData01[0xB];                                       // 0x0145(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlayerToolComponent");
		return ptr;
	}


	void OnRep_Activated();
	void OnControlDeactivate();
	void OnControlActivate();
	void OnActorClicked(class AActor* Actor, const struct FKey& Key);
};


// Class Astro.PlayWidget
// 0x0040 (0x0248 - 0x0208)
class UPlayWidget : public UUserWidget
{
public:
	float                                              HealthImageOpacity;                                       // 0x0208(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FGeometry                                   CachedGeometry;                                           // 0x020C(0x0038) (BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0244(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlayWidget");
		return ptr;
	}

};


// Class Astro.PopupBadgeWidgetComponent
// 0x0010 (0x0830 - 0x0820)
class UPopupBadgeWidgetComponent : public UCameraFacingWidgetComponent
{
public:
	class UAstroPopupBadgeWidget*                      PopupBadgeWidget;                                         // 0x0820(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0828(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PopupBadgeWidgetComponent");
		return ptr;
	}

};


// Class Astro.PowerChargeLockingMechanismDefinition
// 0x0000 (0x0050 - 0x0050)
class UPowerChargeLockingMechanismDefinition : public ULockingMechanismDefinition
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerChargeLockingMechanismDefinition");
		return ptr;
	}

};


// Class Astro.PowerChargeLockingMechanism
// 0x0000 (0x0060 - 0x0060)
class UPowerChargeLockingMechanism : public ULockingMechanism
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerChargeLockingMechanism");
		return ptr;
	}


	void OnNotFullyCharged();
	void OnFullyCharged();
};


// Class Astro.PowerComponent
// 0x0190 (0x0280 - 0x00F0)
class UPowerComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnHasPowerAvailableChanged;                               // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChargeLevelChanged;                                     // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnChargeDepleted;                                         // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      bIsGenerator : 1;                                         // 0x0120(0x0001) (Edit)
	unsigned char                                      bIsLoad : 1;                                              // 0x0120(0x0001) (Edit)
	unsigned char                                      ShouldReplicate : 1;                                      // 0x0120(0x0001) (Edit)
	unsigned char                                      SelfDischargeOnly : 1;                                    // 0x0120(0x0001) (Edit)
	unsigned char                                      IsIntegratedBattery : 1;                                  // 0x0120(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0121(0x0003) MISSED OFFSET
	bool                                               QueryPower;                                               // 0x0124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	float                                              StorageCapacity;                                          // 0x0128(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DischargeRate;                                            // 0x012C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ChargeRate;                                               // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CurrentChargeRate;                                        // 0x0134(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              NetActualLoad;                                            // 0x0138(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              CurrentAvailablePower;                                    // 0x013C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              CurrentMaximumLoad;                                       // 0x0140(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              DiscreteDelta;                                            // 0x0144(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class USceneComponent*                             UIComponent;                                              // 0x0148(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UActivation*                                 WhilePowered;                                             // 0x0150(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnPowered;                                                // 0x0158(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDepowered;                                              // 0x0168(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 WhileGeneratingPower;                                     // 0x0178(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnStartedGeneratingPower;                                 // 0x0180(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStoppedGeneratingPower;                                 // 0x0190(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 WhileDischarging;                                         // 0x01A0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDischarging;                                            // 0x01A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndDischarging;                                         // 0x01B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 WhileFullCharge;                                          // 0x01C8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFullCharge;                                             // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndFullCharge;                                          // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 WhileEmptyCharge;                                         // 0x01F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnEmptyCharge;                                            // 0x01F8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndEmptyCharge;                                         // 0x0208(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActivation*                                 WhileFullyPowered;                                        // 0x0218(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnFullyPowered;                                           // 0x0220(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEndFullyPowered;                                        // 0x0230(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FPowerThresholdEvent>                ThresholdEvents;                                          // 0x0240(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FReplicatedPowerState                       ReplicatedState;                                          // 0x0250(0x0008) (Net)
	struct FReplicatedPowerState                       PrevReplicatedState;                                      // 0x0258(0x0008)
	uint32_t                                           PowerID;                                                  // 0x0260(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	bool                                               IsAttachedToStreamingPowerGrid;                           // 0x0264(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0265(0x0007) MISSED OFFSET
	float                                              NetPowerOutput;                                           // 0x026C(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CurrentCharge;                                            // 0x0270(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, SaveGame, IsPlainOldData)
	unsigned char                                      Enabled : 1;                                              // 0x0274(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, SaveGame)
	unsigned char                                      UnknownData03[0xB];                                       // 0x0275(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerComponent");
		return ptr;
	}


	void SetSuppliedVisibility(class USceneComponent* Component);
	void SetNetPowerOutput(float NetPowerOutput);
	bool SetEnabled(bool IsEnabled);
	float SetCurrentCharge(float Charge);
	struct FText ReportPowerComponent();
	void PowerStateChangeEvent__DelegateSignature(bool HasAvailablePower);
	void PingIndicator(bool Discharging);
	void OnRep_ReplicationData();
	bool IsSupplied();
	bool IsPowered();
	bool IsFullySupplied();
	bool IsFullyPowered();
	bool IsFullyCharged();
	float IsEnabled();
	bool IsAnyPowerAvailable();
	void HandleFreePowerChanged(bool NewFreePowerChanged);
	float GetNetPowerOutput();
	float GetCurrentCharge();
	void DrainBattery(float Speed);
	void ChargeLevelChangedEvent__DelegateSignature(float NewCharge, float ChargeDelta);
	bool CanPowerFor(float Amount);
	bool CanPower();
	float AddCharge(float Charge);
	class UPowerComponent* STATIC_ActorPowerComponent(class AActor* Actor);
};


// Class Astro.PlanetStatics
// 0x0000 (0x0028 - 0x0028)
class UPlanetStatics : public UAstroStatics
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PlanetStatics");
		return ptr;
	}


	struct FVector STATIC_ToPlanet(class AAstroPlanet* Planet, class AActor* Actor);
	struct FVector STATIC_TargetVelocity(const struct FVector& Velocity, class AActor* Actor, float Time);
	void STATIC_TargetFacingUp(const struct FVector& Up, class AActor* Actor, float TorqueStrength);
	void STATIC_TargetBody(class ASolarBody* Body, class AActor* Actor, float AccelTime, float TimeToSurface, float MinVelocity, float MaxVelocity, float RotationTorque, float DistanceBuffer);
	struct FVector STATIC_SunDirectionRelativeToSolarBody(class UObject* WorldContextObject, class ASolarBody* centerBody, const struct FVector& WorldPosition);
	struct FVector STATIC_SunDirection(class UObject* WorldContextObject, const struct FVector& WorldPosition);
	void STATIC_SoftLanding(class AAstroPlanet* Planet, class AActor* Actor, float AccelTime, float TimeToSurface, float MinVelocity, float MaxVelocity, float RotationTorque, float DistanceBuffer);
	struct FVector STATIC_PlanetUpComponent(class USceneComponent* Component);
	struct FVector STATIC_PlanetUp(class UObject* WorldContextObject, const struct FVector& WorldPosition);
	bool STATIC_PlanetTrace(class AActor* Actor, struct FHitResult* OutHit);
	bool STATIC_IsTerrainReadyAtLocation(class UObject* WorldContextObject, const struct FVector& Location);
	struct FVector STATIC_GravityUp(class AActor* Actor);
	class ASun* STATIC_GetSun(class UObject* WorldContextObject);
	class ASolarBody* STATIC_GetSolarBodyByLocation(class UObject* WorldContextObject, const struct FVector& Location, bool bDoBoundsCheck, bool bVisitableByPlayerOnly);
	class ASolarBody* STATIC_GetSolarBody(class AActor* Actor, bool bBoundsCheck);
	TArray<class AAstroPlanet*> STATIC_GetPlanets(class UObject* WorldContextObject);
	class AAstroPlanet* STATIC_GetPlanetByLocation(class UObject* WorldContextObject, const struct FVector& Position, bool boundsCheck, bool locationIsSolar);
	class AAstroPlanet* STATIC_GetPlanet(class AActor* Actor, bool bBoundsCheck);
	class AGateStation* STATIC_GetGateStation(class UObject* WorldContextObject);
	class AAstroPlanet* STATIC_GetClosestPlanet(class AActor* Actor);
	struct FVector STATIC_GetBodyGravityAtLocation(class ASolarBody* Body, const struct FVector& Location);
	struct FVector STATIC_GetBodyGravity(class ASolarBody* Body, class AActor* Actor);
	void STATIC_GeneratePlanetGravitySources(class UObject* WorldContextObject);
	struct FVector STATIC_FromPlanet(class AAstroPlanet* Planet, class AActor* Actor);
	bool STATIC_EscapedBodyByLocation(class ASolarBody* Body, const struct FVector& Location, float Scale, float Distance, bool locationIsSolar);
	bool STATIC_EscapedBody(class ASolarBody* Body, class AActor* Actor, float Scale, float Distance);
	bool STATIC_AreAtmosphericResourcesEqual(const struct FAtmosphericResource& resourceA, const struct FAtmosphericResource& resourceB);
};


// Class Astro.PowerFlowLockingMechanism
// 0x0018 (0x0078 - 0x0060)
class UPowerFlowLockingMechanism : public ULockingMechanism
{
public:
	struct FScriptMulticastDelegate                    OnAccumulatedFullyPoweredTimeChanged;                     // 0x0060(0x0010) (ZeroConstructor, InstancedReference)
	float                                              AccumulatedFullyPoweredTime;                              // 0x0070(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0074(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerFlowLockingMechanism");
		return ptr;
	}


	void OnFullyPowered();
	void OnEndFullyPowered();
};


// Class Astro.PowerFlowLockingMechanismView
// 0x0018 (0x0068 - 0x0050)
class UPowerFlowLockingMechanismView : public ULockingMechanismView
{
public:
	struct FScriptMulticastDelegate                    OnCompletionRatioChanged;                                 // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              CompletionRatio;                                          // 0x0060(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerFlowLockingMechanismView");
		return ptr;
	}


	void OnRep_CompletionRatio();
	void OnAccumulatedFullyPoweredTimeChanged(class ULockingMechanism* LockingMechanism, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.PowerGenerationSystem
// 0x0008 (0x0038 - 0x0030)
class UPowerGenerationSystem : public UAstroEntitySystem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerGenerationSystem");
		return ptr;
	}

};


// Class Astro.PowerGridNode
// 0x0000 (0x00F0 - 0x00F0)
class UPowerGridNode : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerGridNode");
		return ptr;
	}

};


// Class Astro.PowerSlot
// 0x0000 (0x0430 - 0x0430)
class APowerSlot : public AItemSlot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerSlot");
		return ptr;
	}


	void SetPoweredTrue();
	void SetPoweredFalse();
	void SetPowered(bool Powered);
	void SetOxygen(bool Oxygen);
	void PowerSetItem(class APhysicalItem* Item);
	void PowerReleaseItem(class APhysicalItem* Item);
};


// Class Astro.PowerSlotComponent
// 0x0000 (0x00F0 - 0x00F0)
class UPowerSlotComponent : public UActorComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerSlotComponent");
		return ptr;
	}

};


// Class Astro.PowerStatics
// 0x0000 (0x0028 - 0x0028)
class UPowerStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerStatics");
		return ptr;
	}


	void STATIC_SetFreePower(bool Enable, class UObject* WorldContextObject);
	TArray<class UPowerComponent*> STATIC_GetSlotActorPowerComponents(const struct FSlotReference& PowerSlot);
	bool STATIC_GetFreePower(class UObject* WorldContextObject);
};


// Class Astro.PrinterComponent
// 0x0320 (0x0410 - 0x00F0)
class UPrinterComponent : public UActorComponent
{
public:
	int                                                CurrentBlueprintIndex;                                    // 0x00F0(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class APhysicalItem*                               CurrentPackageableItem;                                   // 0x00F8(0x0008) (ZeroConstructor, IsPlainOldData)
	int                                                CurrentRepackageableItemIndex;                            // 0x0100(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x14];                                      // 0x0104(0x0014) MISSED OFFSET
	TArray<struct FSlotReference>                      ReserveSlots;                                             // 0x0118(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FSlotReference>                      ResourceSlots;                                            // 0x0128(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              Blueprints;                                               // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              ActiveBlueprints;                                         // 0x0148(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class UTextRenderComponent*>                TextComponents;                                           // 0x0158(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	bool                                               RecipesRequireProgression;                                // 0x0168(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               RequireResources;                                         // 0x0169(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               HideIndicatorWithoutFullRecipe;                           // 0x016A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               RequiresPower;                                            // 0x016B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               StreamsPower;                                             // 0x016C(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ConsumeFromStorageSlots;                                  // 0x016D(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               AllowPrintCompletionWithoutPower;                         // 0x016E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x016F(0x0001) MISSED OFFSET
	float                                              RequiredPowerOffset;                                      // 0x0170(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              PrintSpeed;                                               // 0x0174(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               PackageUpPrintedItems;                                    // 0x0178(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ShortcutButtons;                                          // 0x0179(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x017A(0x0006) MISSED OFFSET
	struct FSlotReference                              PrinterOutputSlot;                                        // 0x0180(0x0010) (BlueprintVisible)
	struct FSlotReference                              FallbackPrinterOutputSlot;                                // 0x0190(0x0010) (SaveGame)
	struct FScriptMulticastDelegate                    OnSetIndicatorView;                                       // 0x01A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSetPrintingView;                                        // 0x01B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSetProgressView;                                        // 0x01C0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnFinishPrint;                                            // 0x01D0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnCancelPrint;                                            // 0x01E0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStartPrint;                                             // 0x01F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnValidateAvailablePackageableItems;                      // 0x0200(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               EmplaceItemAfterPrint;                                    // 0x0210(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               InteractionEnabled;                                       // 0x0211(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               LocalIsVisible;                                           // 0x0212(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               PrintingActive;                                           // 0x0213(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ValidatePrintAreaOpen;                                    // 0x0214(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0215(0x0003) MISSED OFFSET
	float                                              PrintAreaClearRadius;                                     // 0x0218(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Progress;                                                 // 0x021C(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              ProgressOverride;                                         // 0x0220(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	int                                                SlotIndicatorIndex;                                       // 0x0224(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UClass*>                              NeededItemTypes;                                          // 0x0228(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	bool                                               RepackageModeEngaged;                                     // 0x0238(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x47];                                      // 0x0239(0x0047) MISSED OFFSET
	struct FReplicatedPrinterState                     REP_PrinterState;                                         // 0x0280(0x0068) (Net, SaveGame)
	struct FReplicatedPrinterState                     PrevReplicatedState;                                      // 0x02E8(0x0068) (Transient)
	unsigned char                                      UnknownData06[0x68];                                      // 0x0350(0x0068) MISSED OFFSET
	class UMaterialInstanceDynamic*                    PrintingMaterialDynamic;                                  // 0x03B8(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<uint32_t>                                   TotalItemAmounts;                                         // 0x03C0(0x0010) (ZeroConstructor, SaveGame)
	TArray<uint32_t>                                   ConsumedItemAmounts;                                      // 0x03D0(0x0010) (ZeroConstructor, SaveGame)
	TArray<class AActor*>                              ActorsIgnoredDuringPrintAreaValidation;                   // 0x03E0(0x0010) (ZeroConstructor, SaveGame)
	TArray<struct FSlotReference>                      PlayerStorageSlots;                                       // 0x03F0(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0400(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PrinterComponent");
		return ptr;
	}


	void UpdatePrinting(float DeltaTime);
	bool UpdatePreprinting();
	void UnlockedItemsChanged(TArray<class UClass*> NewUnlockedItems);
	void StartPrinting();
	class APhysicalItem* SpawnPrintedItem();
	void ShowNeededIndicators();
	void SetText(const struct FText& Text);
	void SetRequiresPower(bool printerRequiresPower);
	void SetRepackageModeEnabled(bool modeEnabled);
	void SetPrintSpeed(float Speed);
	void SetPrinterOutputSlot(const struct FSlotReference& Slot);
	void SetLocalIsVisible(bool IsVisible);
	void SetItemsAvailableToRepackage(TArray<TWeakObjectPtr<class APhysicalItem>> itemsToRepackage, int DefaultSelectionIndex);
	void SetCanUse(bool bCanUse);
	void SetBlueprints(TArray<class UClass*> newBlueprints);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void ResetIndicator();
	void RemoveIgnoredActorForPrintAreaValidation(class AActor* ignoredActor);
	bool PrinterClickQuery(class UClickQuery* Query);
	void OnRep_SlotIndicators();
	void OnRep_Progress();
	void OnRep_PrintState();
	void OnRep_PrinterStateAtomic();
	void OnRep_PrinterOutputSlot();
	void OnRep_CurrentBlueprintItem();
	void OnPrinterDestroyed(class AActor* DestroyedActor);
	void OnAuthorityControlPanelCrackedChanged(class AControlPanel* ControlPanel);
	void IncrementBlueprint(bool doServerIncrement);
	void HideNeededIndicators();
	void HideBlueprint();
	void HandleCreativeCatalogUnlockedChanged();
	int GetTotalAvailableBlueprintCount();
	TArray<class UClass*> GetSlotIndicators();
	bool GetRepackageModeEngaged();
	struct FTransform GetPrintingTransform();
	float GetPrintingHeight();
	bool GetPrinting();
	bool GetItemIndicatorVisible();
	bool GetItemIndicatorHidden();
	int GetCurrentUnlockedBlueprintIndex();
	class UClass* GetCurrentItem();
	bool GetCharging();
	bool GetCanUse();
	bool GetCanPrint();
	TArray<int> GetAvailableIngredientCounts();
	void FinishPrinting();
	void DecrementBlueprint(bool doServerIncrement);
	void DeactivateBlueprint();
	void CreateIndicatorFromItem(class APhysicalItem* Owner);
	void CreateIndicatorFromClass(class UClass* Class);
	bool CanReserveSlotsAcceptItemForActiveRecipe(class APhysicalItem* Item);
	void CancelPrint();
	void AddIgnoredActorForPrintAreaValidation(class AActor* ignoredActor);
	class UPrinterComponent* STATIC_ActorPrinterComponent(class AActor* Actor);
	void ActivateBlueprint();
};


// Class Astro.ProceduralStateComponent
// 0x0038 (0x0128 - 0x00F0)
class UProceduralStateComponent : public UActorComponent
{
public:
	struct FProceduralActorRepState                    repState;                                                 // 0x00F0(0x0020) (Net, SaveGame)
	unsigned char                                      bRuntimeGenerated : 1;                                    // 0x0110(0x0001) (SaveGame)
	unsigned char                                      bApplyTintFromAttachParent : 1;                           // 0x0110(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	uint64_t                                           ProceduralPlacementSaveID;                                // 0x0118(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	class UTerrainPhysicsComponent*                    TerrainPhysicsComp;                                       // 0x0120(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ProceduralStateComponent");
		return ptr;
	}


	void OnTerrainPhysicsBuriedChanged(class UTerrainPhysicsComponent* TerrainPhysics);
	void OnOwnerSpawnedInSlot();
	void ApplyStateToOwner();
};


// Class Astro.PuzzleSystem
// 0x0000 (0x0030 - 0x0030)
class UPuzzleSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PuzzleSystem");
		return ptr;
	}

};


// Class Astro.RailComponent
// 0x0040 (0x0130 - 0x00F0)
class URailComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnUpdateCart;                                             // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MoveSpeed;                                                // 0x0100(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	TArray<struct FRailItem>                           RailItems;                                                // 0x0108(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0118(0x0010) MISSED OFFSET
	class ASlotConnection*                             OwnerConnection;                                          // 0x0128(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RailComponent");
		return ptr;
	}


	bool SendItem(class APhysicalItem* Item, class AActor* Source);
	void MulticastSendRail(bool Immediate);
};


// Class Astro.RaycastDistributionComponent
// 0x0060 (0x16D0 - 0x1670)
class URaycastDistributionComponent : public UTerrainPlacementComponent
{
public:
	int                                                Seed;                                                     // 0x1670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Radius;                                                   // 0x1674(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ERaycastDistributionShape                          Shape;                                                    // 0x1678(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Centered;                                                 // 0x1679(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x167A(0x0002) MISSED OFFSET
	float                                              Depth;                                                    // 0x167C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RandomOrientation;                                        // 0x1680(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESurfaceOrientation                                Orientation;                                              // 0x1684(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x1685(0x0003) MISSED OFFSET
	struct FSurfaceCriteria                            SurfaceCriteria;                                          // 0x1688(0x0008) (Edit)
	ETerrainPlacementMode                              TerrainMode;                                              // 0x1690(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x1691(0x0003) MISSED OFFSET
	float                                              RaycastDistance;                                          // 0x1694(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               ApplyTerrainTypeToActor;                                  // 0x1698(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseParentMaterial;                                        // 0x1699(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x169A(0x0002) MISSED OFFSET
	float                                              DefaultCullingDistance;                                   // 0x169C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x16A0(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FracCount;                                                // 0x16A4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Actor;                                                    // 0x16A8(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<struct FActorSpecifier>                     Actors;                                                   // 0x16B0(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              ActorScaleMin;                                            // 0x16C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ActorScaleMax;                                            // 0x16C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleCount;                                               // 0x16C8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleFromCenterDistance;                                  // 0x16C9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x16CA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RaycastDistributionComponent");
		return ptr;
	}

};


// Class Astro.RaycastMeshDistributionComponent
// 0x0020 (0x16D0 - 0x16B0)
class URaycastMeshDistributionComponent : public UMeshDistributionBaseComponent
{
public:
	ERaycastDistributionShape                          Shape;                                                    // 0x16B0(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x16B1(0x0003) MISSED OFFSET
	float                                              RaycastDistance;                                          // 0x16B4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Centered;                                                 // 0x16B8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x16B9(0x0003) MISSED OFFSET
	float                                              RandomOrientation;                                        // 0x16BC(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESurfaceOrientation                                Orientation;                                              // 0x16C0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x16C1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RaycastMeshDistributionComponent");
		return ptr;
	}

};


// Class Astro.RaycastTerrainSurfaceComponent
// 0x0020 (0x1690 - 0x1670)
class URaycastTerrainSurfaceComponent : public UTerrainPlacementComponent
{
public:
	float                                              RandomOrientation;                                        // 0x1670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ESurfaceOrientation                                Orientation;                                              // 0x1674(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bApplyOffsetDownFromHit : 1;                              // 0x1675(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x2];                                       // 0x1676(0x0002) MISSED OFFSET
	float                                              OffsetDownFromHitDistance;                                // 0x1678(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RaycastDistance;                                          // 0x167C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSurfaceCriteria                            SurfaceCriteria;                                          // 0x1680(0x0008) (Edit)
	ERaycastOrientation                                RaycastDirection;                                         // 0x1688(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bUseVoxelTrace : 1;                                       // 0x1689(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x2];                                       // 0x168A(0x0002) MISSED OFFSET
	float                                              VoxelTraceAccuracy;                                       // 0x168C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RaycastTerrainSurfaceComponent");
		return ptr;
	}

};


// Class Astro.RecipeOrganizationRule
// 0x0010 (0x0080 - 0x0070)
class URecipeOrganizationRule : public USlotOrganizationRule
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0070(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RecipeOrganizationRule");
		return ptr;
	}


	void SetRecipe(const struct FRecipe& Recipe);
	void GetCurrentRecipeStatus(TArray<class APhysicalItem*>* outUnwantedHaveItems, TArray<class UClass*>* outMissingItems);
};


// Class Astro.Repackager
// 0x0020 (0x0680 - 0x0660)
class ARepackager : public APhysicalItem
{
public:
	class UAstroActionComponent*                       ActionComponent;                                          // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class APhysicalItem*                               RepackagingTarget;                                        // 0x0668(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	ERepackagingTargetState                            TargetState;                                              // 0x0670(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0671(0x0007) MISSED OFFSET
	class UClass*                                      RepackActionType;                                         // 0x0678(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Repackager");
		return ptr;
	}


	void RespondToMotionStateChange();
	void OnRepackagingTargetStateChanged();
	void OnRepackageActionFinishedAuthority(class UAstroAction* repackageAction);
	void InitiateRepackaging();
};


// Class Astro.ResearchComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UResearchComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchComponentContainer");
		return ptr;
	}


	struct FResearchComponent STATIC_GetResearchComponent(const struct FAstroDatumRef& ResearchComponentRef, bool* bOutSuccess);
	struct FResearchComponent STATIC_FindResearchComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.ResearchModule
// 0x0020 (0x0680 - 0x0660)
class AResearchModule : public APhysicalItem
{
public:
	class UActorResearchComponent*                     ActorResearchComponent;                                   // 0x0660(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0668(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, SaveGame, IsPlainOldData)
	class UAdaptiveTickComponent*                      AdaptiveTickComponent;                                    // 0x0670(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0678(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchModule");
		return ptr;
	}

};


// Class Astro.ResearchPointGrantComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UResearchPointGrantComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchPointGrantComponentContainer");
		return ptr;
	}


	struct FResearchPointGrantComponent STATIC_GetResearchPointGrantComponent(const struct FAstroDatumRef& ResearchPointGrantComponentRef, bool* bOutSuccess);
	struct FResearchPointGrantComponent STATIC_FindResearchPointGrantComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.ResearchPointGrantItem
// 0x0010 (0x0670 - 0x0660)
class AResearchPointGrantItem : public APhysicalItem
{
public:
	class UActorResearchPointGrantComponent*           ResearchPointGrantComponent;                              // 0x0660(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0668(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchPointGrantItem");
		return ptr;
	}


	void OnUsed();
};


// Class Astro.ResearchProgressionComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UResearchProgressionComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchProgressionComponentContainer");
		return ptr;
	}


	struct FResearchProgressionComponent STATIC_GetResearchProgressionComponent(const struct FAstroDatumRef& ResearchProgressionComponentRef, bool* bOutSuccess);
	struct FResearchProgressionComponent STATIC_FindResearchProgressionComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.ResearchProgressionTable
// 0x0060 (0x0090 - 0x0030)
class UResearchProgressionTable : public UDataAsset
{
public:
	TArray<struct FResearchBonusTimeline>              BonusTimelines;                                           // 0x0030(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x50];                                      // 0x0040(0x0050) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchProgressionTable");
		return ptr;
	}

};


// Class Astro.ResearchSubjectComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UResearchSubjectComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchSubjectComponentContainer");
		return ptr;
	}


	struct FResearchSubjectComponent STATIC_GetResearchSubjectComponent(const struct FAstroDatumRef& ResearchSubjectComponentRef, bool* bOutSuccess);
	struct FResearchSubjectComponent STATIC_FindResearchSubjectComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.ResearchSubjectDefinition
// 0x0028 (0x0058 - 0x0030)
class UResearchSubjectDefinition : public UDataAsset
{
public:
	TArray<struct FResearchPhase>                      Phases;                                                   // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               BonusTimelinesAffected;                                   // 0x0040(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              TotalPointsPerInstance;                                   // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)
	float                                              TotalResearchSecondsPerInstance;                          // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchSubjectDefinition");
		return ptr;
	}

};


// Class Astro.ResearchSystem
// 0x0000 (0x0030 - 0x0030)
class UResearchSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResearchSystem");
		return ptr;
	}


	void STATIC_StartOrInterruptResearch(const struct FAstroDatumRef& ResearchEntityRef, const struct FAstroDatumRef& InstigatorEntityRef, bool* bOutSuccess);
	void OnResearchSubjectSet(class APhysicalItem* Item);
	void OnResearchSubjectReleased(class APhysicalItem* Item);
	void OnResearchSubjectItemTypeChanged(class UItemComponent* researchSubjectItemComponent, class UClass* NewItemType);
	bool STATIC_IsItemTypeUnlockedForGame(class AAstroGameState* GameState, class UClass* ItemType);
	bool STATIC_IsItemTypeUnlocked(class APlayerController* PlayerController, class UClass* ItemType);
	float STATIC_GetResearchTimeProgressRatio(const struct FResearchSubjectComponent& ResearchSubject);
	void STATIC_GetResearchSubjectTotals(const struct FResearchSubjectComponent& ResearchSubject, float* OutTotalPointsFromSubject, float* OutSubjectTotalResearchTime);
	float STATIC_GetResearchPointProgressRatio(const struct FResearchSubjectComponent& ResearchSubject);
	float STATIC_GetCurrentResearchPointsPerMinute(class APlayerController* PlayerController);
	float STATIC_GetCurrentResearchPointBalance(class APlayerController* PlayerController);
	void STATIC_AuthorityGrantResearchPoints(class APlayerController* PlayerController, int PointsToGrant);
};


// Class Astro.ResourceCacheComponent
// 0x0048 (0x0138 - 0x00F0)
class UResourceCacheComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	struct FSlotReference                              ResourceOutputSlot;                                       // 0x0100(0x0010) (BlueprintVisible)
	struct FScriptMulticastDelegate                    OnResourceSlotFull;                                       // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnResourceStored;                                         // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UDeformEventReceiver*                        DeformEventReceiver;                                      // 0x0130(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceCacheComponent");
		return ptr;
	}


	void SwapResources(class UClass* MineralType);
	void StoreResource(class UClass* MineralType, int Amount);
	void OnAcceptResource(class UClass* Type, int Amount);
	class AAstroCharacter* GetCharacter();
	void CacheResources();
	bool ApplyPower(float Amount);
	bool ApplyOxygen(int Amount);
};


// Class Astro.ResourceConsumptionLockingMechanismDefinition
// 0x0018 (0x0068 - 0x0050)
class UResourceConsumptionLockingMechanismDefinition : public ULockingMechanismDefinition
{
public:
	struct FName                                       ResourceConsumptionSlotName;                              // 0x0050(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ConsumedResource;                                         // 0x0058(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RequiredResourceUnits;                                    // 0x0060(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ResourceUnitConsumptionTime;                              // 0x0064(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceConsumptionLockingMechanismDefinition");
		return ptr;
	}

};


// Class Astro.ResourceConsumptionLockingMechanism
// 0x0028 (0x0088 - 0x0060)
class UResourceConsumptionLockingMechanism : public ULockingMechanism
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0060(0x0010) MISSED OFFSET
	int                                                ConsumedResourceUnits;                                    // 0x0070(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	class APhysicalItem*                               ItemBeingConsumed;                                        // 0x0078(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	TWeakObjectPtr<class APawn>                        ItemConsumptionInstigator;                                // 0x0080(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceConsumptionLockingMechanism");
		return ptr;
	}


	void OnItemSetInResourceConsumptionSlot(class APhysicalItem* Item);
	void OnItemBeingConsumedDrained();
	void OnItemBeingConsumedDestroyed(class AActor* DestroyedActor);
};


// Class Astro.ResourceConsumptionLockingMechanismView
// 0x0010 (0x0060 - 0x0050)
class UResourceConsumptionLockingMechanismView : public ULockingMechanismView
{
public:
	struct FScriptMulticastDelegate                    BeginFinalResourceConsumption;                            // 0x0050(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceConsumptionLockingMechanismView");
		return ptr;
	}


	void OnBeginFinalResourceConsumption(class ULockingMechanism* LockingMechanism, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.ResourceCoreComponent
// 0x0010 (0x0100 - 0x00F0)
class UResourceCoreComponent : public UActorComponent
{
public:
	class UItemComponent*                              ItemComponent;                                            // 0x00F0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInstancedStaticMeshComponent*               MeshComponent;                                            // 0x00F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceCoreComponent");
		return ptr;
	}


	void OnItemChange();
};


// Class Astro.ResourceExtractor
// 0x0010 (0x0670 - 0x0660)
class AResourceExtractor : public APhysicalItem
{
public:
	class UPowerComponent*                             PowerComponent;                                           // 0x0660(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0668(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceExtractor");
		return ptr;
	}

};


// Class Astro.ResourceExtractorManager
// 0x0000 (0x0028 - 0x0028)
class UResourceExtractorManager : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceExtractorManager");
		return ptr;
	}

};


// Class Astro.PowerFlowLockingMechanismDefinition
// 0x0008 (0x0058 - 0x0050)
class UPowerFlowLockingMechanismDefinition : public ULockingMechanismDefinition
{
public:
	float                                              FullyPoweredMaintenanceTime;                              // 0x0050(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AccumulatedFullyPoweredTimeDecayDuration;                 // 0x0054(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.PowerFlowLockingMechanismDefinition");
		return ptr;
	}

};


// Class Astro.ResourceInfoComponent
// 0x0020 (0x0110 - 0x00F0)
class UResourceInfoComponent : public UActorComponent
{
public:
	class AResourceInfo*                               Actor;                                                    // 0x00F0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      ResourceInfoActor;                                        // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OffsetDistance;                                           // 0x0100(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseHoverEvents;                                           // 0x0104(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Hovering;                                                 // 0x0105(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               PickedUp;                                                 // 0x0106(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0107(0x0001) MISSED OFFSET
	struct FTimerHandle                                HoverDelay;                                               // 0x0108(0x0008)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceInfoComponent");
		return ptr;
	}


	void SpawnIfHovering();
	void SpawnActor();
	bool ShouldHoverIcon();
	void SetActorClass(class UClass* infoActor, bool show);
	void PhysicalItemSlotted();
	void PhysicalItemPickedUp(bool PhysicalMovement);
	void PhysicalItemDropped(class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
	void OwnerCursorEnd(class AActor* hoverActor);
	void OwnerCursorBegin(class AActor* hoverActor);
	void DestroyActorIfClass(class UClass* infoActor);
	void DestroyActor();
};


// Class Astro.ResourceInfo
// 0x0060 (0x0408 - 0x03A8)
class AResourceInfo : public AActor
{
public:
	class UAdaptiveTickComponent*                      AdaptiveTick;                                             // 0x03A8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        StaticMesh;                                               // 0x03B0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UClass*                                      ItemType;                                                 // 0x03B8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UClass*                                      storedSubItemType;                                        // 0x03C0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Hovering;                                                 // 0x03C8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x03C9(0x0007) MISSED OFFSET
	class APhysicalItem*                               ItemParent;                                               // 0x03D0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AActor*                                      ActorParent;                                              // 0x03D8(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              SlotParent;                                               // 0x03E0(0x0010) (BlueprintVisible, BlueprintReadOnly)
	struct FScriptMulticastDelegate                    SetDescription;                                           // 0x03F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              OffsetDistance;                                           // 0x0400(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0404(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceInfo");
		return ptr;
	}


	void SetTextVisible(bool Visible);
	void SetPrimaryItemTypeAndStoredSubType(class UClass* primaryItemType, class UClass* storedSubType);
	void OnSpawn();
	void MeshCursorEnd(class UPrimitiveComponent* Component);
	void MeshCursorBegin(class UPrimitiveComponent* Component);
	void MeshClicked(class UPrimitiveComponent* Component, const struct FKey& Key);
};


// Class Astro.ResourceInfoNeeded
// 0x0008 (0x0410 - 0x0408)
class AResourceInfoNeeded : public AResourceInfo
{
public:
	class UPrimitiveComponent*                         PlaceholderMesh;                                          // 0x0408(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceInfoNeeded");
		return ptr;
	}

};


// Class Astro.ResourceSlot
// 0x0000 (0x0430 - 0x0430)
class AResourceSlot : public AItemSlot
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceSlot");
		return ptr;
	}

};


// Class Astro.ResourceType
// 0x0010 (0x0038 - 0x0028)
class UResourceType : public UObject
{
public:
	struct FLinearColor                                ResourceColor;                                            // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ResourceType");
		return ptr;
	}


	class UResourceType* STATIC_ResourceTypeDefault(class UClass* Class);
};


// Class Astro.RewardComponent
// 0x0038 (0x0128 - 0x00F0)
class URewardComponent : public UActorComponent
{
public:
	class UClass*                                      SelectionTemplate;                                        // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FRewardSelectionParameters                  CustomSelectionParameters;                                // 0x00F8(0x0028) (Edit)
	unsigned char                                      bAllowMultipleUnlocks : 1;                                // 0x0120(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0121(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RewardComponent");
		return ptr;
	}


	struct FRewardResult SelectReward();
};


// Class Astro.RewardState
// 0x0070 (0x0098 - 0x0028)
class URewardState : public UObject
{
public:
	TArray<class UClass*>                              UnlockedDurables;                                         // 0x0028(0x0010) (ZeroConstructor, SaveGame)
	TArray<class UClass*>                              ResearchedTypes;                                          // 0x0038(0x0010) (ZeroConstructor, SaveGame)
	TMap<uint64_t, struct FRewardSublist>              RewardSublists;                                           // 0x0048(0x0050) (ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RewardState");
		return ptr;
	}


	bool IsUnlocked(class UClass* ItemType);
};


// Class Astro.RewardSystem
// 0x0010 (0x0038 - 0x0028)
class URewardSystem : public UObject
{
public:
	class URewardState*                                RewardState;                                              // 0x0028(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class URewardTable*                                RewardTable;                                              // 0x0030(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RewardSystem");
		return ptr;
	}


	struct FRewardResult SelectReward(const struct FRewardSelectionParameters& params);
	bool MarkActorTypeAsResearched(class UClass* ActorType);
	bool HasActorTypeBeenResearched(class UClass* ActorType);
	bool GrantDurable(class UClass* itemToUnlock);
};


// Class Astro.RewardTable
// 0x0018 (0x0040 - 0x0028)
class URewardTable : public UObject
{
public:
	class UClass*                                      InitiallyUnlockedItems;                                   // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FRewardSet>                          RewardSets;                                               // 0x0030(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RewardTable");
		return ptr;
	}

};


// Class Astro.RingCameraTargeter
// 0x0050 (0x0140 - 0x00F0)
class URingCameraTargeter : public UActorComponent
{
public:
	float                                              AvoidRadians;                                             // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class USceneComponent*                             Target;                                                   // 0x00F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             Center;                                                   // 0x0100(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              CenterDistance;                                           // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LerpSpeed;                                                // 0x010C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PlayerCameraTargetLerp;                                   // 0x0110(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	TArray<class USceneComponent*>                     AvoidTargets;                                             // 0x0118(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor, SaveGame)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0128(0x0008) MISSED OFFSET
	struct FSlotReference                              Slot;                                                     // 0x0130(0x0010)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RingCameraTargeter");
		return ptr;
	}


	void SnapToTargetLocation(const struct FVector& TargetLocation);
	void SnapToTarget(class APlayController* Controller);
	void SetTarget(class USceneComponent* TargetComponent, class USceneComponent* RingCenter, const struct FSlotReference& TargetingSlot);
	void OnSlotDisconnected(const struct FSlotReference& ConnectedSlot, class ASlotConnection* Connection);
	void OnSlotConnected(const struct FSlotReference& ConnectedSlot, class ASlotConnection* Connection);
	class URingCameraTargeter* STATIC_ActorRingCameraTargeter(class AActor* Actor);
};


// Class Astro.RewardSelectionTemplate
// 0x0028 (0x0050 - 0x0028)
class URewardSelectionTemplate : public UObject
{
public:
	struct FRewardSelectionParameters                  SelectionParameters;                                      // 0x0028(0x0028) (Edit)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RewardSelectionTemplate");
		return ptr;
	}

};


// Class Astro.VehicleBase
// 0x0070 (0x06D0 - 0x0660)
class AVehicleBase : public APhysicalItem
{
public:
	struct FScriptMulticastDelegate                    OnVehicleManned;                                          // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVehicleUnmanned;                                        // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVehicleBaseReplicationData                 VehicleBaseReplicationData;                               // 0x0680(0x0010) (Net)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0690(0x0010) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnVehicleAux1ActionPerformed;                             // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVehicleAux2ActionPerformed;                             // 0x06B0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UStorageChassisComponent*                    storage;                                                  // 0x06C0(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x06C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VehicleBase");
		return ptr;
	}


	void VehicleLostPilotInSeat(class AAstroPlayerController* Driver, class ASeatBase* Seat);
	void VehicleGainedPilotInSeat(class AAstroPlayerController* Driver, class ASeatBase* Seat);
	void PerformVehicleAux2Action(class AAstroPlayerController* OriginatingController, TEnumAsByte<EInputEvent> EventType);
	void PerformVehicleAux1Action(class AAstroPlayerController* OriginatingController, TEnumAsByte<EInputEvent> EventType);
	void OnRep_VehicleBaseReplicationData();
	class ASeatBase* GetDrivingControllerSeat();
	class AAstroPlayerController* GetDrivingController();
};


// Class Astro.RoverBase
// 0x00A0 (0x0770 - 0x06D0)
class ARoverBase : public AVehicleBase
{
public:
	unsigned char                                      UnknownData00[0x18];                                      // 0x06D0(0x0018) MISSED OFFSET
	float                                              TunnelBoringDeformerBaseScale;                            // 0x06E8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   TunnelBoringTiltIndicatorPositionOffset;                  // 0x06EC(0x0008) (Edit, IsPlainOldData)
	float                                              MaximumDisplaySeatedFlipPromptVelocity;                   // 0x06F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MinimumSeatedHideFlipPromptVelocity;                      // 0x06F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06FC(0x0004) MISSED OFFSET
	class UControlledVehicleMovement*                  ControlledVehicleMovement;                                // 0x0700(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UWheeledChassisComponent*                    WheeledChassisComponent;                                  // 0x0708(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UStorageChassisComponent*                    StorageChassisComponent;                                  // 0x0710(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UParticleSystemComponent*>            WheelBlowFX;                                              // 0x0718(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<struct FName>                               AudioSurfaceTypes;                                        // 0x0728(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	struct FScriptMulticastDelegate                    OnRoverMovementStateChanged;                              // 0x0738(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FName                                       UseSuppressionID;                                         // 0x0748(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0750(0x0010) MISSED OFFSET
	bool                                               bIsFlipped;                                               // 0x0760(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xF];                                       // 0x0761(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.RoverBase");
		return ptr;
	}


	void UpdateUseSuppression(bool ShouldBeSuppressed);
	void UpdateTunnelBoringOriginInternal(class USceneComponent* FrontRightWheel, class USceneComponent* FrontLeftWheel, class USceneComponent* BackRightWheel, class USceneComponent* BackLeftWheel, bool IsFrontMountedDrill, class USceneComponent* TunnelBoringOrigion);
	class USceneComponent* UpdateAndGetTunnelBoringOrigin(const struct FSlotReference& slotDrillIsIn);
	void ServerReceiveSeatExitOverriddenWithFlip(bool ExitOverridden);
	void RouteAux2ToggleUse(class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> EventType);
	void RouteAux1ToggleUse(class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> EventType);
	void HandleVehicleUnmanned(class AAstroPlayerController* OldPilot);
	void HandleVehicleManned(class AAstroPlayerController* NewPilot);
	bool GetUnbundleOriginFromAuxSlot(const struct FSlotReference& AuxSlot, int SubslotIndex, struct FVector* OutLocation, struct FVector* OutForward);
	void EngageRollYawModifier();
	void DisengageRollYawModifier();
	bool Authority_GetSeatExitOverriddenWithFlip();
};


// Class Astro.ScalabilitySettings
// 0x0020 (0x0058 - 0x0038)
class UScalabilitySettings : public UDeveloperSettings
{
public:
	float                                              MinInstancedDecoratorLODDistance;                         // 0x0038(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinDecoratorLODDistance;                                  // 0x003C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FPlatformScalability                        PCSettings;                                               // 0x0040(0x000C) (Edit, Config)
	struct FPlatformScalability                        XboxOneSettings;                                          // 0x004C(0x000C) (Edit, Config)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ScalabilitySettings");
		return ptr;
	}

};


// Class Astro.ScannableComponent
// 0x00E0 (0x01D0 - 0x00F0)
class UScannableComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x00F0(0x0070) MISSED OFFSET
	struct FScannableStatus                            Status;                                                   // 0x0160(0x0020) (BlueprintVisible, BlueprintReadOnly)
	struct FName                                       ScannableName;                                            // 0x0180(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EScannableType                                     ScannableType;                                            // 0x0188(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0189(0x0007) MISSED OFFSET
	struct FComponentReference                         LocationComponentRef;                                     // 0x0190(0x0018) (Edit, DisableEditOnInstance)
	float                                              RecalculateSolarBodyDistanceSquared;                      // 0x01A8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x24];                                      // 0x01AC(0x0024) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ScannableComponent");
		return ptr;
	}

};


// Class Astro.Scanner
// 0x0160 (0x07C0 - 0x0660)
class AScanner : public APhysicalItem
{
public:
	struct FScriptMulticastDelegate                    OnPing;                                                   // 0x0660(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnScanFailed;                                             // 0x0670(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnScannerModeChanged;                                     // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTargetDistanceChanged;                                  // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnMidRangeDistancePercentageChanged;                      // 0x06A0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	EScannerMode                                       ScannerMode;                                              // 0x06B0(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	EScannerTargetDistance                             TargetDistance;                                           // 0x06B1(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x06B2(0x0002) MISSED OFFSET
	float                                              MidRangeDistancePercentage;                               // 0x06B4(0x0004) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, IsPlainOldData)
	float                                              PitchAnimationValue;                                      // 0x06B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              YawAnimationValue;                                        // 0x06BC(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ScanCooldownTimeSeconds;                                  // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShortRangeMaxDistance;                                    // 0x06C4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MidRangeMaxDistance;                                      // 0x06C8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x06CC(0x0004) MISSED OFFSET
	class UCurveFloat*                                 PitchAlphaCurve;                                          // 0x06D0(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShortRangeScanDurationSeconds;                            // 0x06D8(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LongRangeScanDurationSeconds;                             // 0x06DC(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FMidRangeScanSettings                       MidRangeMinDistanceScanParameters;                        // 0x06E0(0x0014) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FMidRangeScanSettings                       MidRangeMaxDistanceScanParameters;                        // 0x06F4(0x0014) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 MidRangeScanSpeedTransitionCurve;                         // 0x0708(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 MidRangeScanSpeedSelectionCurve;                          // 0x0710(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MidRangeScanSweepCount;                                   // 0x0718(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x071C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 ObfuscationYawOffsetCurve;                                // 0x0720(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ObfuscationYawOffsetCurveFrequency;                       // 0x0728(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxObfuscationYawOffsetMultiplier;                        // 0x072C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MidRangeScanIntroAnimationLengthSeconds;                  // 0x0730(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0734(0x0004) MISSED OFFSET
	struct FScannableStatus                            CurrentTarget;                                            // 0x0738(0x0020) (Net)
	TWeakObjectPtr<class AAstroCharacter>              UsingCharacter;                                           // 0x0758(0x0008) (Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x60];                                      // 0x0760(0x0060) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Scanner");
		return ptr;
	}


	void OnRep_UsingCharacter();
	void OnRep_TargetDistance();
	void OnRep_ScannerMode();
	void OnRep_MidRangeDistancePercentage();
	void OnPowerAvailableChanged(bool hasPower);
	void OnMidRangeScanIntroAnimationCompleted();
	void HandleVehicleUnmanned(class AAstroPlayerController* oldUsingPlayer);
	void HandleVehicleManned(class AAstroPlayerController* newUsingPlayer);
	void HandleReleasedFromSlot(bool NewOwner);
	void HandlePlacedInSlot();
	void AuthorityTryScan();
	void AuthorityOnScanCompleted();
};


// Class Astro.ScatteredMeshDecoratorStreamer
// 0x01A8 (0x0550 - 0x03A8)
class AScatteredMeshDecoratorStreamer : public AActor
{
public:
	class UTerrainInterface*                           Terrain;                                                  // 0x03A8(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF0];                                      // 0x03B0(0x00F0) MISSED OFFSET
	TArray<class APawn*>                               Pawns;                                                    // 0x04A0(0x0010) (ZeroConstructor, Transient)
	TArray<class AScatteredMeshDecoratorActor*>        LiveDecorators;                                           // 0x04B0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x90];                                      // 0x04C0(0x0090) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ScatteredMeshDecoratorStreamer");
		return ptr;
	}

};


// Class Astro.SeatBase
// 0x0010 (0x0670 - 0x0660)
class ASeatBase : public APhysicalItem
{
public:
	struct FSeatReplicationData                        SeatReplicationData;                                      // 0x0660(0x0008) (Net)
	class UActorAttachmentsComponent*                  ActorAttachmentsComponent;                                // 0x0668(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SeatBase");
		return ptr;
	}


	void HandleSeatReleasedFromSlot(bool NewOwner);
	void HandleSeatPlacedInSlot();
	class AVehicleBase* GetVehicleSlottedTo();
};


// Class Astro.ScatteredMeshDecoratorActor
// 0x00D0 (0x0478 - 0x03A8)
class AScatteredMeshDecoratorActor : public AActor
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x03A8(0x0008) MISSED OFFSET
	struct FTerrainMaterial                            TerrainMaterial;                                          // 0x03B0(0x0058) (BlueprintVisible, BlueprintReadOnly)
	class UClass*                                      ItemType;                                                 // 0x0408(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ItemCollectionMultiplier;                                 // 0x0410(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0414(0x0004) MISSED OFFSET
	class UInstancedStaticMeshComponent*               InstancedMesh;                                            // 0x0418(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SphereComponent;                                          // 0x0420(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              OverrideRadius;                                           // 0x0428(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x042C(0x0004) MISSED OFFSET
	class UClass*                                      DestroySpawnActor;                                        // 0x0430(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0438(0x0010) MISSED OFFSET
	uint64_t                                           DecoratorID;                                              // 0x0448(0x0008) (Edit, ZeroConstructor, Transient, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData04[0x28];                                      // 0x0450(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ScatteredMeshDecoratorActor");
		return ptr;
	}

};


// Class Astro.ShelterTutorialComponent
// 0x0068 (0x0158 - 0x00F0)
class UShelterTutorialComponent : public UActorComponent
{
public:
	class UClass*                                      GrabSlotIndicator;                                        // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      AttachSlotIndicator;                                      // 0x00F8(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnCableTutorialComplete;                                  // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               CableTutorialIsComplete;                                  // 0x0110(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	TArray<class AResourceInfo*>                       ShelterCableIndicators;                                   // 0x0118(0x0010) (ZeroConstructor)
	TArray<class AResourceInfo*>                       PlatformCableIndicators;                                  // 0x0128(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x20];                                      // 0x0138(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.ShelterTutorialComponent");
		return ptr;
	}


	void StopCableTutorial();
	void SetupCableTutorial(TArray<struct FSlotReference> shelterCableSlots, class APhysicalItem* Platform);
	void SetCableTutorialKey(const struct FName& tutorialKey);
	void OnCablePulled(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableDestroyed(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void OnCableConnected(const struct FSlotReference& cableSlot, class ASlotConnection* cable);
	void CableTutorialCompleteEvent__DelegateSignature();
};


// Class Astro.SimpleCollisionModifierComponent
// 0x0008 (0x0130 - 0x0128)
class USimpleCollisionModifierComponent : public UCameraModifierComponent
{
public:
	float                                              CollisionSphereRadius;                                    // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SimpleCollisionModifierComponent");
		return ptr;
	}

};


// Class Astro.SimulatingParentProxyComponent
// 0x0008 (0x00F8 - 0x00F0)
class USimulatingParentProxyComponent : public UActorComponent
{
public:
	class AActor*                                      proxy;                                                    // 0x00F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SimulatingParentProxyComponent");
		return ptr;
	}

};


// Class Astro.SlotBehavior
// 0x0010 (0x0038 - 0x0028)
class USlotBehavior : public UObject
{
public:
	struct FSlotReference                              Slot;                                                     // 0x0028(0x0010) (BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotBehavior");
		return ptr;
	}

};


// Class Astro.SlotBehaviorBlueprint
// 0x0000 (0x0038 - 0x0038)
class USlotBehaviorBlueprint : public USlotBehavior
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotBehaviorBlueprint");
		return ptr;
	}


	void OnParentStartedInWorld(class APhysicalItem* Parent);
	void OnParentPickedUpFromWorld(class APhysicalItem* Parent);
	void OnParentDroppedInWorld(class APhysicalItem* Parent, class UPrimitiveComponent* Component, const struct FVector& Point, const struct FVector& Normal);
};


// Class Astro.SlotBehaviorPlatform
// 0x00C8 (0x0100 - 0x0038)
class USlotBehaviorPlatform : public USlotBehavior
{
public:
	bool                                               AllowBodies;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              HoverHeight;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              KinematicMovementDuration;                                // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FName>                               AnchorSampleComponents;                                   // 0x0048(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	unsigned char                                      bDisableCollisionAfterPlace : 1;                          // 0x0058(0x0001) (Edit)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
	class APhysicalItem*                               Parent;                                                   // 0x0060(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x78];                                      // 0x0068(0x0078) MISSED OFFSET
	TArray<class USceneComponent*>                     AnchorComponents;                                         // 0x00E0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData04[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotBehaviorPlatform");
		return ptr;
	}


	void OnParentDeformed(const struct FDeformationParams& params);
	void OnActorOverlappedDuringKinematicMovement(class UPrimitiveComponent* ownerRootPrimitive, class AActor* OverlappedActor, class UPrimitiveComponent* OverlappedComponent);
};


// Class Astro.SelectionIndicatorComponent
// 0x0010 (0x0100 - 0x00F0)
class USelectionIndicatorComponent : public UActorComponent
{
public:
	class AActor*                                      OtherActor;                                               // 0x00F0(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               IgnoreSelf;                                               // 0x00F8(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               Indicate;                                                 // 0x00F9(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SelectionIndicatorComponent");
		return ptr;
	}

};


// Class Astro.SlotConnection
// 0x0338 (0x06E0 - 0x03A8)
class ASlotConnection : public AActor
{
public:
	class UClass*                                      ExtenderItemTypeUnbundled;                                // 0x03A8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     ExtenderPlacementOffset;                                  // 0x03B0(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              PhysicsConstraintConeStiffness;                           // 0x03BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsConstraintTwistStiffness;                          // 0x03C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsConstraintLinearStiffness;                         // 0x03C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              JointOffset;                                              // 0x03C8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Swing1LimitDegrees;                                       // 0x03CC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Swing2LimitDegrees;                                       // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TwistLimitDegrees;                                        // 0x03D4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdjustDistance;                                           // 0x03D8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              BreakDistance;                                            // 0x03DC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              DragDistance;                                             // 0x03E0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ComponentBreakDistance;                                   // 0x03E4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MinConnectionLength;                                      // 0x03E8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               UseSourceScale;                                           // 0x03EC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03ED(0x0003) MISSED OFFSET
	float                                              StretchForce;                                             // 0x03F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              SourceForceBias;                                          // 0x03F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              StretchDampening;                                         // 0x03F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               Stretchy;                                                 // 0x03FC(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               CanAttachAny;                                             // 0x03FD(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x03FE(0x0002) MISSED OFFSET
	float                                              ConnectorVerticalOffsetWhileDragging;                     // 0x0400(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0404(0x0004) MISSED OFFSET
	class UClass*                                      ConnectionSpawnedByIndicator;                             // 0x0408(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UStaticMesh*                                 ConnectorMesh;                                            // 0x0410(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector                                     ConnectorLocation;                                        // 0x0418(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              ConnectorHoverInSlotForwardOffset;                        // 0x0424(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              SourceSlot;                                               // 0x0428(0x0010) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	struct FSlotReference                              TargetSlot;                                               // 0x0438(0x0010) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	class APhysicsConstraintActor*                     SlotConstraint;                                           // 0x0448(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      ConstraintBuilt : 1;                                      // 0x0450(0x0001) (SaveGame)
	unsigned char                                      ConstraintSleeping : 1;                                   // 0x0450(0x0001) (SaveGame)
	unsigned char                                      Built : 1;                                                // 0x0450(0x0001) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      Visible : 1;                                              // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      TargetTetherLocation : 1;                                 // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      clickable : 1;                                            // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	unsigned char                                      BreakImmediate : 1;                                       // 0x0450(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      CanConnectComponents : 1;                                 // 0x0450(0x0001) (Edit, BlueprintVisible, SaveGame)
	unsigned char                                      OverrideUnbreakable : 1;                                  // 0x0451(0x0001) (Edit, BlueprintVisible, SaveGame)
	unsigned char                                      UsePhysicsConstraint : 1;                                 // 0x0451(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      Destroying : 1;                                           // 0x0451(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      IsIndicator : 1;                                          // 0x0451(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      ClickableAfterRelease : 1;                                // 0x0451(0x0001) (Edit)
	unsigned char                                      bCarriesOxygen : 1;                                       // 0x0451(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      SourceTense : 1;                                          // 0x0451(0x0001) (Edit)
	unsigned char                                      TargetTense : 1;                                          // 0x0451(0x0001) (Edit)
	unsigned char                                      TargetConnectorTense : 1;                                 // 0x0452(0x0001) (Edit)
	unsigned char                                      UseSplineCable : 1;                                       // 0x0452(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData03[0x1];                                       // 0x0453(0x0001) MISSED OFFSET
	float                                              GravityTension;                                           // 0x0454(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurveTension;                                             // 0x0458(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurrentConnectionLength;                                  // 0x045C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              ConnectionLength;                                         // 0x0460(0x0004) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              SegmentLength;                                            // 0x0464(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SegmentScale;                                             // 0x0468(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x046C(0x0004) MISSED OFFSET
	class UStaticMeshComponent*                        Connector;                                                // 0x0470(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class AActor*                                      HangingActor;                                             // 0x0478(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	class UInstancedStaticMeshComponent*               SegmentComponent;                                         // 0x0480(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USplineMeshComponent*                        SplineMeshComponent;                                      // 0x0488(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	float                                              CableExtendSpeed;                                         // 0x0490(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0494(0x0004) MISSED OFFSET
	struct FString                                     AttachAudioEventName;                                     // 0x0498(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     DetachAudioEventName;                                     // 0x04A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SlotHoverAudioEventName;                                  // 0x04B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     FullyRetractedAudioEventName;                             // 0x04C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ConnectionLengthIncreaseAudioEventName;                   // 0x04D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ConnectionLengthDecreaseAudioEventName;                   // 0x04E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ConnectionLengthAudioEventInterval;                       // 0x04F8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x04FC(0x0004) MISSED OFFSET
	struct FName                                       ConnectionLengthRTPCName;                                 // 0x0500(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnApproximateSplineLengthChanged;                         // 0x0508(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDisconnectedSignal;                                     // 0x0518(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnPreDisconnected;                                        // 0x0528(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FSlotConnectionReplicationData              m_replicationData;                                        // 0x0538(0x0040) (Net)
	struct FSlotConnectionMotionReplicationData        m_replicationMotionData;                                  // 0x0578(0x0024) (Net)
	unsigned char                                      UnknownData07[0x4];                                       // 0x059C(0x0004) MISSED OFFSET
	class UAdaptiveTickComponent*                      AdaptiveTickComponent;                                    // 0x05A0(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SourcePoint;                                              // 0x05A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TargetPoint;                                              // 0x05B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FTimerHandle                                DestroyTimer;                                             // 0x05B8(0x0008) (Transient)
	class UPrimitiveComponent*                         ConnectedComponent;                                       // 0x05C0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData08[0x118];                                     // 0x05C8(0x0118) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotConnection");
		return ptr;
	}


	void ServerUpdateClientMotion(const struct FSlotConnectionClientMotionData& motionData);
	void ServerReleaseCable();
	void ServerDoTimedDestruction();
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void PlaceExtenderForHeldCable(class APhysicalItem* ExtenderBundle);
	void OnTetherAttachComponentHasOxygenChanged(bool bHasOxygen);
	void OnSelfDestroyed(class AActor* Actor);
	void OnSelfClicked(class AActor* Actor, const struct FKey& Key);
	void OnSegmentSpawn();
	void OnSegmentDestroy();
	void OnRep_SlotData();
	void OnIsCarryingOxygenChanged(bool bIsCarryingOxygen);
	void OnHoverOtherSlot(const struct FSlotReference& Slot);
	void OnFullyRetracted();
	void OnDisconnected();
	void OnConnected();
	void MulticastBeginHoverOverSlotFX();
	void MakeConnection(const struct FSlotReference& Slot);
	void MakeComponentConnection(class UPrimitiveComponent* Component, const struct FVector& Location, const struct FVector& Normal);
	struct FSlotReference GetOtherSlot(const struct FSlotReference& Slot);
	struct FVector GetEndpointLocation(bool allowConnections);
	struct FVector GetCurveNormal(float Alpha, float Tensile);
	struct FVector GetCurveLocation(float Alpha, float Tensile);
	bool GetConnectionMidpoint(struct FVector* outVector);
	bool CanConnect(const struct FSlotReference& Slot);
	void Break();
};


// Class Astro.SlotControlUnlockBehaviorDefinition
// 0x0010 (0x0050 - 0x0040)
class USlotControlUnlockBehaviorDefinition : public UAstroEntityComponentSubobjectDefinition
{
public:
	TArray<struct FName>                               ControlledSlotNames;                                      // 0x0040(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotControlUnlockBehaviorDefinition");
		return ptr;
	}

};


// Class Astro.SlotControlUnlockBehavior
// 0x0010 (0x0058 - 0x0048)
class USlotControlUnlockBehavior : public UUnlockBehavior
{
public:
	TArray<struct FSlotReference>                      ControlledSlotRefs;                                       // 0x0048(0x0010) (ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotControlUnlockBehavior");
		return ptr;
	}


	void RespondToLockedStateChanged(const struct FAstroDatumRef& changedLockableComponent, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.SlotBehaviorTerrain
// 0x0058 (0x0090 - 0x0038)
class USlotBehaviorTerrain : public USlotBehavior
{
public:
	bool                                               AllowBodies;                                              // 0x0038(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0039(0x0003) MISSED OFFSET
	float                                              HoverHeight;                                              // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               PlaceUpright;                                             // 0x0040(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bDisableCollisionAfterPlace : 1;                          // 0x0041(0x0001) (Edit)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	class APhysicalItem*                               Parent;                                                   // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0050(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotBehaviorTerrain");
		return ptr;
	}


	void OnParentDeformed(const struct FDeformationParams& params);
};


// Class Astro.SlotOrganizationRuleBroker
// 0x0050 (0x0078 - 0x0028)
class USlotOrganizationRuleBroker : public UObject
{
public:
	TMap<class AActor*, struct FSlotOrganizationRulesState> OrganizationRuleStates;                                   // 0x0028(0x0050) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotOrganizationRuleBroker");
		return ptr;
	}

};


// Class Astro.SlotResourceBehaviorComponent
// 0x0028 (0x0118 - 0x00F0)
class USlotResourceBehaviorComponent : public UActorComponent
{
public:
	bool                                               EjectWhenFull;                                            // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              EjectForce;                                               // 0x00F4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              EjectReceiver;                                            // 0x00F8(0x0010) (Edit, BlueprintVisible)
	struct FString                                     EjectAudioEvent;                                          // 0x0108(0x0010) (Edit, BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotResourceBehaviorComponent");
		return ptr;
	}

};


// Class Astro.SlotDelegates
// 0x00C0 (0x00E8 - 0x0028)
class USlotDelegates : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnSetItem;                                                // 0x0028(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnReleaseItem;                                            // 0x0038(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnEmplaceItem;                                            // 0x0048(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnUnemplaceItem;                                          // 0x0058(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDestroyItem;                                            // 0x0068(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionBuild;                                        // 0x0078(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionBuilding;                                     // 0x0088(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionComplete;                                     // 0x0098(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionPostComplete;                                 // 0x00A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionRemove;                                       // 0x00B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnConnectionDestroy;                                      // 0x00C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIndicatorClick;                                         // 0x00D8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotDelegates");
		return ptr;
	}

};


// Class Astro.SlotsComponent
// 0x0068 (0x0158 - 0x00F0)
class USlotsComponent : public UActorComponent
{
public:
	unsigned char                                      bPreserveLegacyVisuals : 1;                               // 0x00F0(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	TArray<struct FSlot>                               slots;                                                    // 0x00F8(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FSlotTransition>                     SlotTransitions;                                          // 0x0108(0x0010) (BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor)
	TArray<uint32_t>                                   ReplicatedSlotClickability;                               // 0x0118(0x0010) (Net, ZeroConstructor, Transient)
	TArray<uint32_t>                                   ReplicatedSlotsAcceptItems;                               // 0x0128(0x0010) (Net, ZeroConstructor, Transient)
	TArray<uint32_t>                                   ReplicatedSlotRuleStatus;                                 // 0x0138(0x0010) (Net, ZeroConstructor, Transient)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0148(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotsComponent");
		return ptr;
	}


	bool STATIC_TakeSlotItemOfTypeFromOther(const struct FSlotReference& Slot, const struct FSlotReference& Other, class UClass* Type);
	bool STATIC_TakeSlotItemFromOther(const struct FSlotReference& Slot, const struct FSlotReference& Other);
	bool STATIC_SpawnItemTypeInSlotWithDefaultContainer(const struct FSlotReference& Slot, class UClass* Type, class UClass* DefaultContainerType, bool StartFull);
	bool STATIC_SpawnItemTypeInSlot(const struct FSlotReference& Slot, class UClass* Type, bool StartFull);
	class APhysicalItem* STATIC_SpawnActorInSlot(const struct FSlotReference& Slot, class UClass* Class);
	bool STATIC_SlotValidSlow(const struct FSlotReference& Slot);
	bool STATIC_SlotValid(const struct FSlotReference& Slot);
	bool STATIC_SlotsEqual(const struct FSlotReference& A, const struct FSlotReference& B);
	int STATIC_SlotPushIndicatorItemTypes(const struct FSlotReference& Slot, int Count, const struct FSlotIndicatorDefinition& IndicatorDefinition, TArray<int>* OutSubslotIndices);
	bool STATIC_SlotPowerIncomingOnly(const struct FSlotReference& Slot);
	bool STATIC_SlotIsTrailerHitch(const struct FSlotReference& Slot);
	int STATIC_SlotGetTier(const struct FSlotReference& Slot);
	int STATIC_SlotGetNumIndicators(const struct FSlotReference& Slot);
	void STATIC_SlotEnable(const struct FSlotReference& Slot, bool Enable);
	void STATIC_SlotDestroyIndicators(const struct FSlotReference& Slot);
	int STATIC_SlotAttemptToPushIndicatorIntoSpecificSubslot(const struct FSlotReference& Slot, int SubslotIndex, const struct FSlotIndicatorDefinition& IndicatorDefinition);
	bool STATIC_SlotAttemptToChangeItemAmountNormalized(const struct FSlotReference& Slot, class UClass* ItemType, float normalizedAmount);
	bool STATIC_SlotAddIndicatorItemTypeAttemptPackage(const struct FSlotReference& Slot, class UClass* ItemType);
	bool STATIC_SlotAddIndicatorItemType(const struct FSlotReference& Slot, class UClass* ItemType);
	bool STATIC_SlotAddIndicatorItemAttemptPackage(const struct FSlotReference& Slot, class UClass* Type);
	bool STATIC_SlotAddIndicatorItem(const struct FSlotReference& Slot, class UClass* Type);
	bool STATIC_SlotAcceptsItemTypeWithChangeInAmount(const struct FSlotReference& Slot, class UClass* ItemType, bool isChangePositive);
	bool STATIC_SlotAcceptsItem(const struct FSlotReference& Slot, class APhysicalItem* Item);
	void STATIC_SetSlotRelativeTransform(const struct FSlotReference& Slot, const struct FTransform& Transform);
	void STATIC_SetSlotClickable(const struct FSlotReference& A, bool clickable);
	void STATIC_SetSlotBreakable(const struct FSlotReference& Slot, bool Breakable);
	void STATIC_SetSlotAcceptsUnslottableItems(const struct FSlotReference& SlotRef, bool bAcceptsUnslottableItems);
	void STATIC_SetSlotAcceptsItems(const struct FSlotReference& A, bool bAcceptsItems);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void STATIC_ReleaseSlotItemForce(const struct FSlotReference& Slot, float RandomForce);
	void STATIC_ReleaseItemWithEjectionImpulse(const struct FSlotReference& Slot, class APhysicalItem* Item, bool NewOwner, bool FromTool, const struct FVector& ejectionImpulse, const struct FVector& ejectionImpulseOffset);
	void STATIC_ReleaseItem(const struct FSlotReference& Slot, class APhysicalItem* Item, bool NewOwner, bool FromTool, float RandomForce);
	void OnSlotItemDestroyed(class AActor* Actor);
	void OnSlotIndicatorClicked(const struct FSlotReference& Slot, class UClass* Type);
	void OnRep_SlotTransitions();
	void OnRep_SlotsAcceptItems();
	void OnRep_SlotRuleStatus();
	void OnRep_SlotClickability();
	struct FSlotReference MakeReference(const struct FName& SlotName);
	class ASlotConnection* STATIC_MakeExclusiveConnection(const struct FSlotReference& A, const struct FSlotReference& B, class UClass* OverrideType);
	class ASlotConnection* STATIC_MakeConnection(const struct FSlotReference& A, const struct FSlotReference& B, class UClass* OverrideType, bool Visible);
	ESlotType STATIC_GetSlotType(const struct FSlotReference& Slot);
	struct FTransform STATIC_GetSlotTransform(const struct FSlotReference& Slot);
	struct FTransform STATIC_GetSlotRelativeTransform(const struct FSlotReference& Slot);
	class APhysicalItem* STATIC_GetSlotPrimaryItem(const struct FSlotReference& Slot);
	class USlotsComponent* STATIC_GetSlotOwner(const struct FSlotReference& Slot);
	ESlotConfiguration STATIC_GetSlotOrientationConfiguration(const struct FSlotReference& Slot);
	TArray<class UStaticMeshComponent*> STATIC_GetSlotLegacyMeshes(const struct FSlotReference& Slot);
	TArray<class APhysicalItem*> STATIC_GetSlotItems(const struct FSlotReference& Slot);
	class APhysicalItem* STATIC_GetSlotItem(const struct FSlotReference& Slot, int SubslotIndex);
	TArray<class ASlotConnection*> STATIC_GetSlotExternalConnections(const struct FSlotReference& Slot);
	class USlotDelegates* STATIC_GetSlotDelegates(const struct FSlotReference& Slot);
	ESlotConnectorType STATIC_GetSlotConnectorType(const struct FSlotReference& Slot);
	struct FSlotReference STATIC_GetSlotConnectedSlot(const struct FSlotReference& Slot);
	void STATIC_EmplaceSlotItem(const struct FSlotReference& Slot, class APhysicalItem* Item, bool SnapTo, bool weld);
	void STATIC_DestroySlotItem(const struct FSlotReference& Slot);
	void STATIC_BreakAllSlotConnections(const struct FSlotReference& Slot);
	void AuxUseRight(class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> InputEvent);
	void AuxUseLeft(class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> InputEvent);
	void AuxUseAll(class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> InputEvent);
	void AuxUse(const struct FSlotReference& AuxSlot, class AAstroPlayerController* Controller, TEnumAsByte<EInputEvent> InputEvent);
};


// Class Astro.SlotStatics
// 0x0000 (0x0028 - 0x0028)
class USlotStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlotStatics");
		return ptr;
	}


	bool STATIC_WillTakePhysicalItemToSlotArray(TArray<struct FSlotReference> slots, class APhysicalItem* Item);
	int STATIC_WillAddItem(const struct FSlotReference& SlotRef, class UClass* Type, int Amount, float EjectForce);
	bool STATIC_TakeToSlotArray(TArray<struct FSlotReference> slots, const struct FSlotReference& Other);
	int STATIC_TakeSlotItemToComponent(class UItemComponent* Component, const struct FSlotReference& Other, int Amount);
	int STATIC_TakeSlotItemRateToComponent(class UItemComponent* Component, const struct FSlotReference& Other, float Rate);
	int STATIC_TakeSlotItemRateDeltaToComponent(class UItemComponent* Component, const struct FSlotReference& Other, float Rate, float DeltaTime);
	int STATIC_TakeSlotItemRateDelta(const struct FSlotReference& Slot, const struct FSlotReference& Other, float Rate, float DeltaTime);
	int STATIC_TakeSlotItemRate(const struct FSlotReference& Slot, const struct FSlotReference& Other, float Rate);
	int STATIC_TakeSlotItem(const struct FSlotReference& Slot, const struct FSlotReference& Other, int Amount);
	bool STATIC_TakeSlotArrayPhysicalItemOfTypeToSlotArray(TArray<struct FSlotReference> FromSlots, TArray<struct FSlotReference> ToSlots, class UClass* Type, TArray<class APhysicalItem*> IgnoredItems);
	bool STATIC_TakePhysicalItemToSlotArray(TArray<struct FSlotReference> slots, class APhysicalItem* Item, bool FromTool);
	int STATIC_TakeItemToSlotArrayRateDelta(TArray<struct FSlotReference> slots, const struct FSlotReference& Other, float Rate, float DeltaTime);
	int STATIC_TakeItemToSlotArrayRate(class UObject* WorldContextObject, TArray<struct FSlotReference> slots, const struct FSlotReference& Other, float Rate);
	int STATIC_TakeItemToSlotArray(TArray<struct FSlotReference> slots, const struct FSlotReference& Other, int Amount);
	int STATIC_TakeItemRateDelta(const struct FSlotReference& Slot, class UClass* Type, float Rate, float DeltaTime);
	int STATIC_TakeItemRate(const struct FSlotReference& Slot, class UClass* Type, float Rate);
	int STATIC_TakeItemFromSlotArrayRateDelta(TArray<struct FSlotReference> slots, class UClass* Type, float Rate, float DeltaTime, int Max);
	int STATIC_TakeItemFromSlotArrayRate(class UObject* WorldContextObject, TArray<struct FSlotReference> slots, class UClass* Type, float Rate, int Max);
	int STATIC_TakeItemFromSlotArray(TArray<struct FSlotReference> slots, class UClass* Type, int Amount);
	int STATIC_TakeItem(const struct FSlotReference& Slot, class UClass* Type, int Amount);
	int STATIC_TakeComponentItemToSlot(const struct FSlotReference& SlotRef, class UItemComponent* otherComponent, int Amount);
	int STATIC_TakeComponentItemRateToSlot(const struct FSlotReference& SlotRef, class UItemComponent* Other, float Rate);
	int STATIC_TakeComponentItemRateDeltaToSlot(const struct FSlotReference& SlotRef, class UItemComponent* Other, float Rate, float DeltaTime);
	int STATIC_TakeAnyItemRateDelta(const struct FSlotReference& Slot, float Rate, float DeltaTime, class UClass** Type);
	int STATIC_TakeAnyItemRate(const struct FSlotReference& Slot, float Rate, class UClass** Type);
	int STATIC_TakeAnyItemFromSlotArrayRateDelta(TArray<struct FSlotReference> slots, float Rate, float DeltaTime);
	int STATIC_TakeAnyItemFromSlotArrayRate(class UObject* WorldContextObject, TArray<struct FSlotReference> slots, float Rate);
	int STATIC_TakeAnyItemFromSlotArray(TArray<struct FSlotReference> slots, int Amount);
	int STATIC_TakeAnyItem(const struct FSlotReference& Slot, int Amount, class UClass** Type);
	bool STATIC_SpawnItemsInSlotArray(TArray<struct FSlotReference> slots, TArray<class UClass*> ItemsToSpawn, TArray<class APhysicalItem*>* OutSpawnedItems);
	bool STATIC_SlotsInRangeForConnectionType(const struct FSlotReference& slotRefA, const struct FSlotReference& slotRefB, class UClass* connectionType);
	bool STATIC_SlotsInRangeForConnection(const struct FSlotReference& slotRefA, const struct FSlotReference& slotRefB, class ASlotConnection* Connection);
	int STATIC_SlotItemAmount(const struct FSlotReference& Slot, class UClass* Type);
	struct FSlotReference STATIC_SlotArraySlotWithItem(TArray<struct FSlotReference> slots, class UClass* Type);
	struct FSlotReference STATIC_SlotArraySlotWithAnyItem(TArray<struct FSlotReference> slots);
	struct FSlotReference STATIC_SlotArraySlotForPhysicalItem(TArray<struct FSlotReference> slots, class APhysicalItem* PhysicalItem);
	struct FSlotReference STATIC_SlotArraySlotForItem(TArray<struct FSlotReference> slots, class UClass* Type);
	struct FSlotReference STATIC_SlotArrayQueryBestSlot(TArray<struct FSlotReference> slots, class UClickQuery* Query);
	struct FSlotReference STATIC_SlotArrayQueryBestFullSlot(TArray<struct FSlotReference> slots, class UClickQuery* Query);
	struct FSlotReference STATIC_SlotArrayQueryBestEmptySlot(TArray<struct FSlotReference> slots, class UClickQuery* Query);
	bool STATIC_SlotArrayHasItem(TArray<struct FSlotReference> slots, class UClass* Type);
	bool STATIC_SlotArrayHasAnyItem(TArray<struct FSlotReference> slots);
	class APhysicalItem* STATIC_SlotArrayGetSlottedItemThatCanAcceptChangeInAmountForItemType(TArray<struct FSlotReference> itemSlots, class UClass* ItemType, bool changeIsPositive);
	int STATIC_SlotArrayGetNumberOfSlottedItemsThatHaveItemType(TArray<struct FSlotReference> itemSlots, class UClass* ItemType);
	int STATIC_SlotArrayGetNumberOfEmptyContainers(TArray<struct FSlotReference> itemSlots, class UClass* typeToCheckAgainstStorageWhitelist);
	bool STATIC_SlotArrayGetItem(TArray<struct FSlotReference> slots, class UClass* Type, int* Amount);
	bool STATIC_SlotArrayGetAllSlottedItemsThatHaveType(TArray<struct FSlotReference> itemSlots, class UClass* ItemType, TArray<class APhysicalItem*>* outItemArray);
	bool STATIC_SlotArrayGetAllSlottedItemsThatCanAcceptChangeInAmountForItemType(TArray<struct FSlotReference> itemSlots, class UClass* ItemType, bool changeIsPositive, TArray<class APhysicalItem*>* outItemArray);
	bool STATIC_SlotArrayGetAllSlottedItemsThatAreEmptyContainers(TArray<struct FSlotReference> itemSlots, class UClass* typeToCheckAgainstStorageWhitelist, TArray<class APhysicalItem*>* outEmptyContainerItems);
	void STATIC_SlotArrayEnableClickable(TArray<struct FSlotReference> slots, bool clickable);
	struct FSlotReference STATIC_SlotArrayEmptySlot(TArray<struct FSlotReference> slots);
	int STATIC_SlotArrayEmptyCount(TArray<struct FSlotReference> slots);
	bool STATIC_MoveItemFromCurrentSlotToSlotArray(class APhysicalItem* Item, TArray<struct FSlotReference> slots);
	bool STATIC_IsSlotAnAuxSlot(const struct FSlotReference& Slot);
	bool STATIC_IsCompatibleWithType(const struct FSlotReference& Slot, class UClass* ItemType);
	bool STATIC_IsAPowerCableSlot(const struct FSlotReference& SlotRef);
	bool STATIC_HasSpaceAvailableAtTier(const struct FSlotReference& SlotRef, int Tier, bool AsIndicator);
	bool STATIC_HasItem(const struct FSlotReference& Slot, class UClass* Type);
	bool STATIC_HasFullResource(const struct FSlotReference& Slot);
	bool STATIC_HasAnyItem(const struct FSlotReference& SlotRef);
	class UPrimitiveComponent* STATIC_GetVisualPrimitiveForIndicator(const struct FSlotReference& SlotRef, int SlotIndicatorIndex);
	class UTooltipComponent* STATIC_GetTooltipForSlot(const struct FSlotReference& SlotRef);
	struct FTransform STATIC_GetSubslotTransform(const struct FSlotReference& SlotRef, int SubslotIndex);
	class UClass* STATIC_GetStoredSubItemTypeClass(const struct FSlotReference& SlotRef);
	class UItemType* GetStoredSubItemTypeCDO(const struct FSlotReference& SlotRef);
	struct FVector STATIC_GetSlotRangeLocation(const struct FSlotReference& SlotRef);
	class UClass* STATIC_GetPrimaryItemTypeClass(const struct FSlotReference& SlotRef);
	class UItemType* GetPrimaryItemTypeCDO(const struct FSlotReference& SlotRef);
	int STATIC_GetNumberOfDiscreteSlottedItems(const struct FSlotReference& SlotRef, class UClass* Type);
	class UClass* STATIC_GetItemTypeClass(const struct FSlotReference& SlotRef);
	class UItemType* GetItemTypeCDO(const struct FSlotReference& SlotRef);
	int STATIC_GetItemAmount(const struct FSlotReference& Slot, class UClass* Type);
	class UTooltipComponent* STATIC_GetIndicatorTooltipForSlot(const struct FSlotReference& SlotRef, int SubslotIndex);
	bool STATIC_GetAnyItem(const struct FSlotReference& SlotRef, int* Amount, class UClass** Type);
	TArray<class APhysicalItem*> STATIC_GetAllItemsInConnectedStorage(class AActor* baseActor);
	int STATIC_FindFirstAvailableSubslot(const struct FSlotReference& SlotRef, int Tier, bool AsIndicator);
	void STATIC_EjectAllItemsInSubslotAndChildSubslots(const struct FSlotReference& SlotRef, int SubslotIndex, bool NewOwner, bool FromTool, float RandomForce);
	class APhysicalItem* STATIC_CloneItemIntoSlot(class APhysicalItem* ItemToClone, const struct FSlotReference& SlotToSpawnCloneIn);
	bool STATIC_AttemptToPlacePrimaryItemInConnectedStorageSlotNetwork(const struct FSlotReference& SlotRef, class AActor* ActorInStorageNetwork);
	bool STATIC_AttemptToPlaceItemInConnectedStorageSlotNetwork(class APhysicalItem* Item, class AActor* ActorInStorageNetwork);
	int STATIC_AttemptToFetchItemsFromConnectedStorageSlotNetworkToSlotArray(class UClass* ItemToRetrieve, TArray<struct FSlotReference> slots, class AActor* ActorInStorageNetwork, int NumToTake);
	bool STATIC_AttemptToFetchItemFromConnectedStorageSlotNetworkToSlotArray(class UClass* ItemToRetrieve, TArray<struct FSlotReference> slots, class AActor* ActorInStorageNetwork, EItemRetrievalQuantityFilter ItemRetrievalQuantityFilter, bool TakeAll);
	int STATIC_AddToSlotArrayRateDelta(TArray<struct FSlotReference> slots, class UClass* Type, float Rate, float DeltaTime);
	int STATIC_AddToSlotArrayRate(class UObject* WorldContextObject, TArray<struct FSlotReference> slots, class UClass* Type, float Rate);
	int STATIC_AddToSlotArray(TArray<struct FSlotReference> slots, class UClass* Type, int Amount);
	int STATIC_AddItemRateDelta(const struct FSlotReference& Slot, class UClass* Type, float Rate, float DeltaTime);
	int STATIC_AddItemRate(const struct FSlotReference& Slot, class UClass* Type, float Rate);
	int STATIC_AddItem(const struct FSlotReference& SlotRef, class UClass* Type, int Amount, float EjectForce);
};


// Class Astro.SlottedItemLockingMechanismDefinition
// 0x0010 (0x0060 - 0x0050)
class USlottedItemLockingMechanismDefinition : public ULockingMechanismDefinition
{
public:
	TArray<struct FSlottedItemRequirement>             SlottedItemRequirements;                                  // 0x0050(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlottedItemLockingMechanismDefinition");
		return ptr;
	}

};


// Class Astro.SlottedItemLockingMechanism
// 0x0010 (0x0070 - 0x0060)
class USlottedItemLockingMechanism : public ULockingMechanism
{
public:
	TArray<struct FSlottedItemRequirementRuntimeState> SlotRequirementsRuntimeState;                             // 0x0060(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SlottedItemLockingMechanism");
		return ptr;
	}


	void OnItemSetInRelevantSlot(class APhysicalItem* Item);
	void OnItemReleasedFromRelevantSlot(class APhysicalItem* Item);
};


// Class Astro.SoilCentrifugeFormula
// 0x0000 (0x0028 - 0x0028)
class USoilCentrifugeFormula : public UItemConversionFormula
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SoilCentrifugeFormula");
		return ptr;
	}

};


// Class Astro.SunlightDetectorComponent
// 0x0040 (0x0130 - 0x00F0)
class USunlightDetectorComponent : public UActorComponent
{
public:
	float                                              MinExposure;                                              // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class USceneComponent*                             CastComponent;                                            // 0x00F8(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              SunExposure;                                              // 0x0100(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    SunlightExceededMinExposure;                              // 0x0108(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    SunlightFellBelowMinExposure;                             // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0128(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SunlightDetectorComponent");
		return ptr;
	}

};


// Class Astro.SolarPowerComponent
// 0x0010 (0x0140 - 0x0130)
class USolarPowerComponent : public USunlightDetectorComponent
{
public:
	float                                              MinPowerOutput;                                           // 0x0130(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              MaxPowerOutput;                                           // 0x0134(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0138(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SolarPowerComponent");
		return ptr;
	}

};


// Class Astro.SolarPowerGeneratorComponentContainer
// 0x0030 (0x0070 - 0x0040)
class USolarPowerGeneratorComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SolarPowerGeneratorComponentContainer");
		return ptr;
	}


	struct FSolarPowerGeneratorComponent STATIC_GetSolarPowerGeneratorComponent(const struct FAstroDatumRef& SolarPowerGeneratorComponentRef, bool* bOutSuccess);
	struct FSolarPowerGeneratorComponent STATIC_FindSolarPowerGeneratorComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.SolarSystem
// 0x0058 (0x0080 - 0x0028)
class USolarSystem : public UObject
{
public:
	struct FScriptMulticastDelegate                    OnGateStationSpawned;                                     // 0x0028(0x0010) (ZeroConstructor, InstancedReference)
	class ADayNight*                                   DayNight;                                                 // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	class ASun*                                        Sun;                                                      // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
	class AGateStation*                                GateStation;                                              // 0x0048(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<class AAstroPlanet*>                        planets;                                                  // 0x0050(0x0010) (ZeroConstructor)
	TArray<class ASolarBody*>                          SolarBodies;                                              // 0x0060(0x0010) (ZeroConstructor)
	class UWorld*                                      World;                                                    // 0x0070(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0078(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SolarSystem");
		return ptr;
	}

};


// Class Astro.SpatialPartition
// 0x0000 (0x0028 - 0x0028)
class USpatialPartition : public UObject
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SpatialPartition");
		return ptr;
	}

};


// Class Astro.SpatialPartitionDiscComponent
// 0x0010 (0x0100 - 0x00F0)
class USpatialPartitionDiscComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SpatialPartitionDiscComponent");
		return ptr;
	}

};


// Class Astro.SpawnLocationComponent
// 0x0010 (0x0100 - 0x00F0)
class USpawnLocationComponent : public UActorComponent
{
public:
	class USceneComponent*                             Spawn;                                                    // 0x00F0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               IsEnabled;                                                // 0x00F8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ESpawnPointType                                    SpawnType;                                                // 0x00F9(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00FA(0x0006) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SpawnLocationComponent");
		return ptr;
	}


	void PushSpawnLocation();
	void PopSpawnLocation();
};


// Class Astro.CraneCameraContext
// 0x0008 (0x0050 - 0x0048)
class UCraneCameraContext : public UCameraContext
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0048(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.CraneCameraContext");
		return ptr;
	}

};


// Class Astro.VehicleCameraContext
// 0x0000 (0x0048 - 0x0048)
class UVehicleCameraContext : public UCameraContext
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VehicleCameraContext");
		return ptr;
	}

};


// Class Astro.SpaceshipCameraContext
// 0x0010 (0x0058 - 0x0048)
class USpaceshipCameraContext : public UCameraContext
{
public:
	class UOrbitalNavigationComponent*                 OrbitalNavComponent;                                      // 0x0048(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0050(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SpaceshipCameraContext");
		return ptr;
	}

};


// Class Astro.SoilConversionTable
// 0x0010 (0x0040 - 0x0030)
class USoilConversionTable : public UDataAsset
{
public:
	TArray<struct FSoilConversion>                     SoilConversions;                                          // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SoilConversionTable");
		return ptr;
	}

};


// Class Astro.SplitterControlPanel
// 0x0000 (0x0478 - 0x0478)
class ASplitterControlPanel : public AControlPanel
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SplitterControlPanel");
		return ptr;
	}


	void ProcessSplitterControlPanelInput();
	void HandleFullyCrackedOrClosed(class UCrackableActorComponent* InCrackableActorComponent, bool bIsCracked);
	void HandleCrackedChanged(class UCrackableActorComponent* InCrackableActorComponent, bool bIsCracked);
};


// Class Astro.StaticMeshSelectorComponent
// 0x0010 (0x1680 - 0x1670)
class UStaticMeshSelectorComponent : public UTerrainPlacementComponent
{
public:
	TArray<class UStaticMesh*>                         Meshes;                                                   // 0x1670(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StaticMeshSelectorComponent");
		return ptr;
	}

};


// Class Astro.StorageChassisComponent
// 0x00E8 (0x01D8 - 0x00F0)
class UStorageChassisComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnSlotEvent;                                              // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSlotReference>                      ExcludeSlots;                                             // 0x0100(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class UActorAttachmentsComponent*>          ActorAttachments;                                         // 0x0110(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, Net, ZeroConstructor)
	bool                                               CanExit;                                                  // 0x0120(0x0001) (BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               IndicateExit;                                             // 0x0121(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               OwnerFacingBack;                                          // 0x0122(0x0001) (BlueprintVisible, Net, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               TertiaryUsable;                                           // 0x0123(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               SaveOnEnter;                                              // 0x0124(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               CanTransferItemsAcrossConnections;                        // 0x0125(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0126(0x0002) MISSED OFFSET
	TArray<struct FSlotReference>                      RailSlots;                                                // 0x0128(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	struct FScriptMulticastDelegate                    OnTertiaryUse;                                            // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTertiaryEnterExit;                                      // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSlotReference>                      slots;                                                    // 0x0158(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, EditConst)
	TArray<class UStorageChassisComponent*>            ChildStorageChassis;                                      // 0x0168(0x0010) (ExportObject, ZeroConstructor)
	TArray<class USlotOrganizationRule*>               OrganizationRules;                                        // 0x0178(0x0010) (Edit, ExportObject, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSlotIndicatorLocation>              SlotIndicatorLocations;                                   // 0x0188(0x0010) (Net, ZeroConstructor)
	TArray<struct FSlotIndicatorLocation>              PreviousSlotIndicatorLocations;                           // 0x0198(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x1];                                       // 0x01A8(0x0001) MISSED OFFSET
	bool                                               IsSpawnPoint;                                             // 0x01A9(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsNewPlayerSpawnPoint;                                    // 0x01AA(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsDefaultSpawnPoint;                                      // 0x01AB(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpawnPointPriority;                                       // 0x01AC(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FComponentReference                         RespawnCameraReference;                                   // 0x01B0(0x0018) (Edit, DisableEditOnInstance)
	TArray<class UActorAttachmentsComponent*>          PrevActorAttachments;                                     // 0x01C8(0x0010) (ExportObject, ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StorageChassisComponent");
		return ptr;
	}


	void TertiaryUse(class APlayerController* Controller);
	void SlotEvent(class APhysicalItem* Item);
	bool QueryTertiary(class APlayerController* Controller, struct FTransform* OutTransform);
	void OnRep_SlotIndicatorLocations();
	void OnRep_ActorAttachments();
	void OnPlayerEnterExitAttachment(bool Entered);
	void OnOwnerDestroyed(class AActor* Owner);
	TArray<struct FSlotReference> GetUnmanagedSlots();
	class UStorageChassisComponent* STATIC_GetOutermostStorage(class AActor* Actor, bool Inclusive);
	class UStorageChassisComponent* STATIC_GetActorStorageChassisComponent(class AActor* Actor);
	class USlotOrganizationRule* FindRuleByName(const struct FName& RuleName);
	int ChangeDeformationDeltaInConnectedSlotNetwork(int sedimentAmount, class UClass* deformedItemType);
	void CalculateItemReservesInConnectedSlotNetwork(class UClass* ItemType, int* outCurrentStoredItemAmount, int* outMaxStorageSize);
	bool AuthorityPlaceItemInLocalStorage(class APhysicalItem* Item);
	bool AuthorityPlaceItemInConnectedSlotNetwork(class APhysicalItem* Item, class AActor* SourceOwner);
	void AuthorityApplyOrganizationRules();
	int AddItem(class UClass* ItemType, int ItemAmount);
};


// Class Astro.StreamingPowerCableComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerCableComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerCableComponentContainer");
		return ptr;
	}


	struct FStreamingPowerCableComponent STATIC_GetStreamingPowerCableComponent(const struct FAstroDatumRef& StreamingPowerCableComponentRef, bool* bOutSuccess);
	struct FStreamingPowerCableComponent STATIC_FindStreamingPowerCableComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.SphericalGravityVolumeComponent
// 0x0010 (0x02F0 - 0x02E0)
class USphericalGravityVolumeComponent : public UCustomGravityVolumeComponent
{
public:
	float                                              SphereRadius;                                             // 0x02E0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyGravityOutward;                                     // 0x02E4(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x02E5(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SphericalGravityVolumeComponent");
		return ptr;
	}

};


// Class Astro.StreamingPowerMergedConnectionComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerMergedConnectionComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerMergedConnectionComponentContainer");
		return ptr;
	}


	struct FStreamingPowerMergedConnectionComponent STATIC_GetStreamingPowerMergedConnectionComponent(const struct FAstroDatumRef& StreamingPowerMergedConnectionComponentRef, bool* bOutSuccess);
	struct FStreamingPowerMergedConnectionComponent STATIC_FindStreamingPowerMergedConnectionComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.StreamingPowerMergedNodeComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerMergedNodeComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerMergedNodeComponentContainer");
		return ptr;
	}


	struct FStreamingPowerMergedNodeComponent STATIC_GetStreamingPowerMergedNodeComponent(const struct FAstroDatumRef& StreamingPowerMergedNodeComponentRef, bool* bOutSuccess);
	struct FStreamingPowerMergedNodeComponent STATIC_FindStreamingPowerMergedNodeComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.StreamingPowerNodeComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerNodeComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerNodeComponentContainer");
		return ptr;
	}


	struct FStreamingPowerNodeComponent STATIC_GetStreamingPowerNodeComponent(const struct FAstroDatumRef& StreamingPowerNodeComponentRef, bool* bOutSuccess);
	struct FStreamingPowerNodeComponent STATIC_FindStreamingPowerNodeComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.StreamingPowerSplitter
// 0x00B0 (0x0710 - 0x0660)
class AStreamingPowerSplitter : public APhysicalItem
{
public:
	struct FStreamingPowerSplitterReplicationData      SplitterRepData;                                          // 0x0660(0x0040) (BlueprintVisible, BlueprintReadOnly, Net)
	unsigned char                                      UnknownData00[0x40];                                      // 0x06A0(0x0040) MISSED OFFSET
	TArray<struct FName>                               CableSlotNames;                                           // 0x06E0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FScriptMulticastDelegate                    OnUpdateSplitterVisualization;                            // 0x06F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSlotReference>                      CableSlotRefs;                                            // 0x0700(0x0010) (ZeroConstructor, Transient)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerSplitter");
		return ptr;
	}


	void UpdateSplitterVisualization__DelegateSignature();
	void OnRep_SplitterData();
	void HandleCableConnectionMade(const struct FSlotReference& SlotRef, class ASlotConnection* Connection);
	void HandleCableConnectionBroken(const struct FSlotReference& SlotRef, class ASlotConnection* Connection);
	EPowerCableConnectionDirection GetDirectionOfCableForSlot(const struct FSlotReference& ConnectedSlot);
	void ChangePowerSplitRatios(TArray<float> SplitRatios);
};


// Class Astro.StreamingPowerSystem
// 0x0010 (0x0040 - 0x0030)
class UStreamingPowerSystem : public UAstroEntitySystem
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0030(0x0008) MISSED OFFSET
	class UAstroStreamingPowerTickTaskManager*         TaskManager;                                              // 0x0038(0x0008) (ZeroConstructor, Transient, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerSystem");
		return ptr;
	}


	bool STATIC_RemovePoweredItemFromActorsPowerNode(class AActor* gridNodeOwner, class AActor* OtherActor);
	void STATIC_CreateMergedConnectionBetweenStreamingPowerNodesOnActors(class AActor* thisActor, class AActor* OtherActor);
	bool STATIC_AddPoweredItemToActorsPowerNode(class AActor* gridNodeOwner, class AActor* OtherActor);
};


// Class Astro.AstroStreamingPowerTickTaskManager
// 0x00B0 (0x0128 - 0x0078)
class UAstroStreamingPowerTickTaskManager : public UAstroEntityTaskManager
{
public:
	class UStreamingPowerSystem*                       StreamingPowerSystem;                                     // 0x0078(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0080(0x00A8) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroStreamingPowerTickTaskManager");
		return ptr;
	}

};


// Class Astro.StreamingPowerVampireConnectionComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerVampireConnectionComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerVampireConnectionComponentContainer");
		return ptr;
	}


	struct FStreamingPowerVampireConnectionComponent STATIC_GetStreamingPowerVampireConnectionComponent(const struct FAstroDatumRef& StreamingPowerVampireConnectionComponentRef, bool* bOutSuccess);
	struct FStreamingPowerVampireConnectionComponent STATIC_FindStreamingPowerVampireConnectionComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.Subslot
// 0x0020 (0x0048 - 0x0028)
class USubslot : public UObject
{
public:
	TArray<class USceneComponent*>                     slots;                                                    // 0x0028(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class USubslot*>                            SubSlots;                                                 // 0x0038(0x0010) (BlueprintVisible, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Subslot");
		return ptr;
	}


	class USubslot* STATIC_MakeSubslot(class UObject* WorldContextObject, TArray<class USceneComponent*> SlotComponents, TArray<class USubslot*> SubSubSlots);
};


// Class Astro.SuitTable
// 0x0010 (0x0040 - 0x0030)
class USuitTable : public UDataAsset
{
public:
	TArray<struct FSuitDefinition>                     Suits;                                                    // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SuitTable");
		return ptr;
	}

};


// Class Astro.Sun
// 0x0010 (0x0510 - 0x0500)
class ASun : public ASolarBody
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0500(0x0008) MISSED OFFSET
	class UDirectionalLightComponent*                  SunLight;                                                 // 0x0508(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.Sun");
		return ptr;
	}

};


// Class Astro.SurfaceActors
// 0x00B0 (0x1710 - 0x1660)
class USurfaceActors : public UTerrainModifier
{
public:
	float                                              SurfaceHeight;                                            // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseTerrainHeight;                                         // 0x1664(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1665(0x0003) MISSED OFFSET
	float                                              DepthRatio;                                               // 0x1668(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              HeightRandomizeRange;                                     // 0x166C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Density;                                                  // 0x1670(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                OverrideCount;                                            // 0x1674(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Actor;                                                    // 0x1678(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FActorSpecifier>                     ActorsList;                                               // 0x1680(0x0010) (Edit, ZeroConstructor)
	int                                                AdditionalListChoices;                                    // 0x1690(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x1694(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                OctreeResOffset;                                          // 0x1698(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ETerrainPlacementMode                              TerrainMode;                                              // 0x169C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x169D(0x0003) MISSED OFFSET
	struct FSpatialPartitionChannels                   Channels;                                                 // 0x16A0(0x0018) (Edit)
	float                                              BlockRadiusScale;                                         // 0x16B8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x16BC(0x0004) MISSED OFFSET
	TArray<class AActor*>                              m_actorArchetypes;                                        // 0x16C0(0x0010) (ZeroConstructor, Transient)
	unsigned char                                      UnknownData03[0x40];                                      // 0x16D0(0x0040) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SurfaceActors");
		return ptr;
	}

};


// Class Astro.SurfaceCraters
// 0x00F0 (0x1750 - 0x1660)
class USurfaceCraters : public UTerrainModifier
{
public:
	struct FTerrainOptionalMaterial                    CraterMaterial;                                           // 0x1660(0x0060) (Edit)
	struct FTerrainOptionalMaterial                    RimMaterial;                                              // 0x16C0(0x0060) (Edit)
	bool                                               UseSurfaceHeight;                                         // 0x1720(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1721(0x0003) MISSED OFFSET
	float                                              Density;                                                  // 0x1724(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CraterSize;                                               // 0x1728(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SizeVariation;                                            // 0x172C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Depth;                                                    // 0x1730(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DepthVariation;                                           // 0x1734(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CraterRim;                                                // 0x1738(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x173C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              RimIntensity;                                             // 0x1740(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x1744(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.SurfaceCraters");
		return ptr;
	}

};


// Class Astro.T2CanisterComponent
// 0x0068 (0x0158 - 0x00F0)
class UT2CanisterComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnStartTransfer;                                          // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSwitchItemsWhileTransferring;                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnStopTransfer;                                           // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FName>                               InputSlotNames;                                           // 0x0120(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ItemTransferRate;                                         // 0x0130(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TWeakObjectPtr<class UT2CanisterOrganizationRule>  OrganizationRule;                                         // 0x0134(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x013C(0x000C) MISSED OFFSET
	TArray<struct FSlotReference>                      InputSlotRefs;                                            // 0x0148(0x0010) (ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.T2CanisterComponent");
		return ptr;
	}


	void OnSlottedItemsChanged(class APhysicalItem* changedItem);
	void OnItemTypeChanged(class UItemComponent* ItemComponent, class UClass* NewItemType);
	void OnAmountChanged();
	bool CanMoveItems();
	void AuthoritySetIsDispensing(bool isDispensing);
};


// Class Astro.T2CanisterOrganizationRule
// 0x0020 (0x0090 - 0x0070)
class UT2CanisterOrganizationRule : public USlotOrganizationRule
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0070(0x0020) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.T2CanisterOrganizationRule");
		return ptr;
	}


	void SetStoredItemTypeWhitelist(TArray<class UClass*> ItemTypes);
	void SetMode(bool isDispensing);
	void SetCurrentStoredItemType(class UClass* ItemType);
	void OnSlottedItemDrainedOrFilled();
};


// Class Astro.TappableObjectComponent
// 0x0030 (0x0120 - 0x00F0)
class UTappableObjectComponent : public UActorComponent
{
public:
	class UClass*                                      ResourceItemType;                                         // 0x00F0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ResourceProductionRate;                                   // 0x00F8(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnTappingEfficiencyChanged;                               // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	TArray<struct FSlotReference>                      TapperSlots;                                              // 0x0110(0x0010) (ZeroConstructor, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TappableObjectComponent");
		return ptr;
	}


	void UnregisterTapperSlot(const struct FSlotReference& tapperSlot);
	void RegisterTapperSlot(const struct FSlotReference& tapperSlot);
	float GetCurrentTappingEfficiency();
};


// Class Astro.TeleportationBubble
// 0x00C8 (0x0470 - 0x03A8)
class ATeleportationBubble : public AActor
{
public:
	struct FScriptMulticastDelegate                    OnTeleportationStateChanged;                              // 0x03A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	class UActorAttachmentsComponent*                  ActorAttachComponent;                                     // 0x03B8(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        BubbleMesh;                                               // 0x03C0(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UStaticMeshComponent*                        ProxyBubbleMesh;                                          // 0x03C8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              BubbleExpansionTime;                                      // 0x03D0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x03D4(0x0004) MISSED OFFSET
	class UCurveFloat*                                 BubbleExpansionCurve;                                     // 0x03D8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class AAstroCharacter*                             CharacterBeingTeleported;                                 // 0x03E0(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	ETeleportationDestinationType                      DestinationType;                                          // 0x03E8(0x0001) (ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x03E9(0x0007) MISSED OFFSET
	struct FTransform                                  DestinationTransform;                                     // 0x03F0(0x0030) (Transient, SaveGame, IsPlainOldData)
	struct FGateObjectReference                        DestinationGateObjectRef;                                 // 0x0420(0x0010) (Transient, SaveGame)
	ETeleportationBubbleState                          TeleportationState;                                       // 0x0430(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0431(0x0003) MISSED OFFSET
	float                                              BubbleExpansionTimeRemaining;                             // 0x0434(0x0004) (ZeroConstructor, Transient, SaveGame, IsPlainOldData)
	struct FVector                                     PersistentTerrainObservationLocation;                     // 0x0438(0x000C) (Transient, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0444(0x0004) MISSED OFFSET
	struct FTeleportationBubbleReplicationData         ReplicationData;                                          // 0x0448(0x0018) (Net, Transient)
	unsigned char                                      UnknownData04[0x10];                                      // 0x0460(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TeleportationBubble");
		return ptr;
	}


	bool TickPostArrivalEffects();
	bool TickExpansionEffects();
	bool TickArrivalExpansionEffects();
	bool TickAbortionEffects();
	void TeleportCharacterToPosition(class AAstroCharacter* characterToTeleport, const struct FVector& TargetLocation);
	void TeleportCharacterToGateObject(class AAstroCharacter* characterToTeleport, const struct FGateObjectReference& GateObjectRef);
	void OnRep_ReplicationData();
	void OnCharacterCompletedBubbleExit(class AActor* characterActor);
	void OnCharacterCompletedBubbleEntry(class AActor* characterActor);
	void InitializePostArrivalEffects();
	void InitializeExpansionEffects();
	void InitializeArrivalExpansionEffects();
	void InitializeAbortEffects();
};


// Class Astro.TerrainAnalyzerComponent
// 0x00A0 (0x0190 - 0x00F0)
class UTerrainAnalyzerComponent : public UActorComponent
{
public:
	bool                                               AnalyzedTerrainRetainsHardness;                           // 0x00F0(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x00F1(0x0003) MISSED OFFSET
	float                                              BaseFillRate;                                             // 0x00F4(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAnalysisHasStarted : 1;                                  // 0x00F8(0x0001) (BlueprintVisible, BlueprintReadOnly, SaveGame)
	unsigned char                                      bAnalysisIsComplete : 1;                                  // 0x00F8(0x0001) (BlueprintVisible, BlueprintReadOnly, Net, SaveGame)
	unsigned char                                      bAnalysisInProgress : 1;                                  // 0x00F8(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x7F];                                      // 0x00F9(0x007F) MISSED OFFSET
	struct FTerrainProperties                          AnalyzedTerrainMaterialSample;                            // 0x0178(0x0018) (Net, SaveGame)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainAnalyzerComponent");
		return ptr;
	}


	void TryGetTerrainFromColor(bool completeIfSuccessful);
	void SetAnalysisInProgress(bool InProgress);
	void SampledTerrainChanged();
	void OnReplicated_AnalyzedTerrainMaterialSample();
	void OnReplicated_AnalysisIsComplete();
	void OnAugmentUnequipped();
	void OnAugmentEquipped();
	TEnumAsByte<EPhysicalSurface> GetAnalyzedMaterialSurfaceType();
	struct FLinearColor GetAnalyzedMaterialColor();
	void EndDeform();
	void BeginDeform();
	void AttemptAnalysis(float DeltaTime);
};


// Class Astro.TerrainBiomeProperties
// 0x0050 (0x16B0 - 0x1660)
class UTerrainBiomeProperties : public UTerrainModifierBase
{
public:
	struct FString                                     AmbientSoundEvent;                                        // 0x1660(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     UndergroundSoundEvent;                                    // 0x1670(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UClass*>                              ColorPalettes;                                            // 0x1680(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	int                                                ColorPaletteIndex;                                        // 0x1690(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x1694(0x0004) MISSED OFFSET
	class UTerrainColorPalette*                        PaletteInstance;                                          // 0x1698(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AmbientWind;                                              // 0x16A0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x16A4(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainBiomeProperties");
		return ptr;
	}

};


// Class Astro.TerrainBrush
// 0x01C8 (0x0570 - 0x03A8)
class ATerrainBrush : public AActor
{
public:
	EDeformType                                        ActiveOperation;                                          // 0x03A8(0x0001) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x03A9(0x0003) MISSED OFFSET
	int                                                LastTerrainHardness;                                      // 0x03AC(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrushIndicatorScale;                                      // 0x03B0(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              BrushIndicatorIntensity;                                  // 0x03B4(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BrushIndicatorUsing;                                      // 0x03B8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bBrushIndicatorCanUse : 1;                                // 0x03BC(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0x3];                                       // 0x03BD(0x0003) MISSED OFFSET
	class UDeformTargetComponent*                      TargetComponent;                                          // 0x03C0(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     BrushLocation;                                            // 0x03C8(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     BrushNormal;                                              // 0x03D4(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FTransform                                  TargetTransform;                                          // 0x03E0(0x0030) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	int                                                PlayerAccentIndex;                                        // 0x0410(0x0004) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              GaugePercent;                                             // 0x0414(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              GaugeCapacity;                                            // 0x0418(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              LowSedimentThreshold;                                     // 0x041C(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FComponentReference                         DeformEffectReference;                                    // 0x0420(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         AddBrushReference;                                        // 0x0438(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         SubtractBrushReference;                                   // 0x0450(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         FlatBrushReference;                                       // 0x0468(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         ColorPaintBrushReference;                                 // 0x0480(0x0018) (Edit, DisableEditOnInstance)
	struct FComponentReference                         ColorPickerBrushReference;                                // 0x0498(0x0018) (Edit, DisableEditOnInstance)
	class UParticleSystemComponent*                    DeformEffectComponent;                                    // 0x04B0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UMaterialInstanceDynamic*                    BrushDiscMaterial;                                        // 0x04B8(0x0008) (BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  HardnessTextureLevel0;                                    // 0x04C0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  HardnessTextureLevel1;                                    // 0x04C8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  HardnessTextureLevel2;                                    // 0x04D0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  HardnessTextureLevel3;                                    // 0x04D8(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  FlattenGridTexture;                                       // 0x04E0(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               IsLocalBrush;                                             // 0x04E8(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x04E9(0x0007) MISSED OFFSET
	TArray<class UClass*>                              LowPriorityResourceTooltipTypes;                          // 0x04F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              ResourceNodeTooltipBadgeAutoCollapseDelay;                // 0x0500(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ResourceNodeTooltipDetailsAutoExpandDelay;                // 0x0504(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CursorDetailsExpansionMovementTolerance;                  // 0x0508(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ThrottledNativeTickInterval;                              // 0x050C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTooltipComponent*                           ResourceNodeTooltipComponent;                             // 0x0510(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UClass*                                      CurrentItemTypeForResourceTooltip;                        // 0x0518(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	class USceneComponent*                             AddBrushComponent;                                        // 0x0520(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             SubtractBrushComponent;                                   // 0x0528(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             FlatBrushComponent;                                       // 0x0530(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ColorPickerBrushComponent;                                // 0x0538(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ColorPaintBrushComponent;                                 // 0x0540(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData03[0x28];                                      // 0x0548(0x0028) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainBrush");
		return ptr;
	}


	void ShowBrushElements(EDeformType DeformType, bool showElement);
	void SetResourceTooltipSuppression(bool SuppressResourceTooltip);
	void OnDeactivate();
	void OnBrushColorChanged(const struct FTerrainMaterial& TerrainMaterial);
	void OnActivate();
	void ManageTerrainHardnessTexture();
	class UTooltipComponent* GetResourceNodeTooltip();
	void ChangeBrushOperation(EDeformType NewType);
};


// Class Astro.TerrainColorPalette
// 0x0010 (0x0038 - 0x0028)
class UTerrainColorPalette : public UObject
{
public:
	struct FTerrainColorPaletteEntries                 Palette;                                                  // 0x0028(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainColorPalette");
		return ptr;
	}

};


// Class Astro.TerrainDestroyComponent
// 0x0020 (0x0110 - 0x00F0)
class UTerrainDestroyComponent : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x00F0(0x0008) MISSED OFFSET
	class UPrimitiveComponent*                         RootPrimitiveComponent;                                   // 0x00F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDeform;                                                 // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainDestroyComponent");
		return ptr;
	}

};


// Class Astro.TerrainInterface
// 0x0300 (0x0328 - 0x0028)
class UTerrainInterface : public UObject
{
public:
	unsigned char                                      UnknownData00[0xC0];                                      // 0x0028(0x00C0) MISSED OFFSET
	struct FActorTemplateCache                         ActorTemplateCache;                                       // 0x00E8(0x00A8) (Transient)
	unsigned char                                      UnknownData01[0x198];                                     // 0x0190(0x0198) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainInterface");
		return ptr;
	}

};


// Class Astro.TerrainModifierMinerals
// 0x0030 (0x1690 - 0x1660)
class UTerrainModifierMinerals : public UTerrainModifier
{
public:
	float                                              VeinDensity;                                              // 0x1660(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MineralSeparation;                                        // 0x1664(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MineralsInVein;                                           // 0x1668(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x166C(0x0004) MISSED OFFSET
	TArray<struct FActorSeeding>                       Seedings;                                                 // 0x1670(0x0010) (Edit, ZeroConstructor)
	TArray<struct FActorSeeding>                       SurfaceTypes;                                             // 0x1680(0x0010) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierMinerals");
		return ptr;
	}

};


// Class Astro.TerrainModifierPerlin3D
// 0x0070 (0x16D0 - 0x1660)
class UTerrainModifierPerlin3D : public UTerrainModifier
{
public:
	unsigned char                                      UnknownData00[0x70];                                      // 0x1660(0x0070) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierPerlin3D");
		return ptr;
	}

};


// Class Astro.TerrainModifierPlatform
// 0x0070 (0x16D0 - 0x1660)
class UTerrainModifierPlatform : public UTerrainModifierLocal
{
public:
	struct FTerrainOptionalMaterial                    Material;                                                 // 0x1660(0x0060) (Edit, BlueprintVisible)
	float                                              Radius;                                                   // 0x16C0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x16C4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x16C8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierPlatform");
		return ptr;
	}

};


// Class Astro.TerrainModifierSpherical
// 0x00D0 (0x1730 - 0x1660)
class UTerrainModifierSpherical : public UTerrainModifierLocal
{
public:
	struct FTerrainOptionalMaterial                    Material;                                                 // 0x1660(0x0060) (Edit, BlueprintVisible)
	struct FTerrainOptionalMaterial                    RimMaterial;                                              // 0x16C0(0x0060) (Edit, BlueprintVisible)
	float                                              Radius;                                                   // 0x1720(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Rim;                                                      // 0x1724(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              RimIntensity;                                             // 0x1728(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CraterIntensity;                                          // 0x172C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainModifierSpherical");
		return ptr;
	}

};


// Class Astro.TerrainPhysicsComponent
// 0x0058 (0x0188 - 0x0130)
class UTerrainPhysicsComponent : public UPhysicsComponent
{
public:
	unsigned char                                      UnknownData00[0x8];                                       // 0x0130(0x0008) MISSED OFFSET
	bool                                               AutoBlockCamera;                                          // 0x0138(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               CanUnbury;                                                // 0x0139(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x013A(0x0006) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnSetBuryPhysics;                                         // 0x0140(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnSetWorldPhysics;                                        // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnIsBuriedChanged;                                        // 0x0160(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               Buried;                                                   // 0x0170(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, Net, ZeroConstructor, EditConst, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
	struct FName                                       OverrideWorldPhysicsProfile;                              // 0x0178(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       OverrideBuryPhysicsProfile;                               // 0x0180(0x0008) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainPhysicsComponent");
		return ptr;
	}


	void SetWorldPhysics();
	void SetPickupPhysics();
	void SetIsBuried(bool NewIsBuried);
	void SetBuryPhysics();
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void OnRep_Buried();
	void OnDeformationComplete(const struct FDeformationParams& DeformationParams);
	bool IsTerrainBuried();
	bool GetIsBuried();
};


// Class Astro.TerrainPlacementActor
// 0x0000 (0x03A8 - 0x03A8)
class ATerrainPlacementActor : public AActor
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainPlacementActor");
		return ptr;
	}

};


// Class Astro.TerrainPlatformComponent
// 0x00A0 (0x0350 - 0x02B0)
class UTerrainPlatformComponent : public USceneComponent
{
public:
	bool                                               RemoveTopHemisphere;                                      // 0x02B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x02B1(0x0003) MISSED OFFSET
	float                                              Radius;                                                   // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SoftEdgeStartRadius;                                      // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtendedMaterialOverrideRadius;                           // 0x02BC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x02C0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x02C4(0x0004) MISSED OFFSET
	struct FTerrainOptionalMaterial                    Material;                                                 // 0x02C8(0x0060) (Edit)
	bool                                               Enabled;                                                  // 0x0328(0x0001) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0329(0x0003) MISSED OFFSET
	struct FVector                                     PlatformCenter;                                           // 0x032C(0x000C) (IsPlainOldData)
	class AAstroPlanet*                                m_planet;                                                 // 0x0338(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x10];                                      // 0x0340(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainPlatformComponent");
		return ptr;
	}


	void OwnerDestroyed(class AActor* DestroyedActor);
};


// Class Astro.TerrainPrimitiveComponent
// 0x0000 (0x06F0 - 0x06F0)
class UTerrainPrimitiveComponent : public USphereComponent
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainPrimitiveComponent");
		return ptr;
	}

};


// Class Astro.TerrainProceduralMeshComponent
// 0x0040 (0x0730 - 0x06F0)
class UTerrainProceduralMeshComponent : public UMeshComponent
{
public:
	class UBodySetup*                                  ProcMeshBodySetup;                                        // 0x06F0(0x0008) (ZeroConstructor, Transient, DuplicateTransient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x06F8(0x0010) MISSED OFFSET
	struct FBoxSphereBounds                            LocalBounds;                                              // 0x0708(0x001C) (IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0724(0x000C) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainProceduralMeshComponent");
		return ptr;
	}

};


// Class Astro.TerrainShapeComponent
// 0x0040 (0x02F0 - 0x02B0)
class UTerrainShapeComponent : public USceneComponent
{
public:
	float                                              Radius;                                                   // 0x02B0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Height;                                                   // 0x02B4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              Intensity;                                                // 0x02B8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x02BC(0x0004) MISSED OFFSET
	class UClass*                                      AddType;                                                  // 0x02C0(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               Enabled;                                                  // 0x02C8(0x0001) (Edit, BlueprintVisible, Net, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x02C9(0x0007) MISSED OFFSET
	class AAstroPlanet*                                m_planet;                                                 // 0x02D0(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x02D8(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TerrainShapeComponent");
		return ptr;
	}


	void OwnerDestroyed(class AActor* DestroyedActor);
};


// Class Astro.TestColorCycleComponent
// 0x0030 (0x0120 - 0x00F0)
class UTestColorCycleComponent : public UActorComponent
{
public:
	struct FLinearColor                                ColorChangePerSecond;                                     // 0x00F0(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MinColor;                                                 // 0x0100(0x0010) (Edit, IsPlainOldData)
	struct FLinearColor                                MaxColor;                                                 // 0x0110(0x0010) (Edit, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TestColorCycleComponent");
		return ptr;
	}

};


// Class Astro.TestEntityColorCycleContainer
// 0x0030 (0x0070 - 0x0040)
class UTestEntityColorCycleContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TestEntityColorCycleContainer");
		return ptr;
	}


	struct FTestEntityColorCycleComponent STATIC_GetTestEntityColorCycleComponent(const struct FAstroDatumRef& ColorCycleComponentRef, bool* bOutSuccess);
};


// Class Astro.TestEntityColorCycleSystem
// 0x0000 (0x0030 - 0x0030)
class UTestEntityColorCycleSystem : public UAstroEntitySystem
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TestEntityColorCycleSystem");
		return ptr;
	}

};


// Class Astro.TetherAttachComponent
// 0x0118 (0x0208 - 0x00F0)
class UTetherAttachComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    OnUpdateTetherAttachPowerFlow;                            // 0x00F0(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnOxygenChange;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDirectOrConnectedOxygenChange;                          // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	bool                                               CanAttach;                                                // 0x0120(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               AttachToConnections;                                      // 0x0121(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HaveConnectedOxygen;                                      // 0x0122(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HaveDirectOrConnectedOxygen;                              // 0x0123(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0124(0x0004) MISSED OFFSET
	struct FSlotReference                              Slot;                                                     // 0x0128(0x0010) (BlueprintVisible)
	TArray<struct FLinearAttachPoint>                  LinearAttachPoints;                                       // 0x0138(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<struct FCircularAttachPoint>                CircularAttachPoints;                                     // 0x0148(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	TArray<class USceneComponent*>                     SingularAttachPoints;                                     // 0x0158(0x0010) (Edit, BlueprintVisible, ExportObject, ZeroConstructor)
	float                                              TetherAttachDistance;                                     // 0x0168(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x016C(0x0004) MISSED OFFSET
	class UTetherNetwork*                              Network;                                                  // 0x0170(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class UTetherAttachComponent*>              ConnectedTetherPosts;                                     // 0x0178(0x0010) (ExportObject, ZeroConstructor, Transient, SaveGame)
	TArray<struct FVampireAttachmentEntry>             VampireAttachments;                                       // 0x0188(0x0010) (ZeroConstructor, SaveGame)
	TArray<class UOxygenatorComponent*>                LinkedOxygenators;                                        // 0x0198(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UOxygenatorComponent*                        BuiltInOxygenator;                                        // 0x01A8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	TMap<class UTetherAttachComponent*, struct FExplicitOxygenConnections> ExplicitOxygenConnections;                                // 0x01B0(0x0050) (ZeroConstructor, SaveGame)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0200(0x0004) MISSED OFFSET
	ETetherAttachmentType                              TetherAttachmentType;                                     // 0x0204(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bConnectToCharactersOnlyWithoutExternalOxygenator;        // 0x0205(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0206(0x0002) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherAttachComponent");
		return ptr;
	}


	void UpdateTetherAttachPowerFlow__DelegateSignature(float PowerFlow);
	void UpdateExplicitNetwork();
	void TeardownLinkToOxygenator(class UOxygenatorComponent* oxygenator);
	void SetCanAttach(bool NewCanAttach, bool forceUpdate, bool fromSave);
	void OnOwnerMotionStateChanged();
	void OnOwnerDestroy(class AActor* Actor);
	void OnBuiltInOxygenatorOxygenChanged(class UOxygenatorComponent* oxygenator);
	void OnBuiltInOxygenatorDestroyed(class UOxygenatorComponent* oxygenator);
	ETetherAttachmentType GetTetherAttachmentType();
	float GetPowerFlowOnVampireConnections();
	struct FVector GetAttachPoint(const struct FSlotReference& SlotRef, const struct FVector& InLocation, bool allowConnections);
	class UTetherAttachComponent* STATIC_GetActorTetherAttachComponent(class AActor* Actor);
	class UTetherAttachComponent* STATIC_GetActorHierarchyTetherAttachComponent(class AActor* Actor);
};


// Class Astro.TetherDecorationConfig
// 0x0010 (0x0040 - 0x0030)
class UTetherDecorationConfig : public UDataAsset
{
public:
	TArray<struct FTetherDecoration>                   DecorationOptions;                                        // 0x0030(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherDecorationConfig");
		return ptr;
	}


	int STATIC_GetNextTetherDecorationIndex();
};


// Class Astro.TetherManager
// 0x3188 (0x3530 - 0x03A8)
class ATetherManager : public AActor
{
public:
	struct FTetherReplicatedState                      repState;                                                 // 0x03A8(0x3110) (Net, Transient)
	TMap<class USceneComponent*, struct FTetherEdgeArray> SceneComponentToEdges;                                    // 0x34B8(0x0050) (ZeroConstructor, Transient)
	TArray<class UTetherPostComponent*>                TetherPostComponents;                                     // 0x3508(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UTetherPostComponent*>                PlacingTetherPostComponents;                              // 0x3518(0x0010) (ExportObject, ZeroConstructor, Transient)
	int                                                TetherPostUpdateIndex;                                    // 0x3528(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x352C(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherManager");
		return ptr;
	}

};


// Class Astro.TetherNetwork
// 0x00F0 (0x0118 - 0x0028)
class UTetherNetwork : public UObject
{
public:
	bool                                               HasOxygen;                                                // 0x0028(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               HaveConnectedOxygen;                                      // 0x0029(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<class UTetherAttachComponent*>              AttachNodes;                                              // 0x0030(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<class UTetherNetwork*>                      ConnectedOxygenProviderNetworks;                          // 0x0040(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<class UTetherNetwork*>                      ConnectedTetherPostNetworks;                              // 0x0050(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	unsigned char                                      UnknownData01[0x8];                                       // 0x0060(0x0008) MISSED OFFSET
	TArray<class UOxygenatorComponent*>                Oxygenators;                                              // 0x0068(0x0010) (ExportObject, ZeroConstructor, Transient)
	unsigned char                                      UnknownData02[0xA0];                                      // 0x0078(0x00A0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherNetwork");
		return ptr;
	}


	void RemoveOxygenator(class UOxygenatorComponent* oxygenator);
	void STATIC_OnTetherConnectionDestroyed(class ASlotConnection* Connection);
	void OnOxygenatorSupplyingOxygenChanged(class UOxygenatorComponent* oxygenator);
	bool IsSupplyingOxygenToConsumers();
};


// Class Astro.TetherPostComponent
// 0x0030 (0x0120 - 0x00F0)
class UTetherPostComponent : public UActorComponent
{
public:
	bool                                               Placing;                                                  // 0x00F0(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	bool                                               Placed;                                                   // 0x00F1(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x00F2(0x0006) MISSED OFFSET
	class UTetherAttachComponent*                      IndicatorAttach;                                          // 0x00F8(0x0008) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0100(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTetherAttachComponent*                      AttachComponent;                                          // 0x0108(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UInstancedStaticMeshComponent*               IndicatorInstancedMesh;                                   // 0x0110(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDistanceLightFaderComponent*                LightFader;                                               // 0x0118(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherPostComponent");
		return ptr;
	}


	void SetPlacing(bool newPlacing);
	void OnOwnerPlacedInSlot();
	void BreakTethers();
	void AttachTethers(bool fromSave);
};


// Class Astro.TetherSystemProperties
// 0x0038 (0x0068 - 0x0030)
class UTetherSystemProperties : public UDataAsset
{
public:
	class UStaticMesh*                                 SegmentMesh;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          DefaultMaterial;                                          // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          IndicatorMaterial;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          NoOxygenMaterial;                                         // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BreakDistance;                                            // 0x0050(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SegmentLength;                                            // 0x0054(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SegmentScale;                                             // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GravityTension;                                           // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              CurveTension;                                             // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AdjustDistance;                                           // 0x0064(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TetherSystemProperties");
		return ptr;
	}

};


// Class Astro.TierOrganizationRule
// 0x0008 (0x0078 - 0x0070)
class UTierOrganizationRule : public USlotOrganizationRule
{
public:
	unsigned char                                      RequestedItemTier;                                        // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TierOrganizationRule");
		return ptr;
	}

};


// Class Astro.TooltipComponent
// 0x01C0 (0x02B0 - 0x00F0)
class UTooltipComponent : public UActorComponent
{
public:
	struct FScriptMulticastDelegate                    InteractionActivated;                                     // 0x00F0(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    InputUnhandled;                                           // 0x0100(0x0010) (ZeroConstructor, InstancedReference)
	struct FScriptMulticastDelegate                    OnOverrideChanged;                                        // 0x0110(0x0010) (ZeroConstructor, InstancedReference)
	struct FVector2D                                   ScreenOffset;                                             // 0x0120(0x0008) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bIsActorDefaultTooltip : 1;                               // 0x0128(0x0001) (Edit, DisableEditOnInstance)
	ETooltipArchetype                                  TooltipArchetype;                                         // 0x0129(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	ETooltipVisibilityControl                          VisibilityControl;                                        // 0x012A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bRemainsVisibleWhenHeld : 1;                              // 0x012B(0x0001) (Edit)
	unsigned char                                      bSuppressOtherTooltipsWhenExpanded : 1;                   // 0x012B(0x0001) (Edit)
	unsigned char                                      bAlwaysShowLiteralItemType : 1;                           // 0x012B(0x0001) (Edit)
	unsigned char                                      bSuppressTooltipUse : 1;                                  // 0x012B(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FTooltipProximityBadgeVisibilityData        ProximityVisibilityData;                                  // 0x0130(0x0030) (Edit)
	struct FComponentReference                         AttachComponent;                                          // 0x0160(0x0018) (Edit)
	struct FComponentReference                         InputRespondingColliderComponent;                         // 0x0178(0x0018) (Edit)
	class USceneComponent*                             AnchorReferenceComponent;                                 // 0x0190(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<struct FTooltipWidgetOverride>              WidgetOverrideStack;                                      // 0x0198(0x0010) (Edit, ZeroConstructor)
	struct FTooltipWidgetDisplayData                   DefaultDisplayData;                                       // 0x01A8(0x0088) (Edit, BlueprintVisible, BlueprintReadOnly)
	bool                                               bCanDisplayWhenCracked;                                   // 0x0230(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	class UAstroTooltipWidget*                         ToolTipWidget;                                            // 0x0238(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class USphereComponent*                            PrimaryProximitySphereBadge;                              // 0x0240(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            SecondaryProximitySphereBadge;                            // 0x0248(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USphereComponent*                            ProximitySphereDetails;                                   // 0x0250(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPrimitiveComponent*                         InputRespondingCollider;                                  // 0x0258(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x40];                                      // 0x0260(0x0040) MISSED OFFSET
	class APawn*                                       LocalPawnDisplayingProximityTooltip;                      // 0x02A0(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData03[0x8];                                       // 0x02A8(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TooltipComponent");
		return ptr;
	}


	void UpdateWidgetOverrideDisplayData(const struct FName& overrideName, const struct FTooltipWidgetDisplayData& DisplayData);
	void UpdateWidgetOverrideDescriptionText(const struct FName& overrideName, const struct FText& newDescription);
	void UpdateCorrectedPivotLocation();
	void UpdateActiveHoldInput();
	void StopCurrentHoldAction(bool InputActionSucceeded);
	void SetupTooltipReferenceAnchor();
	void SetupTooltipForItemType(class UItemType* ItemType);
	void SetupTooltipForCurrentDisplaySettings();
	void SetTooltipTitle(const struct FText& NewTitle);
	void SetTooltipBadgeImage(class UObject* ResourceObjectBadge);
	void SetTooltipBadgeColor(const struct FLinearColor& NewBadgeColor);
	void SetInputRespondingCollider(class UPrimitiveComponent* NewInputRespondingCollider);
	void SetHasFocus(bool bInHasFocus);
	void SetDesiredTooltipState(ETooltipState NewState);
	void SetCustomTooltipReferenceAnchor(class USceneComponent* CustomReferenceAnchor);
	void PushTooltipWidgetOverride(const struct FName& overrideName, ETooltipVisibilityControl overrideVisibilityControl, bool bInApplyAnchorReferenceOverride, const struct FName& AnchorReferenceOverride, bool bInApplyScreenOffsetOverride, const struct FVector2D& ScreenOffsetOverride, bool bInRemainsVisibleWhenHeld, bool bInSuppressOtherTooltipsWhenExpanded, bool bInOverrideUseAndExaminePrompts, const struct FTooltipWidgetDisplayData& DisplayData, const struct FTooltipProximityBadgeVisibilityData& proximityData);
	void PopTooltipWidgetOverride(const struct FName& overrideName);
	void OnUseContextChanged(EUseContext UseContext);
	void OnTooltipWidgetStateChanged();
	void OnSecondaryProximitySphereEndOverlapBadge(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex);
	void OnSecondaryProximitySphereBeginOverlapBadge(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnProximitySphereEndOverlapDetails(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex);
	void OnProximitySphereBeginOverlapDetails(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnPrimaryProximitySphereEndOverlapBadge(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex);
	void OnPrimaryProximitySphereBeginOverlapBadge(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* otherComponent, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnOwningSlotCrackedStateChanged(class UCrackableActorComponent* CrackableActorComponent, bool IsCracked);
	void OnOwningItemReleasedFromSlot(bool NewOwner);
	void OnOwningItemPlacedInSlot();
	void OnOwnerUseAvailabilityChanged(bool bIsUsable);
	void OnOwnerItemTypeChanged();
	void OnNonResolutionMenuSettingsChanged();
	void OnInteractionActivated(const struct FName& ActionName);
	void OnInputUnhandled(TEnumAsByte<EInputEvent> InputType, const struct FName& ActionName);
	void OnActionInputReleased(const struct FName& ActionName);
	void OnActionInputPressed(const struct FName& ActionName);
	bool HasTooltipOverride(const struct FName& overrideName);
	ETooltipVisibilityControl GetVisibilityControl();
	ETooltipProximityState GetProximityState();
	bool GetHasFocus();
	ETooltipState GetDesiredState();
	class AActor* GetActorThisTooltipIsFor();
};


// Class Astro.TooltipManager
// 0x0098 (0x0188 - 0x00F0)
class UTooltipManager : public UActorComponent
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x00F0(0x0010) MISSED OFFSET
	TMap<class UPrimitiveComponent*, class UTooltipComponent*> InputRespondingTooltips;                                  // 0x0100(0x0050) (ExportObject, ZeroConstructor, Transient)
	TArray<class UTooltipComponent*>                   ActiveTooltips;                                           // 0x0150(0x0010) (ExportObject, ZeroConstructor, Transient)
	TArray<class UTooltipComponent*>                   LiveTooltips;                                             // 0x0160(0x0010) (ExportObject, ZeroConstructor, Transient)
	class UTooltipComponent*                           ExclusiveExpansionTooltip;                                // 0x0170(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTooltipComponent*                           CursorOverTooltip;                                        // 0x0178(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      AllTooltipsDisabled : 1;                                  // 0x0180(0x0001) (Transient)
	unsigned char                                      BelongsToLocalController : 1;                             // 0x0180(0x0001) (Transient)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0181(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TooltipManager");
		return ptr;
	}


	void OnTooltipPrimitiveEndCursorOver(class UPrimitiveComponent* TooltipPrimitive);
	void OnTooltipPrimitiveBeginCursorOver(class UPrimitiveComponent* TooltipPrimitive);
	void OnExclusiveExpansionTooltipOverrideChanged();
};


// Class Astro.TooltipStatics
// 0x0000 (0x0028 - 0x0028)
class UTooltipStatics : public UBlueprintFunctionLibrary
{
public:

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TooltipStatics");
		return ptr;
	}


	class UTooltipComponent* STATIC_GetDefaultTooltipComponentForActor(class AActor* TooltipOwner);
	struct FTooltipWidgetDisplayData STATIC_DuplicateTooltipDisplayDataAndAppendInteractionPrompts(const struct FTooltipWidgetDisplayData& DataToCopy, TArray<struct FInteractionPromptEntryData> InteractionPromptDataToAdd);
};


// Class Astro.TradeShipComponent
// 0x0058 (0x0148 - 0x00F0)
class UTradeShipComponent : public UActorComponent
{
public:
	TArray<struct FSlotReference>                      ResourceSlotRefs;                                         // 0x00F0(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient)
	class APlayController*                             LaunchingPlayController;                                  // 0x0100(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	TArray<struct FName>                               ResourceSlots;                                            // 0x0108(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FIndicatorsForTradeShipSlot>         IndicatorsForResourceSlots;                               // 0x0118(0x0010) (ZeroConstructor, Transient)
	class UOrbitalNavigationComponent*                 OrbitalNav;                                               // 0x0128(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UTradeShipDockComponent*                     ParentDockComponent;                                      // 0x0130(0x0008) (ExportObject, Net, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	struct FTimerHandle                                LaunchDelayTimer;                                         // 0x0138(0x0008) (Transient)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0140(0x0008) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TradeShipComponent");
		return ptr;
	}


	void UpdateIndicators();
	void ShipLaunchEnded();
	void ShipLaunched();
	void SetupIndicatorList();
	void OnRep_ParentDockComponent();
	void ItemSetOrReleasedFromResourceSlot(class APhysicalItem* Item);
	bool IsDocked();
	void HandleQueryClickable(class UClickQuery* Query);
	void AuthoritySnapToOrbitAndLand();
	void AuthoritySetParentDock(class UTradeShipDockComponent* dock);
	void AuthorityReturnLaunchedShip();
	void AuthorityLaunchShip(class APlayController* LaunchingPlayController);
};


// Class Astro.TradeShipDatabase
// 0x0050 (0x0080 - 0x0030)
class UTradeShipDatabase : public UDataAsset
{
public:
	unsigned char                                      UnknownData00[0x50];                                      // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty Astro.TradeShipDatabase.TradeShips

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TradeShipDatabase");
		return ptr;
	}

};


// Class Astro.TradeShipDockComponent
// 0x0068 (0x0158 - 0x00F0)
class UTradeShipDockComponent : public UActorComponent
{
public:
	TArray<class UClass*>                              IndicatorItemTypes;                                       // 0x00F0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0100(0x0010) MISSED OFFSET
	float                                              LaunchDelay;                                              // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnShipLaunchedToOrbit;                                    // 0x0118(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShipLaunchedToDock;                                     // 0x0128(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnShipArrivedAtDock;                                      // 0x0138(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnInventoryChanged;                                       // 0x0148(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TradeShipDockComponent");
		return ptr;
	}


	void MulticastShipLaunchedToOrbit(float LaunchLength);
	void MulticastShipLaunchedToDock(float LaunchLength);
	void MulticastShipArrivedAtDock();
	bool AcceptsItem(class APhysicalItem* Item);
};


// Class Astro.TradeShipDockComponent_ItemDrive
// 0x0008 (0x0160 - 0x0158)
class UTradeShipDockComponent_ItemDrive : public UTradeShipDockComponent
{
public:
	class UItemDriveComponent*                         ItemDriveComponent;                                       // 0x0158(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TradeShipDockComponent_ItemDrive");
		return ptr;
	}


	void HandleActiveEventChanged();
};


// Class Astro.TradeShipDockComponent_Whitelist
// 0x0010 (0x0168 - 0x0158)
class UTradeShipDockComponent_Whitelist : public UTradeShipDockComponent
{
public:
	TArray<class UClass*>                              ItemTypeWhitelist;                                        // 0x0158(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.TradeShipDockComponent_Whitelist");
		return ptr;
	}

};


// Class Astro.UISettings
// 0x0100 (0x0138 - 0x0038)
class UUISettings : public UDeveloperSettings
{
public:
	class UClass*                                      EarlyAccessWatermark;                                     // 0x0038(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               DisplayEarlyAccessWatermark;                              // 0x0040(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	class UClass*                                      ExperimentalWatermark;                                    // 0x0048(0x0008) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	bool                                               DisplayExperimentalWatermark;                             // 0x0050(0x0001) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	class UClass*                                      LoadingScreenWidget;                                      // 0x0058(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      WaitForPlayerInputWidget;                                 // 0x0060(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      ConfirmChangeProfilesWidget;                              // 0x0068(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      ReconnectControllerWidget;                                // 0x0070(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      PlayTogetherPromptWidget;                                 // 0x0078(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      ErrorWidgetClass;                                         // 0x0080(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      SessionOperationInProgressWidgetClass;                    // 0x0088(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	class UClass*                                      WidgetClass;                                              // 0x0090(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              CursorSize;                                               // 0x0098(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DeadZone;                                                 // 0x009C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x00A0(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MaxSpeedWhenHovered;                                      // 0x00A4(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              MinSpeed;                                                 // 0x00A8(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              AccelerationMultiplier;                                   // 0x00AC(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	struct FRuntimeFloatCurve                          MovementCurve;                                            // 0x00B0(0x0078) (Edit, Config)
	bool                                               bHasIntertia;                                             // 0x0128(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0129(0x0003) MISSED OFFSET
	float                                              DragCoefficient;                                          // 0x012C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              DragCoefficientWhenHovered;                               // 0x0130(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0134(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UISettings");
		return ptr;
	}


	class UUISettings* STATIC_GetAstroUISettings();
};


// Class Astro.UprightToPlanetModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UUprightToPlanetModifierComponent : public UCameraModifierComponent
{
public:
	unsigned char                                      bUseTargetLocation : 1;                                   // 0x0128(0x0001) (Edit)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0129(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UprightToPlanetModifierComponent");
		return ptr;
	}

};


// Class Astro.UseToDiscoverItem
// 0x0010 (0x0670 - 0x0660)
class AUseToDiscoverItem : public APhysicalItem
{
public:
	class UClass*                                      ItemTypeDiscoveredOnUse;                                  // 0x0660(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USingleUseConsumableComponent*               ConsumableComponent;                                      // 0x0668(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UseToDiscoverItem");
		return ptr;
	}


	void OnUsed();
};


// Class Astro.UseTriggerComponent
// 0x0048 (0x0138 - 0x00F0)
class UUseTriggerComponent : public UActorComponent
{
public:
	unsigned char                                      bTriggeredByPlayers : 1;                                  // 0x00F0(0x0001) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	class UClass*                                      TriggerItems;                                             // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FComponentReference>                 TriggerVolumes;                                           // 0x0100(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              CooldownTime;                                             // 0x0110(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	class UItemList*                                   TriggerItemList;                                          // 0x0118(0x0008) (ZeroConstructor, IsPlainOldData)
	class AAstroPlayerController*                      CurrentInstigator;                                        // 0x0120(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0128(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.UseTriggerComponent");
		return ptr;
	}


	void OnTriggerVolumeOverlapped(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void OnCooldownCompleted();
};


// Class Astro.VehicleDrill
// 0x01E0 (0x0840 - 0x0660)
class AVehicleDrill : public APhysicalItem
{
public:
	float                                              SedimentDeformationRatio;                                 // 0x0660(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                NeutralTerrainColor;                                      // 0x0664(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              NeutralDotProdBetweenCameraAndRoverUp;                    // 0x0674(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVehicleDrillReplicationData                VehicleDrillReplicatedState;                              // 0x0678(0x0003) (Net)
	unsigned char                                      UnknownData00[0x5];                                       // 0x067B(0x0005) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnToolActiveChanged;                                      // 0x0680(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDrillCollectedExcessTerrainChanged;                     // 0x0690(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnDummyDrillReleasedFromSlot;                             // 0x06A0(0x0010) (ZeroConstructor, InstancedReference)
	TArray<class AVehicleDrill*>                       DummyLinkedDrills;                                        // 0x06B0(0x0010) (Net, ZeroConstructor)
	float                                              DeformationTier;                                          // 0x06C0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FoliageDestructionMassThreshold;                          // 0x06C4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     FoliageDestructionOriginOffset;                           // 0x06C8(0x000C) (Edit, BlueprintVisible, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              DestructionRadiusScaleFromDeformSize;                     // 0x06D4(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVehicleDrillOperationConstants             TunnelBoringDeformationConstants;                         // 0x06D8(0x001C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVehicleDrillOperationConstants             ExcavationDeformationConstants;                           // 0x06F4(0x001C) (Edit, DisableEditOnInstance, IsPlainOldData)
	int                                                ExcessTerrainCollectedThresholdForBurnoffEffect;          // 0x0710(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0714(0x0004) MISSED OFFSET
	class UCurveFloat*                                 CameraPitchToDrillPitchMapping;                           // 0x0718(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveFloat*                                 SteeringAngleToDrillRollMapping;                          // 0x0720(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaximumRollAdjustment;                                    // 0x0728(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x072C(0x0004) MISSED OFFSET
	class UCurveFloat*                                 SteeringAngleToDrillYawMapping;                           // 0x0730(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BirdsEyeDotVal;                                           // 0x0738(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WormsEyeDotVal;                                           // 0x073C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSlope;                                                 // 0x0740(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0744(0x0004) MISSED OFFSET
	class UControlComponent*                           ControlComponent;                                         // 0x0748(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UDeformEventReceiver*                        DeformEventReceiver;                                      // 0x0750(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0758(0x0008) (Edit, BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             DeformVisualizer;                                         // 0x0760(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             FoliageDestructionVisualizer;                             // 0x0768(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             ExcavationDeformationOriginMarker;                        // 0x0770(0x0008) (Edit, ExportObject, ZeroConstructor, EditConst, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TunnelBoringUI_Wrapper;                                   // 0x0778(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             PivotingUI_Wrapper;                                       // 0x0780(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UParticleSystemComponent*                    TerrainDeformationParticles;                              // 0x0788(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TiltIndicatorWrapper;                                     // 0x0790(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TiltUpIndicatorWrapper;                                   // 0x0798(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class USceneComponent*                             TiltDownIndicatorWrapper;                                 // 0x07A0(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnDrillMotorAudioChanged;                                 // 0x07A8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnTerrainBeingDrilledAudioChanged;                        // 0x07B8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnSampledTerrainMaterialChanged;                          // 0x07C8(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              MaxTravelOfTiltIndicator;                                 // 0x07D8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x07DC(0x0004) MISSED OFFSET
	class ARoverBase*                                  TunnelBoringRover;                                        // 0x07E0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UClass*                                      CraneSubclass;                                            // 0x07E8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2C];                                      // 0x07F0(0x002C) MISSED OFFSET
	struct FVehicleDrillSedimentReplicationData        VehicleDrillReplicatedSedimentState;                      // 0x081C(0x0008) (Net)
	unsigned char                                      UnknownData06[0x8];                                       // 0x0824(0x0008) MISSED OFFSET
	int                                                ConsumedSedimentDebt;                                     // 0x082C(0x0004) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData07[0x10];                                      // 0x0830(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VehicleDrill");
		return ptr;
	}


	void UpdateTerrainDeformationParticles(bool SystemEnabled, int HardnessDelta);
	void UpdateSlopeIndicator(float SlopeDegree);
	void UpdateSedimentGauge(float CurrentSedimentAvailalbe, float CurrentSedimentCapacity);
	void UpdatePlayerAccentIndex(int PlayerAccentIndex);
	void UpdateDeformationNormal(const struct FVector& DeformationNormal);
	void ToggleDrillUsageForTunnelBoring();
	void ServerUpdateToolState(bool ToolIsActive, EVehicleDrillToolMode DrillMode);
	void ServerRequestNewMaterialWithTerrainProperties(class AAstroPlanet* Planet, const struct FTerrainProperties& TerrainProperties, class UMaterialInterface* CustomMaterial, int creativeModePaintMaterialIndex);
	void ResetExcessTerrainCollectionFlag();
	void PlayDrillStartWithInsufficientSoilEffect();
	void PlayDrillStartWithInsufficientPowerEffect();
	void OnRep_VehicleDrillSedimentReplicationData();
	void OnRep_VehicleDrillReplicationData();
	void MulticastPlayDrillStartWithInsufficientSoilEffect();
	void MulticastPlayDrillStartWithInsufficientPowerEffect();
	bool IsToolActive();
	void HandleVehicleUnmanned(class AAstroPlayerController* VehicleDriver);
	void HandleVehicleManned(class AAstroPlayerController* VehicleDriver);
	void HandleTunnelBoringDrillBecameActiveOnMyRover(class AVehicleDrill* DrillThatBecameActive);
	void HandleTerraianDeformationDensityDeltaReceived(float DensityDelta);
	void HandleRemovedFromSlot(bool NewOwner);
	void HandlePlacedInSlot();
	void HandleDummyDrillRemovedFromSlot(class AVehicleDrill* DummyDrillRemoved);
	void HandleDestroyedWhileInSlot(class APhysicalItem* DestroyedActor);
	void HandleDeactivatedAsExcavator();
	void HandleActivatedAsExcavator();
	class UParticleSystem* GetSubtractParticleEffect(int HardnessDelta);
	bool DidCollectExcessTerrain();
};


// Class Astro.VehicleSlotComponent
// 0x0058 (0x0148 - 0x00F0)
class UVehicleSlotComponent : public UActorComponent
{
public:
	TArray<struct FSlotReference>                      PrinterSlots;                                             // 0x00F0(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FSlotReference>                      TrailerSlots;                                             // 0x0100(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<struct FSlotReference>                      SlotAutoConnections;                                      // 0x0110(0x0010) (BlueprintVisible, ZeroConstructor)
	TArray<class UClass*>                              VehicleParts;                                             // 0x0120(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              AutoSlotDistance;                                         // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                MaxConnectedVehicles;                                     // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FSlotReference                              PowerSlot;                                                // 0x0138(0x0010) (BlueprintVisible)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VehicleSlotComponent");
		return ptr;
	}


	TArray<class UVehicleSlotComponent*> GetConnectedVehicles();
	class UVehicleSlotComponent* STATIC_ActorVehicleSlotComponent(class AActor* Actor);
};


// Class Astro.VehicleTetherAttachComponent
// 0x0010 (0x0218 - 0x0208)
class UVehicleTetherAttachComponent : public UTetherAttachComponent
{
public:
	class UTetherAttachComponent*                      PreviousClosestTetherPost;                                // 0x0208(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UTetherNetwork*                              PreviousTetherNetwork;                                    // 0x0210(0x0008) (ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VehicleTetherAttachComponent");
		return ptr;
	}

};


// Class Astro.VelocityPitchModifierComponent
// 0x0018 (0x0140 - 0x0128)
class UVelocityPitchModifierComponent : public UCameraModifierComponent
{
public:
	float                                              VelocitySmoothing;                                        // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SaturationSpeed;                                          // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0130(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VelocityPitchModifierComponent");
		return ptr;
	}

};


// Class Astro.VintageProbeUnlockBehaviorDefinition
// 0x00C8 (0x0108 - 0x0040)
class UVintageProbeUnlockBehaviorDefinition : public UAstroEntityComponentSubobjectDefinition
{
public:
	class UClass*                                      RealityTearObject;                                        // 0x0040(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      RealityTearFlickerObject;                                 // 0x0048(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FComponentReference                         RealityTearSpawnLocation;                                 // 0x0050(0x0018) (Edit, DisableEditOnInstance)
	struct FAstroNotificationUnlockAuthoringData       ActivatingPlayerUnlockNotification;                       // 0x0068(0x0048) (Edit, DisableEditOnInstance)
	struct FAstroNotificationUnlockAuthoringData       OtherPlayersUnlockNotification;                           // 0x00B0(0x0048) (Edit, DisableEditOnInstance)
	TArray<struct FString>                             UnlockItems;                                              // 0x00F8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VintageProbeUnlockBehaviorDefinition");
		return ptr;
	}

};


// Class Astro.VintageProbeUnlockBehavior
// 0x00F0 (0x0138 - 0x0048)
class UVintageProbeUnlockBehavior : public UUnlockBehavior
{
public:
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0048(0x00F0) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VintageProbeUnlockBehavior");
		return ptr;
	}


	void RespondToLockedStateChanged(const struct FAstroDatumRef& changedLockableComponent, const struct FLockChangedEventMetadata& EventData);
};


// Class Astro.VirtualCursor
// 0x0040 (0x0068 - 0x0028)
class UVirtualCursor : public UObject
{
public:
	unsigned char                                      UnknownData00[0x20];                                      // 0x0028(0x0020) MISSED OFFSET
	class UVirtualCursorWidget*                        CursorWidget;                                             // 0x0048(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0050(0x0018) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VirtualCursor");
		return ptr;
	}

};


// Class Astro.VirtualCursorWidget
// 0x0008 (0x0210 - 0x0208)
class UVirtualCursorWidget : public UUserWidget
{
public:
	bool                                               IsHoveringOverInteractable;                               // 0x0208(0x0001) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0209(0x0007) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VirtualCursorWidget");
		return ptr;
	}

};


// Class Astro.VolumeDistributionComponent
// 0x0030 (0x16A0 - 0x1670)
class UVolumeDistributionComponent : public UTerrainPlacementComponent
{
public:
	float                                              Radius;                                                   // 0x1670(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	EDistributionShape                                 Shape;                                                    // 0x1674(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x1675(0x0003) MISSED OFFSET
	float                                              HalfHeight;                                               // 0x1678(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x167C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	class UClass*                                      Actor;                                                    // 0x1680(0x0008) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	ETerrainPlacementMode                              TerrainMode;                                              // 0x1688(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               UseParentMaterial;                                        // 0x1689(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x168A(0x0002) MISSED OFFSET
	float                                              ActorScaleMin;                                            // 0x168C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ActorScaleMax;                                            // 0x1690(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	bool                                               ScaleFromCenterDistance;                                  // 0x1694(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xB];                                       // 0x1695(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VolumeDistributionComponent");
		return ptr;
	}

};


// Class Astro.VolumeMeshDistribution
// 0x0010 (0x16C0 - 0x16B0)
class UVolumeMeshDistribution : public UMeshDistributionBaseComponent
{
public:
	bool                                               RequireUnderground;                                       // 0x16B0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xF];                                       // 0x16B1(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.VolumeMeshDistribution");
		return ptr;
	}

};


// Class Astro.WandererPhotoWidget
// 0x0020 (0x0230 - 0x0210)
class UWandererPhotoWidget : public UUserWidgetBlueprintDesignable
{
public:
	unsigned char                                      UnknownData00[0x10];                                      // 0x0210(0x0010) MISSED OFFSET
	unsigned char                                      bShowFilterSelection : 1;                                 // 0x0220(0x0001) (BlueprintVisible, BlueprintReadOnly)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0221(0x000F) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WandererPhotoWidget");
		return ptr;
	}


	void ClosePhotoWidget();
};


// Class Astro.WandererRealityTearComponent
// 0x0080 (0x0170 - 0x00F0)
class UWandererRealityTearComponent : public UActorComponent
{
public:
	float                                              DestroyTimeoutSeconds;                                    // 0x00F0(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET
	class UClass*                                      PhotoWidgetClass;                                         // 0x00F8(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FComponentReference                         SceneCaptureComponent;                                    // 0x0100(0x0018) (Edit, DisableEditOnInstance)
	float                                              DeformRadius;                                             // 0x0118(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	TArray<struct FComponentReference>                 DeformLocationComponents;                                 // 0x0120(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	uint64_t                                           ActivatingPlayerID;                                       // 0x0130(0x0008) (Net, ZeroConstructor, SaveGame, IsPlainOldData)
	TArray<struct FString>                             UnlockItems;                                              // 0x0138(0x0010) (ZeroConstructor, SaveGame)
	class UClass*                                      ProbeItemType;                                            // 0x0148(0x0008) (ZeroConstructor, SaveGame, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnActivatingPlayerSet;                                    // 0x0150(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0160(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WandererRealityTearComponent");
		return ptr;
	}


	bool WasActivatedByPlayer(class APlayerController* Player);
	void TakePhoto(class APlayerController* inputPlayer);
	void OnRep_ActivatingPlayer();
	void MarkActivated_AuthorityOnly();
	void DisplayPhotoWidget_Multicast(class AAstroPlayerController* inputPlayer);
	void DisplayPhotoWidget(class APlayerController* inputPlayer);
};


// Class Astro.WheeledChassisAnimInstance
// 0x0140 (0x0510 - 0x03D0)
class UWheeledChassisAnimInstance : public UAnimInstance
{
public:
	unsigned char                                      UnknownData00[0x4];                                       // 0x03D0(0x0004) MISSED OFFSET
	struct FVector                                     Wheel1Right;                                              // 0x03D4(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel2Left;                                               // 0x03E0(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel2Right;                                              // 0x03EC(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel3Left;                                               // 0x03F8(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel3Right;                                              // 0x0404(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel4Left;                                               // 0x0410(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FVector                                     Wheel4Right;                                              // 0x041C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelSteerForward;                                        // 0x0428(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelSteerBackward;                                       // 0x0434(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelHalfSteerForward;                                    // 0x0440(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelHalfSteerBackward;                                   // 0x044C(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelSteerMiddle;                                         // 0x0458(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	struct FRotator                                    WheelRotation;                                            // 0x0464(0x000C) (BlueprintVisible, BlueprintReadOnly, IsPlainOldData)
	float                                              WheelRotationScale;                                       // 0x0470(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WheelMaxSteerAngle;                                       // 0x0474(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              WheelColliderToHubInwardPositionOffset;                   // 0x0478(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x047C(0x0004) MISSED OFFSET
	struct FScriptMulticastDelegate                    OnRoverWheelSteerAnimStateChanged;                        // 0x0480(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FVector                                     Wheel1LeftDefaultLocation;                                // 0x0490(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel1RightDefaultLocation;                               // 0x049C(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel2LeftDefaultLocation;                                // 0x04A8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel2RightDefaultLocation;                               // 0x04B4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel3LeftDefaultLocation;                                // 0x04C0(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel3RightDefaultLocation;                               // 0x04CC(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel4LeftDefaultLocation;                                // 0x04D8(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Wheel4RightDefaultLocation;                               // 0x04E4(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	class UWheeledChassisComponent*                    ChassisComponent;                                         // 0x04F0(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	class UPhysicsMovementComponent*                   MovementComponent;                                        // 0x04F8(0x0008) (ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0500(0x0010) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WheeledChassisAnimInstance");
		return ptr;
	}

};


// Class Astro.WheeledChassisComponent
// 0x0280 (0x0370 - 0x00F0)
class UWheeledChassisComponent : public UActorComponent
{
public:
	float                                              MaxNetworkPositionErrorSquared;                           // 0x00F0(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UprightFlipSpeed;                                         // 0x00F4(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SpringStiffness;                                          // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              SpringDamping;                                            // 0x00FC(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsSleepSpeedThreshold;                               // 0x0100(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PhysicsSleepDelay;                                        // 0x0104(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UActivation*                                 MyActivation;                                             // 0x0108(0x0008) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FScriptMulticastDelegate                    OnImpact;                                                 // 0x0110(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnLand;                                                   // 0x0120(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	struct FScriptMulticastDelegate                    OnVehicleFacingSet;                                       // 0x0130(0x0010) (ZeroConstructor, InstancedReference, BlueprintAssignable)
	float                                              Groundedness;                                             // 0x0140(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnyGroundedness;                                          // 0x0144(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      GroundednessByWheel;                                      // 0x0148(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVector>                             ContactByWheel;                                           // 0x0158(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FVector>                             ImpactNormalByWheel;                                      // 0x0168(0x0010) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor)
	float                                              ImpactThreshold;                                          // 0x0178(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LateralWheelFriction;                                     // 0x017C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              MaxDepenetrationVelocity;                                 // 0x0180(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              CenterOfMassAdjustment;                                   // 0x0184(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TArray<class APhysicalItem*>                       WheelOwners;                                              // 0x0188(0x0010) (ZeroConstructor)
	TArray<class UStaticMeshComponent*>                WheelColliders;                                           // 0x0198(0x0010) (BlueprintVisible, ExportObject, ZeroConstructor)
	TArray<class USceneComponent*>                     WheelAttachParents;                                       // 0x01A8(0x0010) (ExportObject, ZeroConstructor)
	TArray<class USceneComponent*>                     WheelOrigins;                                             // 0x01B8(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UPhysicsConstraintComponent*>         WheelConstraints;                                         // 0x01C8(0x0010) (BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor)
	TArray<class UComponentDelegateWrapper*>           WheelHitDelegates;                                        // 0x01D8(0x0010) (ZeroConstructor)
	TArray<bool>                                       WheelIsSkidding;                                          // 0x01E8(0x0010) (ZeroConstructor)
	int                                                LinkedWheelCount;                                         // 0x01F8(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x24];                                      // 0x01FC(0x0024) MISSED OFFSET
	struct FRepWheeledChassisMovement                  ReplicatedChassisMovement;                                // 0x0220(0x0048) (Net, Transient)
	unsigned char                                      UnknownData01[0x88];                                      // 0x0268(0x0088) MISSED OFFSET
	class APhysicalItem*                               ItemOwner;                                                // 0x02F0(0x0008) (ZeroConstructor, IsPlainOldData)
	class UControlledVehicleMovement*                  ControlledMovementCompt;                                  // 0x02F8(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UPhysicsMovementComponent*                   PhysicsMovementComp;                                      // 0x0300(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	struct FVector                                     Throttle;                                                 // 0x0308(0x000C) (IsPlainOldData)
	unsigned char                                      UnknownData02[0x25];                                      // 0x0314(0x0025) MISSED OFFSET
	unsigned char                                      REP_bIsFlippingUpright : 1;                               // 0x0339(0x0001) (Net, Transient)
	unsigned char                                      UnknownData03 : 1;                                        // 0x0339(0x0001)
	unsigned char                                      REP_bUprightFlipComplete : 1;                             // 0x0339(0x0001) (Net, Transient)
	unsigned char                                      UnknownData04[0x36];                                      // 0x033A(0x0036) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WheeledChassisComponent");
		return ptr;
	}


	void WakePhysics();
	void UpdateVehicleEffects(TArray<class UParticleSystemComponent*> wheelBlows, TArray<struct FName> AudioSurfaceTypes);
	void SleepPhysics(bool sleepAllConnectedVehicles);
	void SetThrottle(const struct FVector& Direction);
	void ServerUpdateUprightFlipComplete(bool bReceivedUprightFlipComplete);
	void ServerUpdateIsFlippingUpright(bool bReceivedIsFlippingUpright);
	void ServerUpdateClientMotionState(const struct FRepWheeledChassisMovement& Movement);
	void SaveGameSerializeCustom(class UAstroSaveCustomArchiveProxy* proxy);
	void Reset();
	void OnWheelHit(class USceneComponent* Component, const struct FVector& Normal, const struct FHitResult& Hit);
	void OnWakePhysics();
	void OnRep_UprightFlipComplete();
	void OnRep_Movement();
	void OnRep_IsFlippingUpright();
	void OnActorHit(class AActor* SelfActor, class AActor* OtherActor, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void AuthorityInitiateUprightFlip(bool initiateFlipOnAllConnectedVehicles);
	void AddWheelCollider(class APhysicalItem* WheelItem, class UStaticMeshComponent* WheelCollider, const struct FWheelInfo& WheelInfo, bool bUseLinearMotors);
};


// Class Astro.WhitelistOrganizationRule
// 0x0008 (0x0078 - 0x0070)
class UWhitelistOrganizationRule : public USlotOrganizationRule
{
public:
	class UClass*                                      ItemTypeWhitelist;                                        // 0x0070(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WhitelistOrganizationRule");
		return ptr;
	}

};


// Class Astro.WindPowerComponent
// 0x0028 (0x0118 - 0x00F0)
class UWindPowerComponent : public UActorComponent
{
public:
	float                                              MinExposure;                                              // 0x00F0(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              MinPowerOutput;                                           // 0x00F4(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	float                                              MaxPowerOutput;                                           // 0x00F8(0x0004) (Edit, BlueprintVisible, ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	class USceneComponent*                             CastComponent;                                            // 0x0100(0x0008) (BlueprintVisible, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              WindExposure;                                             // 0x0108(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              CastDistance;                                             // 0x010C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	class UPowerComponent*                             PowerComponent;                                           // 0x0110(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WindPowerComponent");
		return ptr;
	}

};


// Class Astro.WindPowerGeneratorComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UWindPowerGeneratorComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WindPowerGeneratorComponentContainer");
		return ptr;
	}


	struct FWindPowerGeneratorComponent STATIC_GetWindPowerGeneratorComponent(const struct FAstroDatumRef& WindPowerGeneratorComponentRef, bool* bOutSuccess);
	struct FWindPowerGeneratorComponent STATIC_FindWindPowerGeneratorComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.WindResistance
// 0x0008 (0x00F8 - 0x00F0)
class UWindResistance : public UActorComponent
{
public:
	float                                              SurfaceArea;                                              // 0x00F0(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00F4(0x0004) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WindResistance");
		return ptr;
	}

};


// Class Astro.WorldGravity
// 0x0030 (0x0120 - 0x00F0)
class UWorldGravity : public UActorComponent
{
public:
	TArray<class UPrimitiveComponent*>                 PrimitiveComponents;                                      // 0x00F0(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x14];                                      // 0x0100(0x0014) MISSED OFFSET
	unsigned char                                      Enable : 1;                                               // 0x0114(0x0001) (Edit, BlueprintVisible)
	unsigned char                                      DisableIfNoTerrain : 1;                                   // 0x0114(0x0001) (Edit)
	unsigned char                                      bIsSleeping : 1;                                          // 0x0114(0x0001)
	unsigned char                                      TerrainLODAtLastSleep;                                    // 0x0115(0x0001) (ZeroConstructor, SaveGame, IsPlainOldData)
	unsigned char                                      UnknownData01[0xA];                                       // 0x0116(0x000A) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WorldGravity");
		return ptr;
	}


	void SetComponentTickEnabled(bool bEnabled);
	void OnComponentSleep(class UPrimitiveComponent* SleepingComponent, const struct FName& BoneName);
	void OnComponentAwake(class UPrimitiveComponent* WakingComponent, const struct FName& BoneName);
};


// Class Astro.WwiseConfigurationComponent
// 0x0010 (0x0100 - 0x00F0)
class UWwiseConfigurationComponent : public UActorComponent
{
public:
	TArray<struct FString>                             RequiredAudioBankNames;                                   // 0x00F0(0x0010) (Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.WwiseConfigurationComponent");
		return ptr;
	}

};


// Class Astro.YawCollisionAvoidanceModifierComponent
// 0x0008 (0x0130 - 0x0128)
class UYawCollisionAvoidanceModifierComponent : public UCameraModifierComponent
{
public:
	float                                              WhiskerCastSize;                                          // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              VelocityScaleDivisor;                                     // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.YawCollisionAvoidanceModifierComponent");
		return ptr;
	}

};


// Class Astro.YawControlModifierComponent
// 0x0020 (0x0148 - 0x0128)
class UYawControlModifierComponent : public UCameraModifierComponent
{
public:
	float                                              Speed;                                                    // 0x0128(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadMultiplier;                                        // 0x012C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              MouseSmoothingFactor;                                     // 0x0130(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadSmoothingFactor;                                   // 0x0134(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              GamepadDeadZone;                                          // 0x0138(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	ECameraControlMask                                 ControlMask;                                              // 0x013C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xB];                                       // 0x013D(0x000B) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.YawControlModifierComponent");
		return ptr;
	}

};


// Class Astro.StreamingPowerDirectionalConnectionComponentContainer
// 0x0030 (0x0070 - 0x0040)
class UStreamingPowerDirectionalConnectionComponentContainer : public UAstroEntityComponentContainer
{
public:
	unsigned char                                      UnknownData00[0x30];                                      // 0x0040(0x0030) MISSED OFFSET

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.StreamingPowerDirectionalConnectionComponentContainer");
		return ptr;
	}


	struct FStreamingPowerDirectionalConnectionComponent STATIC_GetStreamingPowerConnectionComponent(const struct FAstroDatumRef& StreamingPowerConnectionComponentRef, bool* bOutSuccess);
	struct FStreamingPowerDirectionalConnectionComponent STATIC_FindStreamingPowerConnectionComponent(const struct FAstroDatumRef& EntityRef, bool* bOutSuccess);
};


// Class Astro.AstroCharacterPalette
// 0x0078 (0x0168 - 0x00F0)
class UAstroCharacterPalette : public UAstroCustomizationItem
{
public:
	unsigned char                                      UnknownData00[0x28];                                      // 0x00F0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty Astro.AstroCharacterPalette.PaletteMaterialInstance
	TMap<class UAstroCharacterSuit*, class UMaterialInstanceConstant*> SuitSpecificMaterialOverrides;                            // 0x0118(0x0050) (Edit, ZeroConstructor)

	static UClass* StaticClass()
	{
		static auto ptr = UObject::FindClass("Class Astro.AstroCharacterPalette");
		return ptr;
	}


	class UMaterialInstanceConstant* GetMaterialInstanceForSuit(class UAstroCharacterSuit* Suit, bool AllowSuitSpecificMaterialOverrides);
	struct FAstroSuitColors GetMaterialColorsForSuit(class UAstroCharacterSuit* Suit);
};


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
